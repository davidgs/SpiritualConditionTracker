cat ../icon-styles.html
<style>
/* Direct font face definitions for all React Native Vector Icons */
@font-face {
  font-family: "MaterialCommunityIcons";
  src: url("/fonts/MaterialCommunityIcons.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "MaterialIcons";
  src: url("/fonts/MaterialIcons.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "FontAwesome";
  src: url("/fonts/FontAwesome.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Ionicons";
  src: url("/fonts/Ionicons.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Feather";
  src: url("/fonts/Feather.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "EvilIcons";
  src: url("/fonts/EvilIcons.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

/* Fix for SVG icons that might have 0 width/height */
svg[width="0"], svg[height="0"] {
  width: 24px !important;
  height: 24px !important;
}

/* Fix for missing Material icons */
.material-icons {
  font-family: 'MaterialIcons' !important;
}
/* Add a CSS class for the hamburger icon */
.hamburger-icon-fix {
  display: inline-block;
  width: 24px;
  height: 24px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' d='M0 0h24v24H0z'/%3E%3Cpath d='M3 4h18v2H3V4zm0 7h18v2H3v-2zm0 7h18v2H3v-2z' fill='currentColor'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: center;
}
/* Target specifically the hamburger icon based on common attributes */
[class*="menu-icon"], [class*="hamburger"], [class*="navbar-toggle"] {
  font-family: 'MaterialIcons', 'MaterialCommunityIcons', sans-serif !important;
}
</style>
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Function to fix hamburger icon specifically
  setTimeout(function() {
    // Find elements likely to be hamburger icons
    const menuIcons = document.querySelectorAll('[class*="menu"], [class*="hamburger"]');

    menuIcons.forEach(icon => {
      // Check if it's likely a hamburger icon by checking classes or content
      if (icon.className.includes('menu') || icon.className.includes('hamburger')) {
        // Add a specific data attribute to identify fixed icons
        icon.setAttribute('data-icon-fixed', 'true');

        // Directly set content for empty elements that might be using font icons
        if (icon.innerHTML.trim() === '' || icon.innerHTML === 'â˜°') {
          icon.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
              <path d="M0 0h24v24H0z" fill="none"/>
              <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z" fill="currentColor"/>
            </svg>
          `;
        }
      }
    });

    // Also look for specific SVG issues
    document.querySelectorAll('svg[width="0"], svg[height="0"]').forEach(svg => {
      svg.setAttribute('width', '24');
      svg.setAttribute('height', '24');
    });

    console.log('Applied hamburger icon fixes');
  }, 1000);
});
</script>
require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('@react-native-community/cli-platform-ios/package.json')"`), "native_modules")

# Disable all new architecture related features
ENV['RCT_NEW_ARCH_ENABLED'] = '0'
ENV['USE_HERMES'] = '0'
ENV['USE_FRAMEWORKS'] = 'static'
ENV['USE_FABRIC'] = '0'
ENV['FABRIC_ENABLED'] = '0'

platform :ios, '16.0'
prepare_react_native_project!

# Create a React Native dependency specification that doesn't include the problematic ReactAppDependencyProvider
def create_overrided_react_native_pods(options={})
  # Extract the version from the path
  react_native_path = options[:path]
  require File.join(react_native_path, "package.json")
  version = package['version']

  # Create a pod specification like the original react_native_pods.rb but without ReactAppDependencyProvider
  pod 'FBLazyVector', :path => "#{react_native_path}/Libraries/FBLazyVector"
  pod 'FBReactNativeSpec', :path => "#{react_native_path}/React/FBReactNativeSpec"
  pod 'RCTRequired', :path => "#{react_native_path}/Libraries/RCTRequired"
  pod 'RCTTypeSafety', :path => "#{react_native_path}/Libraries/TypeSafety"
  pod 'React', :path => "#{react_native_path}/"
  pod 'React-Core', :path => "#{react_native_path}/"
  pod 'React-CoreModules', :path => "#{react_native_path}/React/CoreModules"
  pod 'React-Core/DevSupport', :path => "#{react_native_path}/"
  pod 'React-RCTActionSheet', :path => "#{react_native_path}/Libraries/ActionSheetIOS"
  pod 'React-RCTAnimation', :path => "#{react_native_path}/Libraries/NativeAnimation"
  pod 'React-RCTBlob', :path => "#{react_native_path}/Libraries/Blob"
  pod 'React-RCTImage', :path => "#{react_native_path}/Libraries/Image"
  pod 'React-RCTLinking', :path => "#{react_native_path}/Libraries/LinkingIOS"
  pod 'React-RCTNetwork', :path => "#{react_native_path}/Libraries/Network"
  pod 'React-RCTSettings', :path => "#{react_native_path}/Libraries/Settings"
  pod 'React-RCTText', :path => "#{react_native_path}/Libraries/Text"
  pod 'React-RCTVibration', :path => "#{react_native_path}/Libraries/Vibration"
  pod 'React-Core/RCTWebSocket', :path => "#{react_native_path}/"
  
  # We're intentionally skipping ReactAppDependencyProvider here
  
  pod 'React-cxxreact', :path => "#{react_native_path}/ReactCommon/cxxreact"
  pod 'React-jsiexecutor', :path => "#{react_native_path}/ReactCommon/jsiexecutor"
  pod 'React-jsinspector', :path => "#{react_native_path}/ReactCommon/jsinspector"
  pod 'React-callinvoker', :path => "#{react_native_path}/ReactCommon/callinvoker"
  pod 'React-runtimeexecutor', :path => "#{react_native_path}/ReactCommon/runtimeexecutor"
  pod 'React-perflogger', :path => "#{react_native_path}/ReactCommon/reactperflogger"
  pod 'React-logger', :path => "#{react_native_path}/ReactCommon/logger"
  pod 'ReactCommon/turbomodule/core', :path => "#{react_native_path}/ReactCommon"
  pod 'Yoga', :path => "#{react_native_path}/ReactCommon/yoga", :modular_headers => true
  
  pod 'DoubleConversion', :podspec => "#{react_native_path}/third-party-podspecs/DoubleConversion.podspec"
  pod 'glog', :podspec => "#{react_native_path}/third-party-podspecs/glog.podspec"
  pod 'boost', :podspec => "#{react_native_path}/third-party-podspecs/boost.podspec"
  pod 'RCT-Folly', :podspec => "#{react_native_path}/third-party-podspecs/RCT-Folly.podspec"
end

target 'SpiritualConditionTracker' do
  use_expo_modules!
  
  # Use our custom React Native pods function that excludes ReactAppDependencyProvider
  create_overrided_react_native_pods(
    :path => "../node_modules/react-native"
  )

  post_install do |installer|
    # Configure all targets
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Always use iOS 16.0 minimum
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        
        # Ensure all builds have new architecture disabled
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_NEW_ARCH_ENABLED=0'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FABRIC_ENABLED=0'
        
        # Disable problematic targets
        if ['React-Fabric', 'React-RCTFabric', 'FBReactNativeSpec',
            'React-utils', 'React-bridging', 'React-debug'].include?(target.name)
          
          # Disable the target completely
          config.build_settings['EXCLUDED_ARCHS'] = 'arm64 x86_64 arm64e'
        end
      end
    end
    
    # Run standard React Native post install
    react_native_post_install(
      installer,
      File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts", "react_native_pods.rb"),
      :mac_catalyst_enabled => false
    )
    
    # Fix simulator architecture exclusions
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
    end
  end
end
require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('@react-native-community/cli-platform-ios/package.json')"`), "native_modules")

# Disable all new architecture related features
ENV['RCT_NEW_ARCH_ENABLED'] = '0'
ENV['USE_HERMES'] = '0'
ENV['USE_FRAMEWORKS'] = 'static'
ENV['USE_FABRIC'] = '0'
ENV['FABRIC_ENABLED'] = '0'

platform :ios, '16.0'
prepare_react_native_project!

target 'SpiritualConditionTracker' do
  use_expo_modules!
  use_native_modules!
  
  # Use React Native pods but manually disable ReactAppDependencyProvider
  use_react_native!(
    :path => "../node_modules/react-native",
    :hermes_enabled => false,
    :fabric_enabled => false
  )

  # Exclude problematic pod
  pod 'React-Core', :path => '../node_modules/react-native/', :modular_headers => true, :subspecs => [
    'Default',
    'DevSupport',
    'RCTWebSocket',
  ]
    
  post_install do |installer|
    # Configure all targets
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Always use iOS 16.0 minimum
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        
        # Ensure all builds have new architecture disabled
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_NEW_ARCH_ENABLED=0'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FABRIC_ENABLED=0'
      end
    end
    
    # Run standard React Native post install
    react_native_post_install(
      installer,
      File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts", "react_native_pods.rb"),
      :mac_catalyst_enabled => false
    )
  end
end
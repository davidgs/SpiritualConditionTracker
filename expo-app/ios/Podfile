require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('@react-native-community/cli-platform-ios/package.json')"`), "native_modules")

# Load our custom patch to disable Fabric
require_relative 'Podfile.rb' if File.exist?('Podfile.rb')

platform :ios, '16.0'
prepare_react_native_project!

# Disable Flipper completely for compatibility with EAS builds
ENV['NO_FLIPPER'] = "1"

# Manually disable new architecture and hermes to ensure clean build
ENV['RCT_NEW_ARCH_ENABLED'] = '0'
ENV['USE_HERMES'] = '0'

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'SpiritualConditionTracker' do
  use_expo_modules!
  
  # Define the React Native path directly
  use_react_native!(
    :path => "../node_modules/react-native",
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => false,
    :fabric_enabled => false
  )

  # Additional configurations to prevent fabric-related pods
  post_install do |installer|
    # Set deployment target for all pods
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Ensure minimum iOS version is set for all pods
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        
        # Explicitly set C++ standard
        if config.build_settings['CLANG_CXX_LANGUAGE_STANDARD']
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
        end
        
        # Disable and exclude fabric-related targets
        if target.name.start_with?('React-Fabric') || 
           target.name.include?('Fabric') || 
           target.name.include?('Codegen') ||
           target.name.include?('RuntimeHermes')
          config.build_settings['EXCLUDED_ARCHS'] = 'arm64 x86_64'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_FABRIC_ENABLED=0'
          puts "Disabled #{target.name} (incompatible with our configuration)"
        end
        
        # Fix arm64 architecture for simulators
        if config.build_settings['SDKROOT'] == 'iphoneos' && target.name != 'React-Core-AccessibilityResources'
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        end
      end
    end
    
    # Apply pod install post-processing from React Native
    react_native_post_install(
      installer,
      File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts", "react_native_pods.rb"),
      :mac_catalyst_enabled => false
    )
  end
end
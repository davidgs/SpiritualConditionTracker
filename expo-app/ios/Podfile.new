require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('@react-native-community/cli-platform-ios/package.json')"`), "native_modules")

# Basic environment setup - keep it simple
ENV['RCT_NEW_ARCH_ENABLED'] = '0'
ENV['USE_HERMES'] = '0'
ENV['USE_FRAMEWORKS'] = 'static'

platform :ios, '16.0'
prepare_react_native_project!

target 'SpiritualConditionTracker' do
  use_expo_modules!
  
  # Basic use_react_native with just what we need
  use_react_native!(
    :path => "../node_modules/react-native",
    :hermes_enabled => false,
    :fabric_enabled => false,
    :app_path => ".."
  )
  
  post_install do |installer|
    # Set proper iOS deployment target for all pods
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
        
        # Ensure all builds have new architecture disabled
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_NEW_ARCH_ENABLED=0'
        
        # Handle troublesome targets
        if ['React-Fabric', 'React-RCTFabric', 'FBReactNativeSpec', 
            'ReactAppDependencyProvider', 'React-utils'].include?(target.name)
          config.build_settings['EXCLUDED_ARCHS'] = 'arm64 x86_64'
        end
      end
    end
    
    # Run standard React Native post install
    react_native_post_install(
      installer,
      File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts", "react_native_pods.rb"),
      :mac_catalyst_enabled => false
    )
  end
end
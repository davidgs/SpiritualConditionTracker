{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _TextInputAffix = _interopRequireDefault(require(\"./Adornment/TextInputAffix\"));\nvar _TextInputIcon = _interopRequireDefault(require(\"./Adornment/TextInputIcon\"));\nvar _TextInputFlat = _interopRequireDefault(require(\"./TextInputFlat\"));\nvar _TextInputOutlined = _interopRequireDefault(require(\"./TextInputOutlined\"));\nvar _theming = require(\"../../core/theming\");\nvar _forwardRef = require(\"../../utils/forwardRef\");\nvar _roundLayoutSize = require(\"../../utils/roundLayoutSize\");\nvar _excluded = [\"mode\", \"dense\", \"disabled\", \"error\", \"multiline\", \"editable\", \"contentStyle\", \"render\", \"theme\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar BLUR_ANIMATION_DURATION = 180;\nvar FOCUS_ANIMATION_DURATION = 150;\nvar DefaultRenderer = function DefaultRenderer(props) {\n  return React.createElement(_reactNative.TextInput, props);\n};\nvar TextInput = (0, _forwardRef.forwardRef)(function (_ref, ref) {\n  var _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'flat' : _ref$mode,\n    _ref$dense = _ref.dense,\n    dense = _ref$dense === void 0 ? false : _ref$dense,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$error = _ref.error,\n    errorProp = _ref$error === void 0 ? false : _ref$error,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    contentStyle = _ref.contentStyle,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? DefaultRenderer : _ref$render,\n    themeOverrides = _ref.theme,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var isControlled = rest.value !== undefined;\n  var validInputValue = isControlled ? rest.value : rest.defaultValue;\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(validInputValue ? 0 : 1)),\n    labeled = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new _reactNative.Animated.Value(errorProp ? 1 : 0)),\n    error = _React$useRef2.current;\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    focused = _React$useState2[0],\n    setFocused = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    displayPlaceholder = _React$useState4[0],\n    setDisplayPlaceholder = _React$useState4[1];\n  var _React$useState5 = React.useState(validInputValue),\n    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n    uncontrolledValue = _React$useState6[0],\n    setUncontrolledValue = _React$useState6[1];\n  var value = isControlled ? rest.value : uncontrolledValue;\n  var _React$useState7 = React.useState({\n      width: 33\n    }),\n    _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n    labelTextLayout = _React$useState8[0],\n    setLabelTextLayout = _React$useState8[1];\n  var _React$useState9 = React.useState({\n      width: 65\n    }),\n    _React$useState0 = (0, _slicedToArray2.default)(_React$useState9, 2),\n    inputContainerLayout = _React$useState0[0],\n    setInputContainerLayout = _React$useState0[1];\n  var _React$useState1 = React.useState({\n      measured: false,\n      width: 0,\n      height: 0\n    }),\n    _React$useState10 = (0, _slicedToArray2.default)(_React$useState1, 2),\n    labelLayout = _React$useState10[0],\n    setLabelLayout = _React$useState10[1];\n  var _React$useState11 = React.useState({\n      width: null,\n      height: null\n    }),\n    _React$useState12 = (0, _slicedToArray2.default)(_React$useState11, 2),\n    leftLayout = _React$useState12[0],\n    setLeftLayout = _React$useState12[1];\n  var _React$useState13 = React.useState({\n      width: null,\n      height: null\n    }),\n    _React$useState14 = (0, _slicedToArray2.default)(_React$useState13, 2),\n    rightLayout = _React$useState14[0],\n    setRightLayout = _React$useState14[1];\n  var timer = React.useRef();\n  var root = React.useRef();\n  var scale = theme.animation.scale;\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _root$current;\n        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.focus();\n      },\n      clear: function clear() {\n        var _root$current2;\n        return (_root$current2 = root.current) === null || _root$current2 === void 0 ? void 0 : _root$current2.clear();\n      },\n      setNativeProps: function setNativeProps(args) {\n        var _root$current3;\n        return (_root$current3 = root.current) === null || _root$current3 === void 0 ? void 0 : _root$current3.setNativeProps(args);\n      },\n      isFocused: function isFocused() {\n        var _root$current4;\n        return ((_root$current4 = root.current) === null || _root$current4 === void 0 ? void 0 : _root$current4.isFocused()) || false;\n      },\n      blur: function blur() {\n        var _root$current5;\n        return (_root$current5 = root.current) === null || _root$current5 === void 0 ? void 0 : _root$current5.blur();\n      },\n      forceFocus: function forceFocus() {\n        var _root$current6;\n        return (_root$current6 = root.current) === null || _root$current6 === void 0 ? void 0 : _root$current6.focus();\n      },\n      setSelection: function setSelection(start, end) {\n        var _root$current7;\n        return (_root$current7 = root.current) === null || _root$current7 === void 0 ? void 0 : _root$current7.setSelection(start, end);\n      }\n    };\n  });\n  React.useEffect(function () {\n    if (errorProp) {\n      _reactNative.Animated.timing(error, {\n        toValue: 1,\n        duration: FOCUS_ANIMATION_DURATION * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      {\n        _reactNative.Animated.timing(error, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, [errorProp, scale, error]);\n  React.useEffect(function () {\n    if (focused || !rest.label) {\n      if (rest.placeholder) {\n        timer.current = setTimeout(function () {\n          return setDisplayPlaceholder(true);\n        }, 50);\n      }\n    } else {\n      setDisplayPlaceholder(false);\n    }\n    return function () {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n    };\n  }, [focused, rest.label, rest.placeholder]);\n  React.useEffect(function () {\n    labeled.stopAnimation();\n    if (value || focused) {\n      _reactNative.Animated.timing(labeled, {\n        toValue: 0,\n        duration: BLUR_ANIMATION_DURATION * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      _reactNative.Animated.timing(labeled, {\n        toValue: 1,\n        duration: FOCUS_ANIMATION_DURATION * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [focused, value, labeled, scale]);\n  var onLeftAffixLayoutChange = React.useCallback(function (event) {\n    var height = (0, _roundLayoutSize.roundLayoutSize)(event.nativeEvent.layout.height);\n    var width = (0, _roundLayoutSize.roundLayoutSize)(event.nativeEvent.layout.width);\n    if (width !== leftLayout.width || height !== leftLayout.height) {\n      setLeftLayout({\n        width: width,\n        height: height\n      });\n    }\n  }, [leftLayout.height, leftLayout.width]);\n  var onRightAffixLayoutChange = React.useCallback(function (event) {\n    var width = (0, _roundLayoutSize.roundLayoutSize)(event.nativeEvent.layout.width);\n    var height = (0, _roundLayoutSize.roundLayoutSize)(event.nativeEvent.layout.height);\n    if (width !== rightLayout.width || height !== rightLayout.height) {\n      setRightLayout({\n        width: width,\n        height: height\n      });\n    }\n  }, [rightLayout.height, rightLayout.width]);\n  var handleFocus = function handleFocus(args) {\n    var _rest$onFocus;\n    if (disabled || !editable) {\n      return;\n    }\n    setFocused(true);\n    (_rest$onFocus = rest.onFocus) === null || _rest$onFocus === void 0 ? void 0 : _rest$onFocus.call(rest, args);\n  };\n  var handleBlur = function handleBlur(args) {\n    var _rest$onBlur;\n    if (!editable) {\n      return;\n    }\n    setFocused(false);\n    (_rest$onBlur = rest.onBlur) === null || _rest$onBlur === void 0 ? void 0 : _rest$onBlur.call(rest, args);\n  };\n  var handleChangeText = function handleChangeText(value) {\n    var _rest$onChangeText;\n    if (!editable || disabled) {\n      return;\n    }\n    if (!isControlled) {\n      setUncontrolledValue(value);\n    }\n    (_rest$onChangeText = rest.onChangeText) === null || _rest$onChangeText === void 0 ? void 0 : _rest$onChangeText.call(rest, value);\n  };\n  var handleLayoutAnimatedText = React.useCallback(function (e) {\n    var width = (0, _roundLayoutSize.roundLayoutSize)(e.nativeEvent.layout.width);\n    var height = (0, _roundLayoutSize.roundLayoutSize)(e.nativeEvent.layout.height);\n    if (width !== labelLayout.width || height !== labelLayout.height) {\n      setLabelLayout({\n        width: width,\n        height: height,\n        measured: true\n      });\n    }\n  }, [labelLayout.height, labelLayout.width]);\n  var handleLabelTextLayout = React.useCallback(function (_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    setLabelTextLayout({\n      width: nativeEvent.lines.reduce(function (acc, line) {\n        return acc + Math.ceil(line.width);\n      }, 0)\n    });\n  }, []);\n  var handleInputContainerLayout = React.useCallback(function (_ref3) {\n    var layout = _ref3.nativeEvent.layout;\n    setInputContainerLayout({\n      width: layout.width\n    });\n  }, []);\n  var forceFocus = React.useCallback(function () {\n    var _root$current8;\n    return (_root$current8 = root.current) === null || _root$current8 === void 0 ? void 0 : _root$current8.focus();\n  }, []);\n  var _rest$maxFontSizeMult = rest.maxFontSizeMultiplier,\n    maxFontSizeMultiplier = _rest$maxFontSizeMult === void 0 ? 1.5 : _rest$maxFontSizeMult;\n  var scaledLabel = !!(value || focused);\n  if (mode === 'outlined') {\n    return React.createElement(_TextInputOutlined.default, _extends({\n      dense: dense,\n      disabled: disabled,\n      error: errorProp,\n      multiline: multiline,\n      editable: editable,\n      render: render\n    }, rest, {\n      theme: theme,\n      value: value,\n      parentState: {\n        labeled: labeled,\n        error: error,\n        focused: focused,\n        displayPlaceholder: displayPlaceholder,\n        value: value,\n        labelTextLayout: labelTextLayout,\n        labelLayout: labelLayout,\n        leftLayout: leftLayout,\n        rightLayout: rightLayout,\n        inputContainerLayout: inputContainerLayout\n      },\n      innerRef: function innerRef(ref) {\n        root.current = ref;\n      },\n      onFocus: handleFocus,\n      forceFocus: forceFocus,\n      onBlur: handleBlur,\n      onChangeText: handleChangeText,\n      onLayoutAnimatedText: handleLayoutAnimatedText,\n      onInputLayout: handleInputContainerLayout,\n      onLabelTextLayout: handleLabelTextLayout,\n      onLeftAffixLayoutChange: onLeftAffixLayoutChange,\n      onRightAffixLayoutChange: onRightAffixLayoutChange,\n      maxFontSizeMultiplier: maxFontSizeMultiplier,\n      contentStyle: contentStyle,\n      scaledLabel: scaledLabel\n    }));\n  }\n  return React.createElement(_TextInputFlat.default, _extends({\n    dense: dense,\n    disabled: disabled,\n    error: errorProp,\n    multiline: multiline,\n    editable: editable,\n    render: render\n  }, rest, {\n    theme: theme,\n    value: value,\n    parentState: {\n      labeled: labeled,\n      error: error,\n      focused: focused,\n      displayPlaceholder: displayPlaceholder,\n      value: value,\n      labelTextLayout: labelTextLayout,\n      labelLayout: labelLayout,\n      leftLayout: leftLayout,\n      rightLayout: rightLayout,\n      inputContainerLayout: inputContainerLayout\n    },\n    innerRef: function innerRef(ref) {\n      root.current = ref;\n    },\n    onFocus: handleFocus,\n    forceFocus: forceFocus,\n    onBlur: handleBlur,\n    onInputLayout: handleInputContainerLayout,\n    onChangeText: handleChangeText,\n    onLayoutAnimatedText: handleLayoutAnimatedText,\n    onLabelTextLayout: handleLabelTextLayout,\n    onLeftAffixLayoutChange: onLeftAffixLayoutChange,\n    onRightAffixLayoutChange: onRightAffixLayoutChange,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    contentStyle: contentStyle,\n    scaledLabel: scaledLabel\n  }));\n});\nTextInput.Icon = _TextInputIcon.default;\nTextInput.Affix = _TextInputAffix.default;\nvar _default = exports.default = TextInput;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_TextInputAffix","_interopRequireDefault","_TextInputIcon","_TextInputFlat","_TextInputOutlined","_theming","_forwardRef","_roundLayoutSize","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","DefaultRenderer","props","createElement","NativeTextInput","TextInput","forwardRef","_ref","ref","_ref$mode","mode","_ref$dense","dense","_ref$disabled","disabled","_ref$error","error","errorProp","_ref$multiline","multiline","_ref$editable","editable","contentStyle","_ref$render","render","themeOverrides","theme","rest","_objectWithoutProperties2","useInternalTheme","isControlled","value","undefined","validInputValue","defaultValue","_React$useRef","useRef","Animated","Value","labeled","current","_React$useRef2","_React$useState","useState","_React$useState2","_slicedToArray2","focused","setFocused","_React$useState3","_React$useState4","displayPlaceholder","setDisplayPlaceholder","_React$useState5","_React$useState6","uncontrolledValue","setUncontrolledValue","_React$useState7","width","_React$useState8","labelTextLayout","setLabelTextLayout","_React$useState9","_React$useState0","inputContainerLayout","setInputContainerLayout","_React$useState1","measured","height","_React$useState10","labelLayout","setLabelLayout","_React$useState11","_React$useState12","leftLayout","setLeftLayout","_React$useState13","_React$useState14","rightLayout","setRightLayout","timer","root","scale","animation","useImperativeHandle","focus","_root$current","clear","_root$current2","setNativeProps","args","_root$current3","isFocused","_root$current4","blur","_root$current5","forceFocus","_root$current6","setSelection","start","end","_root$current7","useEffect","timing","toValue","duration","useNativeDriver","label","placeholder","setTimeout","clearTimeout","stopAnimation","onLeftAffixLayoutChange","useCallback","event","roundLayoutSize","nativeEvent","layout","onRightAffixLayoutChange","handleFocus","_rest$onFocus","onFocus","handleBlur","_rest$onBlur","onBlur","handleChangeText","_rest$onChangeText","onChangeText","handleLayoutAnimatedText","handleLabelTextLayout","_ref2","lines","reduce","acc","line","Math","ceil","handleInputContainerLayout","_ref3","_root$current8","_rest$maxFontSizeMult","maxFontSizeMultiplier","scaledLabel","TextInputOutlined","_extends","parentState","innerRef","onLayoutAnimatedText","onInputLayout","onLabelTextLayout","TextInputFlat","Icon","TextInputIcon","Affix","TextInputAffix","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/TextInput/TextInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  TextInput as NativeTextInput,\n  TextStyle,\n  ViewStyle,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\n\nimport TextInputAffix, {\n  Props as TextInputAffixProps,\n} from './Adornment/TextInputAffix';\nimport TextInputIcon, {\n  Props as TextInputIconProps,\n} from './Adornment/TextInputIcon';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputOutlined from './TextInputOutlined';\nimport type { RenderProps, TextInputLabelProp } from './types';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport { roundLayoutSize } from '../../utils/roundLayoutSize';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type Props = React.ComponentPropsWithRef<typeof NativeTextInput> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors?.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text or component to use for the floating label.\n   */\n  label?: TextInputLabelProp;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input. On iOS, it sets both the selection color and cursor color.\n   * On Android, it sets only the selection color.\n   */\n  selectionColor?: string;\n  /**\n   * @platform Android only\n   * Cursor (or \"caret\") color of the input on Android.\n   * This property has no effect on iOS.\n   */\n  cursorColor?: string;\n  /**\n   * Inactive underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Active underline color of the input.\n   */\n  activeUnderlineColor?: string;\n  /**\n   * Inactive outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Active outline color of the input.\n   */\n  activeOutlineColor?: string;\n  /**\n   * Color of the text in the input.\n   */\n  textColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * @platform Android only\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Pass custom style directly to the input itself.\n   * Overrides input style\n   * Example: `paddingLeft`, `backgroundColor`\n   */\n  contentStyle?: StyleProp<TextStyle>;\n  /**\n   * Pass style to override the default style of outlined wrapper.\n   * Overrides style when mode is set to `outlined`\n   * Example: `borderRadius`, `borderColor`\n   */\n  outlineStyle?: StyleProp<ViewStyle>;\n  /**\n   * Pass style to override the default style of underlined wrapper.\n   * Overrides style when mode is set to `flat`\n   * Example: `borderRadius`, `borderColor`\n   */\n  underlineStyle?: StyleProp<ViewStyle>;\n};\n\ninterface CompoundedComponent\n  extends React.ForwardRefExoticComponent<\n    Props & React.RefAttributes<TextInputHandles>\n  > {\n  Icon: React.FunctionComponent<TextInputIconProps>;\n  Affix: React.FunctionComponent<Partial<TextInputAffixProps>>;\n}\n\ntype TextInputHandles = Pick<\n  NativeTextInput,\n  'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps' | 'setSelection'\n>;\n\nconst DefaultRenderer = (props: RenderProps) => <NativeTextInput {...props} />;\n\n/**\n * A component to allow users to input text.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState(\"\");\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\nconst TextInput = forwardRef<TextInputHandles, Props>(\n  (\n    {\n      mode = 'flat',\n      dense = false,\n      disabled = false,\n      error: errorProp = false,\n      multiline = false,\n      editable = true,\n      contentStyle,\n      render = DefaultRenderer,\n      theme: themeOverrides,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const isControlled = rest.value !== undefined;\n    const validInputValue = isControlled ? rest.value : rest.defaultValue;\n\n    const { current: labeled } = React.useRef<Animated.Value>(\n      new Animated.Value(validInputValue ? 0 : 1)\n    );\n    const { current: error } = React.useRef<Animated.Value>(\n      new Animated.Value(errorProp ? 1 : 0)\n    );\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [displayPlaceholder, setDisplayPlaceholder] =\n      React.useState<boolean>(false);\n    const [uncontrolledValue, setUncontrolledValue] = React.useState<\n      string | undefined\n    >(validInputValue);\n    // Use value from props instead of local state when input is controlled\n    const value = isControlled ? rest.value : uncontrolledValue;\n\n    const [labelTextLayout, setLabelTextLayout] = React.useState({\n      width: 33,\n    });\n\n    const [inputContainerLayout, setInputContainerLayout] = React.useState({\n      width: 65,\n    });\n\n    const [labelLayout, setLabelLayout] = React.useState<{\n      measured: boolean;\n      width: number;\n      height: number;\n    }>({\n      measured: false,\n      width: 0,\n      height: 0,\n    });\n    const [leftLayout, setLeftLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n    const [rightLayout, setRightLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n\n    const timer = React.useRef<NodeJS.Timeout | undefined>();\n\n    const root = React.useRef<NativeTextInput | undefined | null>();\n\n    const { scale } = theme.animation;\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      forceFocus: () => root.current?.focus(),\n      setSelection: (start: number, end: number) =>\n        root.current?.setSelection(start, end),\n    }));\n\n    React.useEffect(() => {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (errorProp) {\n        // show error\n        Animated.timing(error, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // hide error\n        {\n          Animated.timing(error, {\n            toValue: 0,\n            duration: BLUR_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [errorProp, scale, error]);\n\n    React.useEffect(() => {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (focused || !rest.label) {\n        // If the user wants to use the contextMenu, when changing the placeholder, the contextMenu is closed\n        // This is a workaround to mitigate this behavior in scenarios where the placeholder is not specified.\n        if (rest.placeholder) {\n          // Display placeholder in a delay to offset the label animation\n          // If we show it immediately, they'll overlap and look ugly\n          timer.current = setTimeout(\n            () => setDisplayPlaceholder(true),\n            50\n          ) as unknown as NodeJS.Timeout;\n        }\n      } else {\n        // hidePlaceholder\n        setDisplayPlaceholder(false);\n      }\n\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n      };\n    }, [focused, rest.label, rest.placeholder]);\n\n    React.useEffect(() => {\n      labeled.stopAnimation();\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      if (value || focused) {\n        // minimize label\n        Animated.timing(labeled, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // restore label\n        Animated.timing(labeled, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      }\n    }, [focused, value, labeled, scale]);\n\n    const onLeftAffixLayoutChange = React.useCallback(\n      (event: LayoutChangeEvent) => {\n        const height = roundLayoutSize(event.nativeEvent.layout.height);\n        const width = roundLayoutSize(event.nativeEvent.layout.width);\n\n        if (width !== leftLayout.width || height !== leftLayout.height) {\n          setLeftLayout({\n            width,\n            height,\n          });\n        }\n      },\n      [leftLayout.height, leftLayout.width]\n    );\n\n    const onRightAffixLayoutChange = React.useCallback(\n      (event: LayoutChangeEvent) => {\n        const width = roundLayoutSize(event.nativeEvent.layout.width);\n        const height = roundLayoutSize(event.nativeEvent.layout.height);\n\n        if (width !== rightLayout.width || height !== rightLayout.height) {\n          setRightLayout({\n            width,\n            height,\n          });\n        }\n      },\n      [rightLayout.height, rightLayout.width]\n    );\n\n    const handleFocus = (args: any) => {\n      if (disabled || !editable) {\n        return;\n      }\n\n      setFocused(true);\n\n      rest.onFocus?.(args);\n    };\n\n    const handleBlur = (args: Object) => {\n      if (!editable) {\n        return;\n      }\n\n      setFocused(false);\n      rest.onBlur?.(args);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (!editable || disabled) {\n        return;\n      }\n\n      if (!isControlled) {\n        // Keep track of value in local state when input is not controlled\n        setUncontrolledValue(value);\n      }\n      rest.onChangeText?.(value);\n    };\n\n    const handleLayoutAnimatedText = React.useCallback(\n      (e: LayoutChangeEvent) => {\n        const width = roundLayoutSize(e.nativeEvent.layout.width);\n        const height = roundLayoutSize(e.nativeEvent.layout.height);\n\n        if (width !== labelLayout.width || height !== labelLayout.height) {\n          setLabelLayout({\n            width,\n            height,\n            measured: true,\n          });\n        }\n      },\n      [labelLayout.height, labelLayout.width]\n    );\n\n    const handleLabelTextLayout = React.useCallback(\n      ({ nativeEvent }: NativeSyntheticEvent<TextLayoutEventData>) => {\n        setLabelTextLayout({\n          width: nativeEvent.lines.reduce(\n            (acc, line) => acc + Math.ceil(line.width),\n            0\n          ),\n        });\n      },\n      []\n    );\n\n    const handleInputContainerLayout = React.useCallback(\n      ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n        setInputContainerLayout({\n          width: layout.width,\n        });\n      },\n      []\n    );\n\n    const forceFocus = React.useCallback(() => root.current?.focus(), []);\n\n    const { maxFontSizeMultiplier = 1.5 } = rest;\n\n    const scaledLabel = !!(value || focused);\n\n    if (mode === 'outlined') {\n      return (\n        <TextInputOutlined\n          dense={dense}\n          disabled={disabled}\n          error={errorProp}\n          multiline={multiline}\n          editable={editable}\n          render={render}\n          {...rest}\n          theme={theme}\n          value={value}\n          parentState={{\n            labeled,\n            error,\n            focused,\n            displayPlaceholder,\n            value,\n            labelTextLayout,\n            labelLayout,\n            leftLayout,\n            rightLayout,\n            inputContainerLayout,\n          }}\n          innerRef={(ref) => {\n            root.current = ref;\n          }}\n          onFocus={handleFocus}\n          forceFocus={forceFocus}\n          onBlur={handleBlur}\n          onChangeText={handleChangeText}\n          onLayoutAnimatedText={handleLayoutAnimatedText}\n          onInputLayout={handleInputContainerLayout}\n          onLabelTextLayout={handleLabelTextLayout}\n          onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n          onRightAffixLayoutChange={onRightAffixLayoutChange}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n          contentStyle={contentStyle}\n          scaledLabel={scaledLabel}\n        />\n      );\n    }\n\n    return (\n      <TextInputFlat\n        dense={dense}\n        disabled={disabled}\n        error={errorProp}\n        multiline={multiline}\n        editable={editable}\n        render={render}\n        {...rest}\n        theme={theme}\n        value={value}\n        parentState={{\n          labeled,\n          error,\n          focused,\n          displayPlaceholder,\n          value,\n          labelTextLayout,\n          labelLayout,\n          leftLayout,\n          rightLayout,\n          inputContainerLayout,\n        }}\n        innerRef={(ref) => {\n          root.current = ref;\n        }}\n        onFocus={handleFocus}\n        forceFocus={forceFocus}\n        onBlur={handleBlur}\n        onInputLayout={handleInputContainerLayout}\n        onChangeText={handleChangeText}\n        onLayoutAnimatedText={handleLayoutAnimatedText}\n        onLabelTextLayout={handleLabelTextLayout}\n        onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={onRightAffixLayoutChange}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        contentStyle={contentStyle}\n        scaledLabel={scaledLabel}\n      />\n    );\n  }\n) as CompoundedComponent;\n// @component ./Adornment/TextInputIcon.tsx\nTextInput.Icon = TextInputIcon;\n\n// @component ./Adornment/TextInputAffix.tsx\n// @ts-ignore Types of property 'theme' are incompatible.\nTextInput.Affix = TextInputAffix;\n\nexport default TextInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
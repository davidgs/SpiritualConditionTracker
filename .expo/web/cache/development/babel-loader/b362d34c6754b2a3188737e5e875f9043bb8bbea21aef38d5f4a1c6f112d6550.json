{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theming = require(\"../../core/theming\");\nvar _Badge = _interopRequireDefault(require(\"../Badge\"));\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _excluded = [\"focusedIcon\", \"unfocusedIcon\", \"label\", \"active\", \"theme\", \"style\", \"onPress\", \"disabled\", \"accessibilityLabel\", \"badge\", \"testID\", \"labelMaxFontSizeMultiplier\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar badgeSize = 8;\nvar iconSize = 24;\nvar itemSize = 56;\nvar outlineHeight = 32;\nvar DrawerCollapsedItem = function DrawerCollapsedItem(_ref) {\n  var focusedIcon = _ref.focusedIcon,\n    unfocusedIcon = _ref.unfocusedIcon,\n    label = _ref.label,\n    active = _ref.active,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    onPress = _ref.onPress,\n    disabled = _ref.disabled,\n    accessibilityLabel = _ref.accessibilityLabel,\n    _ref$badge = _ref.badge,\n    badge = _ref$badge === void 0 ? false : _ref$badge,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'drawer-collapsed-item' : _ref$testID,\n    labelMaxFontSizeMultiplier = _ref.labelMaxFontSizeMultiplier,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var isV3 = theme.isV3;\n  var scale = theme.animation.scale;\n  var _React$useState = React.useState(1),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    numOfLines = _React$useState2[0],\n    setNumOfLines = _React$useState2[1];\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(active ? 1 : 0.5)),\n    animScale = _React$useRef.current;\n  React.useEffect(function () {\n    if (!active) {\n      animScale.setValue(0.5);\n    }\n  }, [animScale, active]);\n  if (!isV3) {\n    return null;\n  }\n  var handlePressOut = function handlePressOut() {\n    _reactNative.Animated.timing(animScale, {\n      toValue: 1,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  var iconPadding = ((!label ? itemSize : outlineHeight) - iconSize) / 2;\n  var backgroundColor = active ? theme.colors.secondaryContainer : 'transparent';\n  var labelColor = active ? theme.colors.onSurface : theme.colors.onSurfaceVariant;\n  var iconColor = active ? theme.colors.onSecondaryContainer : theme.colors.onSurfaceVariant;\n  var onTextLayout = function onTextLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    setNumOfLines(nativeEvent.lines.length);\n  };\n  var androidLetterSpacingStyle = _reactNative.Platform.OS === 'android' && numOfLines > 4 && styles.letterSpacing;\n  var labelTextStyle = Object.assign({\n    color: labelColor\n  }, isV3 ? theme.fonts.labelMedium : {});\n  var icon = !active && unfocusedIcon !== undefined ? unfocusedIcon : focusedIcon;\n  return React.createElement(_reactNative.View, rest, React.createElement(_reactNative.Pressable, {\n    onPress: onPress,\n    onPressOut: onPress ? handlePressOut : undefined,\n    disabled: disabled,\n    accessibilityTraits: active ? ['button', 'selected'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID\n  }, React.createElement(_reactNative.View, {\n    style: styles.wrapper\n  }, React.createElement(_reactNative.Animated.View, {\n    style: [styles.outline, !label && styles.roundedOutline, {\n      transform: [label ? {\n        scaleX: animScale\n      } : {\n        scale: animScale\n      }],\n      backgroundColor: backgroundColor\n    }, style],\n    testID: `${testID}-outline`\n  }), React.createElement(_reactNative.View, {\n    style: [styles.icon, {\n      top: iconPadding\n    }],\n    testID: `${testID}-container`\n  }, badge !== false && React.createElement(_reactNative.View, {\n    style: styles.badgeContainer\n  }, typeof badge === 'boolean' ? React.createElement(_Badge.default, {\n    visible: badge,\n    size: badgeSize\n  }) : React.createElement(_Badge.default, {\n    visible: badge != null,\n    size: 2 * badgeSize\n  }, badge)), React.createElement(_Icon.default, {\n    source: icon,\n    size: iconSize,\n    color: iconColor\n  })), label ? React.createElement(_Text.default, {\n    variant: \"labelMedium\",\n    selectable: false,\n    numberOfLines: 2,\n    onTextLayout: onTextLayout,\n    style: [styles.label, androidLetterSpacingStyle, labelTextStyle],\n    maxFontSizeMultiplier: labelMaxFontSizeMultiplier\n  }, label) : null)));\n};\nDrawerCollapsedItem.displayName = 'Drawer.CollapsedItem';\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    width: 80,\n    marginBottom: 12,\n    minHeight: itemSize,\n    alignItems: 'center'\n  },\n  outline: {\n    width: itemSize,\n    height: outlineHeight,\n    borderRadius: itemSize / 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  roundedOutline: {\n    height: itemSize\n  },\n  icon: {\n    position: 'absolute'\n  },\n  letterSpacing: {\n    letterSpacing: 0.3,\n    alignSelf: 'stretch'\n  },\n  label: {\n    marginHorizontal: 12,\n    marginTop: 4,\n    textAlign: 'center'\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 20,\n    bottom: 20,\n    zIndex: 2\n  }\n});\nvar _default = exports.default = DrawerCollapsedItem;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_theming","_Badge","_interopRequireDefault","_Icon","_Text","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","badgeSize","iconSize","itemSize","outlineHeight","DrawerCollapsedItem","_ref","focusedIcon","unfocusedIcon","label","active","themeOverrides","theme","style","onPress","disabled","accessibilityLabel","_ref$badge","badge","_ref$testID","testID","labelMaxFontSizeMultiplier","rest","_objectWithoutProperties2","useInternalTheme","isV3","scale","animation","_React$useState","useState","_React$useState2","_slicedToArray2","numOfLines","setNumOfLines","_React$useRef","useRef","Animated","Value","animScale","current","useEffect","setValue","handlePressOut","timing","toValue","duration","useNativeDriver","start","iconPadding","backgroundColor","colors","secondaryContainer","labelColor","onSurface","onSurfaceVariant","iconColor","onSecondaryContainer","onTextLayout","_ref2","nativeEvent","lines","length","androidLetterSpacingStyle","Platform","OS","styles","letterSpacing","labelTextStyle","assign","color","fonts","labelMedium","icon","undefined","createElement","View","Pressable","onPressOut","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","selected","wrapper","outline","roundedOutline","transform","scaleX","top","badgeContainer","Badge","visible","size","Icon","source","Text","variant","selectable","numberOfLines","maxFontSizeMultiplier","displayName","StyleSheet","create","width","marginBottom","minHeight","alignItems","height","borderRadius","justifyContent","position","alignSelf","marginHorizontal","marginTop","textAlign","left","bottom","zIndex","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/Drawer/DrawerCollapsedItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  Platform,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  TextLayoutEventData,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Badge from '../Badge';\nimport Icon, { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label?: string;\n  /**\n   * Badge to show on the icon, can be `true` to show a dot, `string` or `number` to show text.\n   */\n  badge?: string | number | boolean;\n  /**\n   * Whether the item is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * Icon to use as the focused destination icon, can be a string, an image source or a react component\n   */\n  focusedIcon?: IconSource;\n  /**\n   * @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * Icon to use as the unfocused destination icon, can be a string, an image source or a react component\n   */\n  unfocusedIcon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst badgeSize = 8;\nconst iconSize = 24;\nconst itemSize = 56;\nconst outlineHeight = 32;\n\n/**\n * Note: Available in v5.x with theme version 3\n *\n * Collapsed component used to show an action item with an icon and optionally label in a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.CollapsedItem\n *      focusedIcon=\"inbox\"\n *      unfocusedIcon=\"inbox-outline\"\n *      label=\"Inbox\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerCollapsedItem = ({\n  focusedIcon,\n  unfocusedIcon,\n  label,\n  active,\n  theme: themeOverrides,\n  style,\n  onPress,\n  disabled,\n  accessibilityLabel,\n  badge = false,\n  testID = 'drawer-collapsed-item',\n  labelMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3 } = theme;\n  const { scale } = theme.animation;\n\n  const [numOfLines, setNumOfLines] = React.useState(1);\n\n  const { current: animScale } = React.useRef<Animated.Value>(\n    new Animated.Value(active ? 1 : 0.5)\n  );\n\n  React.useEffect(() => {\n    if (!active) {\n      animScale.setValue(0.5);\n    }\n  }, [animScale, active]);\n\n  if (!isV3) {\n    return null;\n  }\n\n  const handlePressOut = () => {\n    Animated.timing(animScale, {\n      toValue: 1,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const iconPadding = ((!label ? itemSize : outlineHeight) - iconSize) / 2;\n\n  const backgroundColor = active\n    ? theme.colors.secondaryContainer\n    : 'transparent';\n  const labelColor = active\n    ? theme.colors.onSurface\n    : theme.colors.onSurfaceVariant;\n  const iconColor = active\n    ? theme.colors.onSecondaryContainer\n    : theme.colors.onSurfaceVariant;\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    setNumOfLines(nativeEvent.lines.length);\n  };\n\n  // Label is cut off on Android, when centered \"labelMedium\" text\n  // has more than 4 lines, so there is a need to decrease the letter spacing.\n  const androidLetterSpacingStyle =\n    Platform.OS === 'android' && numOfLines > 4 && styles.letterSpacing;\n\n  const labelTextStyle = {\n    color: labelColor,\n    ...(isV3 ? theme.fonts.labelMedium : {}),\n  };\n\n  const icon =\n    !active && unfocusedIcon !== undefined ? unfocusedIcon : focusedIcon;\n\n  return (\n    <View {...rest}>\n      {/* eslint-disable-next-line react-native-a11y/has-accessibility-props */}\n      <Pressable\n        onPress={onPress}\n        onPressOut={onPress ? handlePressOut : undefined}\n        disabled={disabled}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={active ? ['button', 'selected'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        testID={testID}\n      >\n        <View style={styles.wrapper}>\n          <Animated.View\n            style={[\n              styles.outline,\n              !label && styles.roundedOutline,\n              {\n                transform: [\n                  label\n                    ? {\n                        scaleX: animScale,\n                      }\n                    : { scale: animScale },\n                ],\n                backgroundColor,\n              },\n              style,\n            ]}\n            testID={`${testID}-outline`}\n          />\n\n          <View\n            style={[styles.icon, { top: iconPadding }]}\n            testID={`${testID}-container`}\n          >\n            {badge !== false && (\n              <View style={styles.badgeContainer}>\n                {typeof badge === 'boolean' ? (\n                  <Badge visible={badge} size={badgeSize} />\n                ) : (\n                  <Badge visible={badge != null} size={2 * badgeSize}>\n                    {badge}\n                  </Badge>\n                )}\n              </View>\n            )}\n            <Icon source={icon} size={iconSize} color={iconColor} />\n          </View>\n\n          {label ? (\n            <Text\n              variant=\"labelMedium\"\n              selectable={false}\n              numberOfLines={2}\n              onTextLayout={onTextLayout}\n              style={[styles.label, androidLetterSpacingStyle, labelTextStyle]}\n              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n            >\n              {label}\n            </Text>\n          ) : null}\n        </View>\n      </Pressable>\n    </View>\n  );\n};\n\nDrawerCollapsedItem.displayName = 'Drawer.CollapsedItem';\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    width: 80,\n    marginBottom: 12,\n    minHeight: itemSize,\n    alignItems: 'center',\n  },\n  outline: {\n    width: itemSize,\n    height: outlineHeight,\n    borderRadius: itemSize / 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  roundedOutline: {\n    height: itemSize,\n  },\n  icon: {\n    position: 'absolute',\n  },\n  letterSpacing: {\n    letterSpacing: 0.3,\n    alignSelf: 'stretch',\n  },\n  label: {\n    marginHorizontal: 12,\n    marginTop: 4,\n    textAlign: 'center',\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 20,\n    bottom: 20,\n    zIndex: 2,\n  },\n});\n\nexport default DrawerCollapsedItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
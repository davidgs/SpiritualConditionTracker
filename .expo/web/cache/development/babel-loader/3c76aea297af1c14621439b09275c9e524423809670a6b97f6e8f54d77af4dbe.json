{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Outline = require(\"./Addons/Outline\");\nvar _enums = require(\"./Adornment/enums\");\nvar _TextInputAdornment = _interopRequireWildcard(require(\"./Adornment/TextInputAdornment\"));\nvar _constants = require(\"./constants\");\nvar _helpers = require(\"./helpers\");\nvar _InputLabel = _interopRequireDefault(require(\"./Label/InputLabel\"));\nvar _LabelBackground = _interopRequireDefault(require(\"./Label/LabelBackground\"));\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"cursorColor\", \"underlineColor\", \"outlineColor\", \"activeOutlineColor\", \"outlineStyle\", \"textColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLabelTextLayout\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"onInputLayout\", \"onLayout\", \"left\", \"right\", \"placeholderTextColor\", \"testID\", \"contentStyle\", \"scaledLabel\"],\n  _excluded2 = [\"fontSize\", \"fontWeight\", \"lineHeight\", \"height\", \"backgroundColor\", \"textAlign\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar TextInputOutlined = function TextInputOutlined(_ref) {\n  var _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    label = _ref.label,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    customSelectionColor = _ref.selectionColor,\n    cursorColor = _ref.cursorColor,\n    _underlineColor = _ref.underlineColor,\n    customOutlineColor = _ref.outlineColor,\n    activeOutlineColor = _ref.activeOutlineColor,\n    outlineStyle = _ref.outlineStyle,\n    textColor = _ref.textColor,\n    dense = _ref.dense,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(_reactNative.TextInput, props);\n    } : _ref$render,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    parentState = _ref.parentState,\n    innerRef = _ref.innerRef,\n    onFocus = _ref.onFocus,\n    forceFocus = _ref.forceFocus,\n    onBlur = _ref.onBlur,\n    onChangeText = _ref.onChangeText,\n    onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n    onLabelTextLayout = _ref.onLabelTextLayout,\n    onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n    onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n    onInputLayout = _ref.onInputLayout,\n    onLayout = _ref.onLayout,\n    left = _ref.left,\n    right = _ref.right,\n    placeholderTextColor = _ref.placeholderTextColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'text-input-outlined' : _ref$testID,\n    contentStyle = _ref.contentStyle,\n    scaledLabel = _ref.scaledLabel,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var adornmentConfig = (0, _TextInputAdornment.getAdornmentConfig)({\n    left: left,\n    right: right\n  });\n  var colors = theme.colors,\n    isV3 = theme.isV3,\n    roundness = theme.roundness;\n  var font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n  var _getConstants = (0, _helpers.getConstants)(isV3),\n    INPUT_PADDING_HORIZONTAL = _getConstants.INPUT_PADDING_HORIZONTAL,\n    MIN_HEIGHT = _getConstants.MIN_HEIGHT,\n    ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET,\n    MIN_WIDTH = _getConstants.MIN_WIDTH;\n  var _ref4 = _reactNative.StyleSheet.flatten(style) || {},\n    fontSizeStyle = _ref4.fontSize,\n    fontWeight = _ref4.fontWeight,\n    lineHeightStyle = _ref4.lineHeight,\n    height = _ref4.height,\n    _ref4$backgroundColor = _ref4.backgroundColor,\n    backgroundColor = _ref4$backgroundColor === void 0 ? colors === null || colors === void 0 ? void 0 : colors.background : _ref4$backgroundColor,\n    textAlign = _ref4.textAlign,\n    viewStyle = (0, _objectWithoutProperties2.default)(_ref4, _excluded2);\n  var fontSize = fontSizeStyle || _constants.MAXIMIZED_LABEL_FONT_SIZE;\n  var lineHeight = lineHeightStyle || (_reactNative.Platform.OS === 'web' ? fontSize * 1.2 : undefined);\n  var _getOutlinedInputColo = (0, _helpers.getOutlinedInputColors)({\n      activeOutlineColor: activeOutlineColor,\n      customOutlineColor: customOutlineColor,\n      customSelectionColor: customSelectionColor,\n      textColor: textColor,\n      disabled: disabled,\n      error: error,\n      theme: theme\n    }),\n    inputTextColor = _getOutlinedInputColo.inputTextColor,\n    activeColor = _getOutlinedInputColo.activeColor,\n    outlineColor = _getOutlinedInputColo.outlineColor,\n    placeholderColor = _getOutlinedInputColo.placeholderColor,\n    errorColor = _getOutlinedInputColo.errorColor,\n    selectionColor = _getOutlinedInputColo.selectionColor;\n  var densePaddingTop = label ? _constants.LABEL_PADDING_TOP_DENSE : 0;\n  var paddingTop = label ? _constants.LABEL_PADDING_TOP : 0;\n  var yOffset = label ? _constants.OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\n  var labelScale = _constants.MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = _constants.MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (_reactNative.I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - _constants.MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n  var labelTranslationXOffset = 0;\n  var isAdornmentLeftIcon = adornmentConfig.some(function (_ref2) {\n    var side = _ref2.side,\n      type = _ref2.type;\n    return side === _enums.AdornmentSide.Left && type === _enums.AdornmentType.Icon;\n  });\n  var isAdornmentRightIcon = adornmentConfig.some(function (_ref3) {\n    var side = _ref3.side,\n      type = _ref3.type;\n    return side === _enums.AdornmentSide.Right && type === _enums.AdornmentType.Icon;\n  });\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset = (_reactNative.I18nManager.getConstants().isRTL ? -1 : 1) * (_constants.ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n  var minInputHeight = (dense ? _constants.MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\n  var inputHeight = (0, _helpers.calculateInputHeight)(labelHeight, height, minInputHeight);\n  var topPosition = (0, _helpers.calculateLabelTopPosition)(labelHeight, inputHeight, paddingTop);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: paddingTop,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    label: label,\n    scale: fontScale,\n    isAndroid: _reactNative.Platform.OS === 'android',\n    styles: _reactNative.StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n  };\n  var pad = (0, _helpers.calculatePadding)(paddingSettings);\n  var paddingOut = (0, _helpers.adjustPaddingOut)(Object.assign({}, paddingSettings, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\n  var _React$useRef = React.useRef([new _reactNative.Animated.Value(0), new _reactNative.Animated.Value(1)]),\n    placeholderOpacityAnims = _React$useRef.current;\n  var placeholderOpacity = hasActiveOutline ? parentState.labeled : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n  var placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  };\n  var placeholderTextColorBasedOnState = parentState.displayPlaceholder ? placeholderTextColor != null ? placeholderTextColor : placeholderColor : 'transparent';\n  var labelBackgroundColor = backgroundColor === 'transparent' ? theme.colors.background : backgroundColor;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    onLabelTextLayout: onLabelTextLayout,\n    placeholderOpacity: placeholderOpacity,\n    labelError: error,\n    placeholderStyle: placeholderStyle,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: _constants.LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor: errorColor,\n    labelTranslationXOffset: labelTranslationXOffset,\n    roundness: roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID: testID,\n    contentStyle: contentStyle,\n    inputContainerLayout: {\n      width: parentState.inputContainerLayout.width + (isAdornmentRightIcon || isAdornmentLeftIcon ? INPUT_PADDING_HORIZONTAL : 0)\n    },\n    opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1,\n    isV3: isV3\n  };\n  var onLayoutChange = React.useCallback(function (e) {\n    onInputLayout(e);\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(e);\n  }, [onLayout, onInputLayout]);\n  var minHeight = height || (dense ? _constants.MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT);\n  var outlinedHeight = inputHeight + (dense ? densePaddingTop / 2 : paddingTop);\n  var leftLayout = parentState.leftLayout,\n    rightLayout = parentState.rightLayout;\n  var leftAffixTopPosition = (0, _helpers.calculateOutlinedIconAndAffixTopPosition)({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -yOffset\n  });\n  var rightAffixTopPosition = (0, _helpers.calculateOutlinedIconAndAffixTopPosition)({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -yOffset\n  });\n  var iconTopPosition = (0, _helpers.calculateOutlinedIconAndAffixTopPosition)({\n    height: outlinedHeight,\n    affixHeight: _constants.ADORNMENT_SIZE,\n    labelYOffset: -yOffset\n  });\n  var rightAffixWidth = right ? rightLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = (0, _TextInputAdornment.getAdornmentStyleAdjustmentForNativeInput)({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    mode: 'outlined',\n    isV3: isV3\n  });\n  var affixTopPosition = (0, _defineProperty2.default)((0, _defineProperty2.default)({}, _enums.AdornmentSide.Left, leftAffixTopPosition), _enums.AdornmentSide.Right, rightAffixTopPosition);\n  var onAffixChange = (0, _defineProperty2.default)((0, _defineProperty2.default)({}, _enums.AdornmentSide.Left, onLeftAffixLayoutChange), _enums.AdornmentSide.Right, onRightAffixLayoutChange);\n  var adornmentProps = {\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (0, _defineProperty2.default)((0, _defineProperty2.default)({}, _enums.AdornmentType.Icon, iconTopPosition), _enums.AdornmentType.Affix, affixTopPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled: disabled\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = Object.assign({}, adornmentProps, {\n      left: left,\n      right: right,\n      textStyle: Object.assign({}, font, {\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(_reactNative.View, {\n    style: viewStyle\n  }, React.createElement(_Outline.Outline, {\n    isV3: isV3,\n    style: outlineStyle,\n    label: label,\n    roundness: roundness,\n    hasActiveOutline: hasActiveOutline,\n    focused: parentState.focused,\n    activeColor: activeColor,\n    outlineColor: outlineColor,\n    backgroundColor: backgroundColor\n  }), React.createElement(_reactNative.View, {\n    style: [styles.labelContainer, {\n      paddingTop: paddingTop,\n      minHeight: minHeight\n    }]\n  }, label ? React.createElement(_InputLabel.default, _extends({\n    labeled: parentState.labeled,\n    error: parentState.error,\n    focused: parentState.focused,\n    scaledLabel: scaledLabel,\n    wiggle: Boolean(parentState.value && labelProps.labelError),\n    labelLayoutMeasured: parentState.labelLayout.measured,\n    labelLayoutWidth: parentState.labelLayout.width,\n    labelLayoutHeight: parentState.labelLayout.height\n  }, labelProps, {\n    labelBackground: _LabelBackground.default,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  })) : null, render === null || render === void 0 ? void 0 : render(Object.assign({}, rest, {\n    ref: innerRef,\n    onLayout: onLayoutChange,\n    onChangeText: onChangeText,\n    placeholder: rest.placeholder,\n    editable: !disabled && editable,\n    selectionColor: selectionColor,\n    cursorColor: typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n    placeholderTextColor: placeholderTextColorBasedOnState,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: inputHeight\n    } : {}, paddingOut, Object.assign({}, font, {\n      fontSize: fontSize,\n      lineHeight: lineHeight,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : _reactNative.I18nManager.getConstants().isRTL ? 'right' : 'left',\n      paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n      minWidth: Math.min(parentState.labelTextLayout.width + 2 * INPUT_PADDING_HORIZONTAL, MIN_WIDTH)\n    }), _reactNative.Platform.OS === 'web' ? {\n      outline: 'none'\n    } : undefined, adornmentStyleAdjustmentForNativeInput, contentStyle],\n    testID: testID\n  }))), React.createElement(_TextInputAdornment.default, adornmentProps));\n};\nvar _default = exports.default = TextInputOutlined;\nvar styles = _reactNative.StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0,\n    flexGrow: 1\n  },\n  input: {\n    margin: 0,\n    flexGrow: 1\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_Outline","_enums","_TextInputAdornment","_constants","_helpers","_InputLabel","_interopRequireDefault","_LabelBackground","_excluded","_excluded2","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","TextInputOutlined","_ref","_ref$disabled","disabled","_ref$editable","editable","label","_ref$error","error","customSelectionColor","selectionColor","cursorColor","_underlineColor","underlineColor","customOutlineColor","outlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","_ref$render","render","props","createElement","NativeTextInput","_ref$multiline","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLabelTextLayout","onLeftAffixLayoutChange","onRightAffixLayoutChange","onInputLayout","onLayout","left","right","placeholderTextColor","_ref$testID","testID","contentStyle","scaledLabel","rest","_objectWithoutProperties2","adornmentConfig","getAdornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","_getConstants","getConstants","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","MIN_WIDTH","_ref4","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","lineHeightStyle","lineHeight","height","_ref4$backgroundColor","backgroundColor","background","textAlign","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","Platform","OS","undefined","_getOutlinedInputColo","getOutlinedInputColors","inputTextColor","activeColor","placeholderColor","errorColor","densePaddingTop","LABEL_PADDING_TOP_DENSE","paddingTop","LABEL_PADDING_TOP","yOffset","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","_ref2","side","type","AdornmentSide","Left","AdornmentType","Icon","isAdornmentRightIcon","_ref3","Right","ADORNMENT_SIZE","minInputHeight","MIN_DENSE_HEIGHT_OUTLINED","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","console","warn","paddingSettings","offset","scale","isAndroid","styles","inputOutlinedDense","inputOutlined","pad","calculatePadding","paddingOut","adjustPaddingOut","assign","baseLabelTranslateY","_React$useRef","useRef","Animated","Value","placeholderOpacityAnims","current","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","placeholderTextColorBasedOnState","displayPlaceholder","labelBackgroundColor","labelProps","labelError","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","maxFontSizeMultiplier","inputContainerLayout","opacity","value","onLayoutChange","useCallback","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","calculateOutlinedIconAndAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","_defineProperty2","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","View","Outline","labelContainer","InputLabel","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","labelLayoutHeight","labelBackground","LabelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","minWidth","Math","min","labelTextLayout","outline","TextInputAdornment","_default","exports","create","paddingBottom","flexGrow","margin"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/TextInput/TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n  LayoutChangeEvent,\n} from 'react-native';\n\nimport { Outline } from './Addons/Outline';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLabelTextLayout,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  onInputLayout,\n  onLayout,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  contentStyle,\n  scaledLabel,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET, MIN_WIDTH } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight: lineHeightStyle,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight =\n    lineHeightStyle || (Platform.OS === 'web' ? fontSize * 1.2 : undefined);\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n    selectionColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const densePaddingTop = label ? LABEL_PADDING_TOP_DENSE : 0;\n  const paddingTop = label ? LABEL_PADDING_TOP : 0;\n  const yOffset = label ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  const isAdornmentRightIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Right && type === AdornmentType.Icon\n  );\n\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    paddingTop\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: paddingTop,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\n\n  const { current: placeholderOpacityAnims } = React.useRef([\n    new Animated.Value(0),\n    new Animated.Value(1),\n  ]);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const placeholderTextColorBasedOnState = parentState.displayPlaceholder\n    ? placeholderTextColor ?? placeholderColor\n    : 'transparent';\n\n  const labelBackgroundColor: ColorValue =\n    backgroundColor === 'transparent'\n      ? theme.colors.background\n      : backgroundColor;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    inputContainerLayout: {\n      width:\n        parentState.inputContainerLayout.width +\n        (isAdornmentRightIcon || isAdornmentLeftIcon\n          ? INPUT_PADDING_HORIZONTAL\n          : 0),\n    },\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n    isV3,\n  };\n\n  const onLayoutChange = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      onInputLayout(e);\n      onLayout?.(e);\n    },\n    [onLayout, onInputLayout]\n  );\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight + (dense ? densePaddingTop / 2 : paddingTop);\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        label={label}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            paddingTop,\n            minHeight,\n          },\n        ]}\n      >\n        {label ? (\n          <InputLabel\n            labeled={parentState.labeled}\n            error={parentState.error}\n            focused={parentState.focused}\n            scaledLabel={scaledLabel}\n            wiggle={Boolean(parentState.value && labelProps.labelError)}\n            labelLayoutMeasured={parentState.labelLayout.measured}\n            labelLayoutWidth={parentState.labelLayout.width}\n            labelLayoutHeight={parentState.labelLayout.height}\n            {...labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n        ) : null}\n        {render?.({\n          ...rest,\n          ref: innerRef,\n          onLayout: onLayoutChange,\n          onChangeText,\n          placeholder: rest.placeholder,\n          editable: !disabled && editable,\n          selectionColor,\n          cursorColor:\n            typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n          placeholderTextColor: placeholderTextColorBasedOnState,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            !multiline || (multiline && height) ? { height: inputHeight } : {},\n            paddingOut,\n            {\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n              paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              minWidth: Math.min(\n                parentState.labelTextLayout.width +\n                  2 * INPUT_PADDING_HORIZONTAL,\n                MIN_WIDTH\n              ),\n            },\n            Platform.OS === 'web' ? { outline: 'none' } : undefined,\n            adornmentStyleAdjustmentForNativeInput,\n            contentStyle,\n          ],\n          testID,\n        } as RenderProps)}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0,\n    flexGrow: 1,\n  },\n  input: {\n    margin: 0,\n    flexGrow: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
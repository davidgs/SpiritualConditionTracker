{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _reactNative = require(\"react-native\");\nvar localDatabase = _interopRequireWildcard(require(\"./local-database\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar isWebPlatform = _reactNative.Platform.OS === 'web';\nvar database = isWebPlatform ? localDatabase : require('./database');\nvar _default = exports.default = database;","map":{"version":3,"names":["_reactNative","require","localDatabase","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","isWebPlatform","Platform","OS","database","_default","exports"],"sources":["/home/runner/workspace/src/utils/database-adapter.js"],"sourcesContent":["/**\n * Platform-specific database adapter for Spiritual Condition Tracker\n * \n * This module dynamically imports the appropriate database implementation\n * based on the current platform (web or native)\n */\n\nimport { Platform } from 'react-native';\nimport * as localDatabase from './local-database';\n\n// Determine if we are on web\nconst isWebPlatform = Platform.OS === 'web';\n\n// Select the appropriate database implementation\nconst database = isWebPlatform ? localDatabase : require('./database');\n\n// Export the database interface\nexport default database;"],"mappings":";;;;AAOA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAC,uBAAA,CAAAF,OAAA;AAAkD,SAAAE,wBAAAC,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAH,uBAAA,YAAAA,wBAAAC,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAGlD,IAAMmB,aAAa,GAAGC,qBAAQ,CAACC,EAAE,KAAK,KAAK;AAG3C,IAAMC,QAAQ,GAAGH,aAAa,GAAGtB,aAAa,GAAGD,OAAO,CAAC,YAAY,CAAC;AAAC,IAAA2B,QAAA,GAAAC,OAAA,CAAAf,OAAA,GAGxDa,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _AnimatedText = _interopRequireDefault(require(\"../../Typography/AnimatedText\"));\nvar _helpers = require(\"../helpers\");\nvar InputLabel = function InputLabel(props) {\n  var labeled = props.labeled,\n    wiggle = props.wiggle,\n    error = props.error,\n    focused = props.focused,\n    opacity = props.opacity,\n    labelLayoutWidth = props.labelLayoutWidth,\n    labelLayoutHeight = props.labelLayoutHeight,\n    labelBackground = props.labelBackground,\n    label = props.label,\n    labelError = props.labelError,\n    onLayoutAnimatedText = props.onLayoutAnimatedText,\n    onLabelTextLayout = props.onLabelTextLayout,\n    hasActiveOutline = props.hasActiveOutline,\n    activeColor = props.activeColor,\n    placeholderStyle = props.placeholderStyle,\n    baseLabelTranslateX = props.baseLabelTranslateX,\n    baseLabelTranslateY = props.baseLabelTranslateY,\n    font = props.font,\n    fontSize = props.fontSize,\n    lineHeight = props.lineHeight,\n    fontWeight = props.fontWeight,\n    placeholderOpacity = props.placeholderOpacity,\n    wiggleOffsetX = props.wiggleOffsetX,\n    labelScale = props.labelScale,\n    topPosition = props.topPosition,\n    paddingLeft = props.paddingLeft,\n    paddingRight = props.paddingRight,\n    backgroundColor = props.backgroundColor,\n    roundness = props.roundness,\n    placeholderColor = props.placeholderColor,\n    errorColor = props.errorColor,\n    labelTranslationXOffset = props.labelTranslationXOffset,\n    maxFontSizeMultiplier = props.maxFontSizeMultiplier,\n    testID = props.testID,\n    isV3 = props.isV3,\n    inputContainerLayout = props.inputContainerLayout,\n    scaledLabel = props.scaledLabel;\n  var _getConstants = (0, _helpers.getConstants)(isV3),\n    INPUT_PADDING_HORIZONTAL = _getConstants.INPUT_PADDING_HORIZONTAL;\n  var _useWindowDimensions = (0, _reactNative.useWindowDimensions)(),\n    width = _useWindowDimensions.width;\n  var paddingOffset = paddingLeft && paddingRight ? {\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight\n  } : {};\n  var labelTranslationX = {\n    transform: [{\n      translateX: labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0]\n      })\n    }]\n  };\n  var labelStyle = Object.assign({}, font, {\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0]\n    }),\n    transform: [{\n      translateX: wiggle ? error.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, wiggleOffsetX, 0]\n      }) : 0\n    }, {\n      translateY: baseLabelTranslateY !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateY, 0]\n      }) : 0\n    }, {\n      scale: labelScale !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [labelScale, 1]\n      }) : labeled\n    }]\n  });\n  var labelWidth = (inputContainerLayout.width + INPUT_PADDING_HORIZONTAL / 2) / (scaledLabel ? labelScale : 1);\n  var commonStyles = [placeholderStyle, {\n    top: topPosition\n  }, {\n    maxWidth: labelWidth\n  }, labelStyle, paddingOffset || {}];\n  var textColor = labelError && errorColor ? errorColor : placeholderColor;\n  return (_react.default.createElement(_reactNative.View, {\n      pointerEvents: \"none\",\n      style: [_reactNative.StyleSheet.absoluteFill, styles.overflow, styles.labelContainer]\n    }, _react.default.createElement(_reactNative.Animated.View, {\n      pointerEvents: \"none\",\n      style: [_reactNative.StyleSheet.absoluteFill, _reactNative.Platform.OS !== 'web' && {\n        width: width\n      }, {\n        opacity: opacity\n      }, labelTranslationX]\n    }, _react.default.createElement(_reactNative.View, {\n      style: {\n        width: labelWidth\n      }\n    }, labelBackground === null || labelBackground === void 0 ? void 0 : labelBackground({\n      labeled: labeled,\n      labelLayoutWidth: labelLayoutWidth,\n      labelLayoutHeight: labelLayoutHeight,\n      labelStyle: labelStyle,\n      placeholderStyle: placeholderStyle,\n      baseLabelTranslateX: baseLabelTranslateX,\n      topPosition: topPosition,\n      label: label,\n      backgroundColor: backgroundColor,\n      roundness: roundness,\n      maxFontSizeMultiplier: maxFontSizeMultiplier,\n      testID: testID\n    }), _react.default.createElement(_AnimatedText.default, {\n      variant: \"bodySmall\",\n      onLayout: onLayoutAnimatedText,\n      onTextLayout: onLabelTextLayout,\n      style: [commonStyles, {\n        color: activeColor\n      }],\n      numberOfLines: 1,\n      maxFontSizeMultiplier: maxFontSizeMultiplier,\n      testID: `${testID}-label-active`\n    }, label), _react.default.createElement(_AnimatedText.default, {\n      variant: focused ? 'bodyLarge' : 'bodySmall',\n      style: [commonStyles, {\n        color: textColor,\n        opacity: placeholderOpacity\n      }],\n      numberOfLines: 1,\n      maxFontSizeMultiplier: maxFontSizeMultiplier,\n      testID: `${testID}-label-inactive`\n    }, label))))\n  );\n};\nvar styles = _reactNative.StyleSheet.create({\n  overflow: {\n    overflow: 'hidden'\n  },\n  labelContainer: {\n    zIndex: 3\n  }\n});\nvar _default = exports.default = _react.default.memo(InputLabel);","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_AnimatedText","_helpers","InputLabel","props","labeled","wiggle","error","focused","opacity","labelLayoutWidth","labelLayoutHeight","labelBackground","label","labelError","onLayoutAnimatedText","onLabelTextLayout","hasActiveOutline","activeColor","placeholderStyle","baseLabelTranslateX","baseLabelTranslateY","font","fontSize","lineHeight","fontWeight","placeholderOpacity","wiggleOffsetX","labelScale","topPosition","paddingLeft","paddingRight","backgroundColor","roundness","placeholderColor","errorColor","labelTranslationXOffset","maxFontSizeMultiplier","testID","isV3","inputContainerLayout","scaledLabel","_getConstants","getConstants","INPUT_PADDING_HORIZONTAL","_useWindowDimensions","useWindowDimensions","width","paddingOffset","labelTranslationX","transform","translateX","interpolate","inputRange","outputRange","labelStyle","Object","assign","translateY","scale","labelWidth","commonStyles","top","maxWidth","textColor","React","createElement","View","pointerEvents","style","StyleSheet","absoluteFill","styles","overflow","labelContainer","Animated","Platform","OS","AnimatedText","variant","onLayout","onTextLayout","color","numberOfLines","create","zIndex","_default","exports","default","memo"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/TextInput/Label/InputLabel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getConstants } from '../helpers';\nimport type { InputLabelProps } from '../types';\n\nconst InputLabel = (props: InputLabelProps) => {\n  const {\n    labeled,\n    wiggle,\n    error,\n    focused,\n    opacity,\n    labelLayoutWidth,\n    labelLayoutHeight,\n    labelBackground,\n    label,\n    labelError,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingLeft,\n    paddingRight,\n    backgroundColor,\n    roundness,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n    maxFontSizeMultiplier,\n    testID,\n    isV3,\n    inputContainerLayout,\n    scaledLabel,\n  } = props;\n\n  const { INPUT_PADDING_HORIZONTAL } = getConstants(isV3);\n  const { width } = useWindowDimensions();\n\n  const paddingOffset =\n    paddingLeft && paddingRight ? { paddingLeft, paddingRight } : {};\n\n  const labelTranslationX = {\n    transform: [\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0],\n        }),\n      },\n    ],\n  };\n\n  const labelStyle = {\n    ...font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0],\n    }),\n    transform: [\n      {\n        // Wiggle the label when there's an error\n        translateX: wiggle\n          ? error.interpolate({\n              inputRange: [0, 0.5, 1],\n              outputRange: [0, wiggleOffsetX, 0],\n            })\n          : 0,\n      },\n      {\n        // Move label to top\n        translateY:\n          baseLabelTranslateY !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [baseLabelTranslateY, 0],\n              })\n            : 0,\n      },\n      {\n        // Make label smaller\n        scale:\n          labelScale !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [labelScale, 1],\n              })\n            : labeled,\n      },\n    ],\n  };\n\n  const labelWidth =\n    (inputContainerLayout.width + INPUT_PADDING_HORIZONTAL / 2) /\n    (scaledLabel ? labelScale : 1);\n\n  const commonStyles = [\n    placeholderStyle,\n    {\n      top: topPosition,\n    },\n    {\n      maxWidth: labelWidth,\n    },\n    labelStyle,\n    paddingOffset || {},\n  ];\n\n  const textColor = (\n    labelError && errorColor ? errorColor : placeholderColor\n  ) as ColorValue;\n\n  return (\n    // Position colored placeholder and gray placeholder on top of each other and crossfade them\n    // This gives the effect of animating the color, but allows us to use native driver\n    <View\n      pointerEvents=\"none\"\n      style={[StyleSheet.absoluteFill, styles.overflow, styles.labelContainer]}\n    >\n      <Animated.View\n        pointerEvents=\"none\"\n        style={[\n          StyleSheet.absoluteFill,\n          Platform.OS !== 'web' && { width },\n          { opacity },\n          labelTranslationX,\n        ]}\n      >\n        <View\n          style={{\n            width: labelWidth,\n          }}\n        >\n          {labelBackground?.({\n            labeled,\n            labelLayoutWidth,\n            labelLayoutHeight,\n            labelStyle,\n            placeholderStyle,\n            baseLabelTranslateX,\n            topPosition,\n            label,\n            backgroundColor,\n            roundness,\n            maxFontSizeMultiplier: maxFontSizeMultiplier,\n            testID,\n          })}\n          <AnimatedText\n            variant=\"bodySmall\"\n            onLayout={onLayoutAnimatedText}\n            onTextLayout={onLabelTextLayout}\n            style={[\n              commonStyles,\n              {\n                color: activeColor,\n              },\n            ]}\n            numberOfLines={1}\n            maxFontSizeMultiplier={maxFontSizeMultiplier}\n            testID={`${testID}-label-active`}\n          >\n            {label}\n          </AnimatedText>\n          <AnimatedText\n            variant={focused ? 'bodyLarge' : 'bodySmall'}\n            style={[\n              commonStyles,\n              {\n                color: textColor,\n                opacity: placeholderOpacity,\n              },\n            ]}\n            numberOfLines={1}\n            maxFontSizeMultiplier={maxFontSizeMultiplier}\n            testID={`${testID}-label-inactive`}\n          >\n            {label}\n          </AnimatedText>\n        </View>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overflow: {\n    overflow: 'hidden',\n  },\n  labelContainer: {\n    zIndex: 3,\n  },\n});\n\nexport default React.memo(InputLabel);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
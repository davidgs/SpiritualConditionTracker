{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.customText = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _AnimatedText = _interopRequireDefault(require(\"./AnimatedText\"));\nvar _StyledText = _interopRequireDefault(require(\"./v2/StyledText\"));\nvar _theming = require(\"../../core/theming\");\nvar _forwardRef = require(\"../../utils/forwardRef\");\nvar _excluded = [\"style\", \"variant\", \"theme\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar Text = function Text(_ref, ref) {\n  var style = _ref.style,\n    variant = _ref.variant,\n    initialTheme = _ref.theme,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var root = React.useRef(null);\n  var theme = (0, _theming.useInternalTheme)(initialTheme);\n  var writingDirection = _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n  React.useImperativeHandle(ref, function () {\n    return {\n      setNativeProps: function setNativeProps(args) {\n        var _root$current;\n        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);\n      }\n    };\n  });\n  if (theme.isV3 && variant) {\n    var font = theme.fonts[variant];\n    var textStyle = [font, style];\n    if (React.isValidElement(rest.children) && (rest.children.type === Component || rest.children.type === _AnimatedText.default || rest.children.type === _StyledText.default)) {\n      var props = rest.children.props;\n      if (props.variant) {\n        font = theme.fonts[props.variant];\n        textStyle = [style, font];\n      }\n      if (!props.variant) {\n        textStyle = [style, props.style];\n      }\n    }\n    if (typeof font !== 'object') {\n      throw new Error(`Variant ${variant} was not provided properly. Valid variants are ${Object.keys(theme.fonts).join(', ')}.`);\n    }\n    return React.createElement(_reactNative.Text, _extends({\n      ref: root,\n      style: [styles.text, {\n        writingDirection: writingDirection,\n        color: theme.colors.onSurface\n      }, textStyle]\n    }, rest));\n  } else {\n    var _theme$fonts, _theme$colors;\n    var _font = theme.isV3 ? theme.fonts.default : (_theme$fonts = theme.fonts) === null || _theme$fonts === void 0 ? void 0 : _theme$fonts.regular;\n    var _textStyle = Object.assign({}, _font, {\n      color: theme.isV3 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.onSurface : theme.colors.text\n    });\n    return React.createElement(_reactNative.Text, _extends({}, rest, {\n      ref: root,\n      style: [styles.text, _textStyle, {\n        writingDirection: writingDirection\n      }, style]\n    }));\n  }\n};\nvar styles = _reactNative.StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nvar Component = (0, _forwardRef.forwardRef)(Text);\nvar customText = exports.customText = function customText() {\n  return Component;\n};\nvar _default = exports.default = Component;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_AnimatedText","_interopRequireDefault","_StyledText","_theming","_forwardRef","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Text","_ref","ref","style","variant","initialTheme","theme","rest","_objectWithoutProperties2","root","useRef","useInternalTheme","writingDirection","I18nManager","getConstants","isRTL","useImperativeHandle","setNativeProps","args","_root$current","current","isV3","font","fonts","textStyle","isValidElement","children","type","Component","AnimatedText","StyledText","props","Error","keys","join","createElement","NativeText","_extends","styles","text","color","colors","onSurface","_theme$fonts","_theme$colors","regular","assign","StyleSheet","create","textAlign","forwardRef","customText","exports","_default"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/Typography/Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  Text as NativeText,\n  TextStyle,\n} from 'react-native';\n\nimport AnimatedText from './AnimatedText';\nimport type { VariantProp } from './types';\nimport StyledText from './v2/StyledText';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\n\nexport type Props<T> = React.ComponentProps<typeof NativeText> & {\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  variant?: VariantProp<T>;\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  style?: StyleProp<TextStyle>;\n};\n\nexport type TextRef = React.ForwardedRef<{\n  setNativeProps(args: Object): void;\n}>;\n\n// @component-group Typography\n\n/**\n * Typography component showing styles complied with passed `variant` prop and supported by the type system.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <Text variant=\"displayLarge\">Display Large</Text>\n *     <Text variant=\"displayMedium\">Display Medium</Text>\n *     <Text variant=\"displaySmall\">Display small</Text>\n *\n *     <Text variant=\"headlineLarge\">Headline Large</Text>\n *     <Text variant=\"headlineMedium\">Headline Medium</Text>\n *     <Text variant=\"headlineSmall\">Headline Small</Text>\n *\n *     <Text variant=\"titleLarge\">Title Large</Text>\n *     <Text variant=\"titleMedium\">Title Medium</Text>\n *     <Text variant=\"titleSmall\">Title Small</Text>\n *\n *     <Text variant=\"bodyLarge\">Body Large</Text>\n *     <Text variant=\"bodyMedium\">Body Medium</Text>\n *     <Text variant=\"bodySmall\">Body Small</Text>\n *\n *     <Text variant=\"labelLarge\">Label Large</Text>\n *     <Text variant=\"labelMedium\">Label Medium</Text>\n *     <Text variant=\"labelSmall\">Label Small</Text>\n *  </>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text = (\n  { style, variant, theme: initialTheme, ...rest }: Props<string>,\n  ref: TextRef\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  // FIXME: destructure it in TS 4.6+\n  const theme = useInternalTheme(initialTheme);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  if (theme.isV3 && variant) {\n    let font = theme.fonts[variant];\n    let textStyle = [font, style];\n\n    if (\n      React.isValidElement(rest.children) &&\n      (rest.children.type === Component ||\n        rest.children.type === AnimatedText ||\n        rest.children.type === StyledText)\n    ) {\n      const { props } = rest.children;\n\n      // Context:   Some components have the built-in `Text` component with a predefined variant,\n      //            that also accepts `children` as a `React.Node`. This can result in a situation,\n      //            where another `Text` component is rendered within the built-in `Text` component.\n      //            By doing that, we assume that user doesn't want to consume pre-defined font properties.\n      // Case one:  Nested `Text` has different `variant` that specified in parent. For example:\n      //              <Chip>\n      //                <Text variant=\"displayMedium\">Nested</Text>\n      //              </Chip>\n      // Solution:  To address the following scenario, the code below overrides the `variant`\n      //            specified in a parent in favor of children's variant:\n      if (props.variant) {\n        font = theme.fonts[props.variant as VariantProp<typeof props.variant>];\n        textStyle = [style, font];\n      }\n\n      // Case two:  Nested `Text` has specified `styles` which intefere\n      //            with font properties, from the parent's `variant`. For example:\n      //              <Chip>\n      //                <Text style={{fontSize: 30}}>Nested</Text>\n      //              </Chip>\n      // Solution:  To address the following scenario, the code below overrides the\n      //            parent's style with children's style:\n      if (!props.variant) {\n        textStyle = [style, props.style];\n      }\n    }\n\n    if (typeof font !== 'object') {\n      throw new Error(\n        `Variant ${variant} was not provided properly. Valid variants are ${Object.keys(\n          theme.fonts\n        ).join(', ')}.`\n      );\n    }\n\n    return (\n      <NativeText\n        ref={root}\n        style={[\n          styles.text,\n          { writingDirection, color: theme.colors.onSurface },\n          textStyle,\n        ]}\n        {...rest}\n      />\n    );\n  } else {\n    const font = theme.isV3 ? theme.fonts.default : theme.fonts?.regular;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n    };\n    return (\n      <NativeText\n        {...rest}\n        ref={root}\n        style={[styles.text, textStyle, { writingDirection }, style]}\n      />\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\ntype TextComponent<T> = (\n  props: Props<T> & { ref?: React.RefObject<TextRef> }\n) => JSX.Element;\n\nconst Component = forwardRef(Text) as TextComponent<never>;\n\nexport const customText = <T,>() => Component as unknown as TextComponent<T>;\n\nexport default Component;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
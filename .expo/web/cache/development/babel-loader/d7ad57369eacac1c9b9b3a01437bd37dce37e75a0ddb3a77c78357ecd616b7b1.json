{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _ListAccordionGroup = require(\"./ListAccordionGroup\");\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar ListAccordion = function ListAccordion(_ref) {\n  var _theme$colors, _theme$colors2;\n  var left = _ref.left,\n    right = _ref.right,\n    title = _ref.title,\n    description = _ref.description,\n    children = _ref.children,\n    themeOverrides = _ref.theme,\n    titleStyle = _ref.titleStyle,\n    descriptionStyle = _ref.descriptionStyle,\n    _ref$titleNumberOfLin = _ref.titleNumberOfLines,\n    titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,\n    _ref$descriptionNumbe = _ref.descriptionNumberOfLines,\n    descriptionNumberOfLines = _ref$descriptionNumbe === void 0 ? 2 : _ref$descriptionNumbe,\n    customRippleColor = _ref.rippleColor,\n    style = _ref.style,\n    containerStyle = _ref.containerStyle,\n    contentStyle = _ref.contentStyle,\n    id = _ref.id,\n    testID = _ref.testID,\n    background = _ref.background,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    expandedProp = _ref.expanded,\n    accessibilityLabel = _ref.accessibilityLabel,\n    _ref$pointerEvents = _ref.pointerEvents,\n    pointerEvents = _ref$pointerEvents === void 0 ? 'none' : _ref$pointerEvents,\n    titleMaxFontSizeMultiplier = _ref.titleMaxFontSizeMultiplier,\n    descriptionMaxFontSizeMultiplier = _ref.descriptionMaxFontSizeMultiplier;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _React$useState = React.useState(expandedProp || false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    expanded = _React$useState2[0],\n    setExpanded = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    alignToTop = _React$useState4[0],\n    setAlignToTop = _React$useState4[1];\n  var onDescriptionTextLayout = function onDescriptionTextLayout(event) {\n    if (!theme.isV3) {\n      return;\n    }\n    var nativeEvent = event.nativeEvent;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n  var handlePressAction = function handlePressAction(e) {\n    onPress === null || onPress === void 0 ? void 0 : onPress(e);\n    if (expandedProp === undefined) {\n      setExpanded(function (expanded) {\n        return !expanded;\n      });\n    }\n  };\n  var expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n  var groupContext = React.useContext(_ListAccordionGroup.ListAccordionGroupContext);\n  if (groupContext !== null && (id === undefined || id === null || id === '')) {\n    throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');\n  }\n  var isExpanded = groupContext ? groupContext.expandedId === id : expandedInternal;\n  var _getAccordionColors = (0, _utils.getAccordionColors)({\n      theme: theme,\n      isExpanded: isExpanded,\n      customRippleColor: customRippleColor\n    }),\n    titleColor = _getAccordionColors.titleColor,\n    descriptionColor = _getAccordionColors.descriptionColor,\n    titleTextColor = _getAccordionColors.titleTextColor,\n    rippleColor = _getAccordionColors.rippleColor;\n  var handlePress = groupContext && id !== undefined ? function () {\n    return groupContext.onAccordionPress(id);\n  } : handlePressAction;\n  return React.createElement(_reactNative.View, null, React.createElement(_reactNative.View, {\n    style: {\n      backgroundColor: theme === null || theme === void 0 || (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.background\n    }\n  }, React.createElement(_TouchableRipple.default, {\n    style: [theme.isV3 ? styles.containerV3 : styles.container, style],\n    onPress: handlePress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: isExpanded\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    theme: theme,\n    background: background,\n    borderless: true\n  }, React.createElement(_reactNative.View, {\n    style: [theme.isV3 ? styles.rowV3 : styles.row, containerStyle],\n    pointerEvents: pointerEvents\n  }, left ? left({\n    color: isExpanded ? (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primary : descriptionColor,\n    style: (0, _utils.getLeftStyles)(alignToTop, description, theme.isV3)\n  }) : null, React.createElement(_reactNative.View, {\n    style: [theme.isV3 ? styles.itemV3 : styles.item, styles.content, contentStyle]\n  }, React.createElement(_Text.default, {\n    selectable: false,\n    numberOfLines: titleNumberOfLines,\n    style: [styles.title, {\n      color: titleTextColor\n    }, titleStyle],\n    maxFontSizeMultiplier: titleMaxFontSizeMultiplier\n  }, title), description ? React.createElement(_Text.default, {\n    selectable: false,\n    numberOfLines: descriptionNumberOfLines,\n    style: [styles.description, {\n      color: descriptionColor\n    }, descriptionStyle],\n    onTextLayout: onDescriptionTextLayout,\n    maxFontSizeMultiplier: descriptionMaxFontSizeMultiplier\n  }, description) : null), React.createElement(_reactNative.View, {\n    style: [styles.item, description ? styles.multiline : undefined]\n  }, right ? right({\n    isExpanded: isExpanded\n  }) : React.createElement(_MaterialCommunityIcon.default, {\n    name: isExpanded ? 'chevron-up' : 'chevron-down',\n    color: theme.isV3 ? descriptionColor : titleColor,\n    size: 24,\n    direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n  }))))), isExpanded ? React.Children.map(children, function (child) {\n    if (left && React.isValidElement(child) && !child.props.left && !child.props.right) {\n      return React.cloneElement(child, {\n        style: [theme.isV3 ? styles.childV3 : styles.child, child.props.style],\n        theme: theme\n      });\n    }\n    return child;\n  }) : null);\n};\nListAccordion.displayName = 'List.Accordion';\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  rowV3: {\n    flexDirection: 'row',\n    marginVertical: 6\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8\n  },\n  itemV3: {\n    paddingLeft: 16\n  },\n  child: {\n    paddingLeft: 64\n  },\n  childV3: {\n    paddingLeft: 40\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nvar _default = exports.default = ListAccordion;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_ListAccordionGroup","_utils","_theming","_MaterialCommunityIcon","_interopRequireDefault","_TouchableRipple","_Text","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ListAccordion","_ref","_theme$colors","_theme$colors2","left","right","title","description","children","themeOverrides","theme","titleStyle","descriptionStyle","_ref$titleNumberOfLin","titleNumberOfLines","_ref$descriptionNumbe","descriptionNumberOfLines","customRippleColor","rippleColor","style","containerStyle","contentStyle","id","testID","background","onPress","onLongPress","delayLongPress","expandedProp","expanded","accessibilityLabel","_ref$pointerEvents","pointerEvents","titleMaxFontSizeMultiplier","descriptionMaxFontSizeMultiplier","useInternalTheme","_React$useState","useState","_React$useState2","_slicedToArray2","setExpanded","_React$useState3","_React$useState4","alignToTop","setAlignToTop","onDescriptionTextLayout","event","isV3","nativeEvent","lines","length","handlePressAction","undefined","expandedInternal","groupContext","useContext","ListAccordionGroupContext","Error","isExpanded","expandedId","_getAccordionColors","getAccordionColors","titleColor","descriptionColor","titleTextColor","handlePress","onAccordionPress","createElement","View","backgroundColor","colors","TouchableRipple","styles","containerV3","container","accessibilityRole","accessibilityState","borderless","rowV3","row","color","primary","getLeftStyles","itemV3","item","content","Text","selectable","numberOfLines","maxFontSizeMultiplier","onTextLayout","multiline","MaterialCommunityIcon","name","size","direction","I18nManager","getConstants","isRTL","Children","map","child","isValidElement","props","cloneElement","childV3","displayName","StyleSheet","create","padding","paddingVertical","paddingRight","flexDirection","alignItems","marginVertical","height","justifyContent","fontSize","paddingLeft","flex","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/List/ListAccordion.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  I18nManager,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TextLayoutEventData,\n  View,\n  ViewProps,\n  ViewStyle,\n  PressableAndroidRippleConfig,\n} from 'react-native';\n\nimport { ListAccordionGroupContext } from './ListAccordionGroup';\nimport type { Style } from './utils';\nimport { getAccordionColors, getLeftStyles } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Title text for the list accordion.\n   */\n  title: React.ReactNode;\n  /**\n   * Description text for the list accordion.\n   */\n  description?: React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string; style: Style }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { isExpanded: boolean }) => React.ReactNode;\n  /**\n   * Whether the accordion is expanded\n   * If this prop is provided, the accordion will behave as a \"controlled component\".\n   * You'll need to update this prop when you want to toggle the component or on `onPress`.\n   */\n  expanded?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Style that is passed to the root TouchableRipple container.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to the outermost container that wraps the entire content, including left and right items and both title and description.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to the content container, which wraps the title and description.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * Specifies the largest possible scale a description font can reach.\n   */\n  descriptionMaxFontSizeMultiplier?: number;\n  /**\n   * Id is used for distinguishing specific accordion when using List.AccordionGroup. Property is required when using List.AccordionGroup and has no impact on behavior when using standalone List.Accordion.\n   */\n  id?: string | number;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the TouchableRipple. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * `pointerEvents` passed to the `View` container\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component used to display an expandable list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [expanded, setExpanded] = React.useState(true);\n *\n *   const handlePress = () => setExpanded(!expanded);\n *\n *   return (\n *     <List.Section title=\"Accordions\">\n *       <List.Accordion\n *         title=\"Uncontrolled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *\n *       <List.Accordion\n *         title=\"Controlled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\n *         expanded={expanded}\n *         onPress={handlePress}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *     </List.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst ListAccordion = ({\n  left,\n  right,\n  title,\n  description,\n  children,\n  theme: themeOverrides,\n  titleStyle,\n  descriptionStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  rippleColor: customRippleColor,\n  style,\n  containerStyle,\n  contentStyle,\n  id,\n  testID,\n  background,\n  onPress,\n  onLongPress,\n  delayLongPress,\n  expanded: expandedProp,\n  accessibilityLabel,\n  pointerEvents = 'none',\n  titleMaxFontSizeMultiplier,\n  descriptionMaxFontSizeMultiplier,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const [expanded, setExpanded] = React.useState<boolean>(\n    expandedProp || false\n  );\n  const [alignToTop, setAlignToTop] = React.useState(false);\n\n  const onDescriptionTextLayout = (\n    event: NativeSyntheticEvent<TextLayoutEventData>\n  ) => {\n    if (!theme.isV3) {\n      return;\n    }\n    const { nativeEvent } = event;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n\n  const handlePressAction = (e: GestureResponderEvent) => {\n    onPress?.(e);\n\n    if (expandedProp === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      setExpanded((expanded) => !expanded);\n    }\n  };\n\n  const expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n\n  const groupContext = React.useContext(ListAccordionGroupContext);\n  if (groupContext !== null && (id === undefined || id === null || id === '')) {\n    throw new Error(\n      'List.Accordion is used inside a List.AccordionGroup without specifying an id prop.'\n    );\n  }\n  const isExpanded = groupContext\n    ? groupContext.expandedId === id\n    : expandedInternal;\n\n  const { titleColor, descriptionColor, titleTextColor, rippleColor } =\n    getAccordionColors({\n      theme,\n      isExpanded,\n      customRippleColor,\n    });\n\n  const handlePress =\n    groupContext && id !== undefined\n      ? () => groupContext.onAccordionPress(id)\n      : handlePressAction;\n  return (\n    <View>\n      <View style={{ backgroundColor: theme?.colors?.background }}>\n        <TouchableRipple\n          style={[theme.isV3 ? styles.containerV3 : styles.container, style]}\n          onPress={handlePress}\n          onLongPress={onLongPress}\n          delayLongPress={delayLongPress}\n          rippleColor={rippleColor}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: isExpanded }}\n          accessibilityLabel={accessibilityLabel}\n          testID={testID}\n          theme={theme}\n          background={background}\n          borderless\n        >\n          <View\n            style={[theme.isV3 ? styles.rowV3 : styles.row, containerStyle]}\n            pointerEvents={pointerEvents}\n          >\n            {left\n              ? left({\n                  color: isExpanded ? theme.colors?.primary : descriptionColor,\n                  style: getLeftStyles(alignToTop, description, theme.isV3),\n                })\n              : null}\n            <View\n              style={[\n                theme.isV3 ? styles.itemV3 : styles.item,\n                styles.content,\n                contentStyle,\n              ]}\n            >\n              <Text\n                selectable={false}\n                numberOfLines={titleNumberOfLines}\n                style={[\n                  styles.title,\n                  {\n                    color: titleTextColor,\n                  },\n                  titleStyle,\n                ]}\n                maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n              >\n                {title}\n              </Text>\n              {description ? (\n                <Text\n                  selectable={false}\n                  numberOfLines={descriptionNumberOfLines}\n                  style={[\n                    styles.description,\n                    {\n                      color: descriptionColor,\n                    },\n                    descriptionStyle,\n                  ]}\n                  onTextLayout={onDescriptionTextLayout}\n                  maxFontSizeMultiplier={descriptionMaxFontSizeMultiplier}\n                >\n                  {description}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={[styles.item, description ? styles.multiline : undefined]}\n            >\n              {right ? (\n                right({\n                  isExpanded: isExpanded,\n                })\n              ) : (\n                <MaterialCommunityIcon\n                  name={isExpanded ? 'chevron-up' : 'chevron-down'}\n                  color={theme.isV3 ? descriptionColor : titleColor}\n                  size={24}\n                  direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n                />\n              )}\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n\n      {isExpanded\n        ? React.Children.map(children, (child) => {\n            if (\n              left &&\n              React.isValidElement(child) &&\n              !child.props.left &&\n              !child.props.right\n            ) {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                style: [\n                  theme.isV3 ? styles.childV3 : styles.child,\n                  child.props.style,\n                ],\n                theme,\n              });\n            }\n\n            return child;\n          })\n        : null}\n    </View>\n  );\n};\n\nListAccordion.displayName = 'List.Accordion';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  rowV3: {\n    flexDirection: 'row',\n    marginVertical: 6,\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8,\n  },\n  itemV3: {\n    paddingLeft: 16,\n  },\n  child: {\n    paddingLeft: 64,\n  },\n  childV3: {\n    paddingLeft: 40,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default ListAccordion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
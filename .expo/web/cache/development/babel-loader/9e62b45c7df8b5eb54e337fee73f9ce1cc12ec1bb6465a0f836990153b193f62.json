{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _forwardRef = require(\"../../utils/forwardRef\");\nvar _ActivityIndicator = _interopRequireDefault(require(\"../ActivityIndicator\"));\nvar _CrossFadeIcon = _interopRequireDefault(require(\"../CrossFadeIcon\"));\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\nvar _Surface = _interopRequireDefault(require(\"../Surface\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _excluded = [\"icon\", \"iconColor\", \"containerColor\", \"rippleColor\", \"size\", \"accessibilityLabel\", \"disabled\", \"onPress\", \"selected\", \"animated\", \"mode\", \"style\", \"theme\", \"testID\", \"loading\", \"contentStyle\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar PADDING = 8;\nvar IconButton = (0, _forwardRef.forwardRef)(function (_ref, ref) {\n  var icon = _ref.icon,\n    customIconColor = _ref.iconColor,\n    customContainerColor = _ref.containerColor,\n    customRippleColor = _ref.rippleColor,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    accessibilityLabel = _ref.accessibilityLabel,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    _ref$selected = _ref.selected,\n    selected = _ref$selected === void 0 ? false : _ref$selected,\n    _ref$animated = _ref.animated,\n    animated = _ref$animated === void 0 ? false : _ref$animated,\n    mode = _ref.mode,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'icon-button' : _ref$testID,\n    _ref$loading = _ref.loading,\n    loading = _ref$loading === void 0 ? false : _ref$loading,\n    contentStyle = _ref.contentStyle,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var isV3 = theme.isV3;\n  var IconComponent = animated ? _CrossFadeIcon.default : _Icon.default;\n  var _getIconButtonColor = (0, _utils.getIconButtonColor)({\n      theme: theme,\n      disabled: disabled,\n      selected: selected,\n      mode: mode,\n      customIconColor: customIconColor,\n      customContainerColor: customContainerColor,\n      customRippleColor: customRippleColor\n    }),\n    iconColor = _getIconButtonColor.iconColor,\n    rippleColor = _getIconButtonColor.rippleColor,\n    backgroundColor = _getIconButtonColor.backgroundColor,\n    borderColor = _getIconButtonColor.borderColor;\n  var buttonSize = isV3 ? size + 2 * PADDING : size * 1.5;\n  var _ref2 = _reactNative.StyleSheet.flatten(style) || {},\n    _ref2$borderWidth = _ref2.borderWidth,\n    borderWidth = _ref2$borderWidth === void 0 ? isV3 && mode === 'outlined' && !selected ? 1 : 0 : _ref2$borderWidth,\n    _ref2$borderRadius = _ref2.borderRadius,\n    borderRadius = _ref2$borderRadius === void 0 ? buttonSize / 2 : _ref2$borderRadius;\n  var borderStyles = {\n    borderWidth: borderWidth,\n    borderRadius: borderRadius,\n    borderColor: borderColor\n  };\n  return React.createElement(_Surface.default, _extends({\n    ref: ref,\n    testID: `${testID}-container`,\n    style: [{\n      backgroundColor: backgroundColor,\n      width: buttonSize,\n      height: buttonSize\n    }, styles.container, borderStyles, !isV3 && disabled && styles.disabled, style]\n  }, isV3 && {\n    elevation: 0\n  }), React.createElement(_TouchableRipple.default, _extends({\n    borderless: true,\n    centered: true,\n    onPress: onPress,\n    rippleColor: rippleColor,\n    accessibilityLabel: accessibilityLabel,\n    style: [styles.touchable, contentStyle],\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    disabled: disabled,\n    hitSlop: _TouchableRipple.default.supported ? {\n      top: 10,\n      left: 10,\n      bottom: 10,\n      right: 10\n    } : {\n      top: 6,\n      left: 6,\n      bottom: 6,\n      right: 6\n    },\n    testID: testID\n  }, rest), loading ? React.createElement(_ActivityIndicator.default, {\n    size: size,\n    color: iconColor\n  }) : React.createElement(IconComponent, {\n    color: iconColor,\n    source: icon,\n    size: size\n  })));\n});\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    margin: 6,\n    elevation: 0\n  },\n  touchable: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  disabled: {\n    opacity: 0.32\n  }\n});\nvar _default = exports.default = IconButton;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_utils","_theming","_forwardRef","_ActivityIndicator","_interopRequireDefault","_CrossFadeIcon","_Icon","_Surface","_TouchableRipple","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","PADDING","IconButton","forwardRef","_ref","ref","icon","customIconColor","iconColor","customContainerColor","containerColor","customRippleColor","rippleColor","_ref$size","size","accessibilityLabel","disabled","onPress","_ref$selected","selected","_ref$animated","animated","mode","style","themeOverrides","theme","_ref$testID","testID","_ref$loading","loading","contentStyle","rest","_objectWithoutProperties2","useInternalTheme","isV3","IconComponent","CrossFadeIcon","Icon","_getIconButtonColor","getIconButtonColor","backgroundColor","borderColor","buttonSize","_ref2","StyleSheet","flatten","_ref2$borderWidth","borderWidth","_ref2$borderRadius","borderRadius","borderStyles","createElement","Surface","_extends","width","height","styles","container","elevation","TouchableRipple","borderless","centered","touchable","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","hitSlop","supported","top","left","bottom","right","ActivityIndicator","color","source","create","overflow","margin","flexGrow","justifyContent","alignItems","opacity","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/IconButton/IconButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n  Animated,\n  ColorValue,\n} from 'react-native';\n\nimport { getIconButtonColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nconst PADDING = 8;\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\nexport type Props = Omit<$RemoveChildren<typeof TouchableRipple>, 'style'> & {\n  /**\n   * Icon to display.\n   */\n  icon: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Mode of the icon button. By default there is no specified mode - only pressable icon will be rendered.\n   */\n  mode?: IconButtonMode;\n  /**\n   * @renamed Renamed from 'color' to 'iconColor' in v5.x\n   * Color of the icon.\n   */\n  iconColor?: string;\n  /**\n   * Background color of the icon container.\n   */\n  containerColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether icon button is selected. A selected button receives alternative combination of icon and container colors.\n   */\n  selected?: boolean;\n  /**\n   * Size of the icon.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width or to set a custom padding`.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  ref?: React.RefObject<View>;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n};\n\n/**\n * An icon button is a button which displays only an icon without a label.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <IconButton\n *     icon=\"camera\"\n *     iconColor={MD3Colors.error50}\n *     size={20}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst IconButton = forwardRef<View, Props>(\n  (\n    {\n      icon,\n      iconColor: customIconColor,\n      containerColor: customContainerColor,\n      rippleColor: customRippleColor,\n      size = 24,\n      accessibilityLabel,\n      disabled,\n      onPress,\n      selected = false,\n      animated = false,\n      mode,\n      style,\n      theme: themeOverrides,\n      testID = 'icon-button',\n      loading = false,\n      contentStyle,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const { isV3 } = theme;\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const { iconColor, rippleColor, backgroundColor, borderColor } =\n      getIconButtonColor({\n        theme,\n        disabled,\n        selected,\n        mode,\n        customIconColor,\n        customContainerColor,\n        customRippleColor,\n      });\n\n    const buttonSize = isV3 ? size + 2 * PADDING : size * 1.5;\n\n    const {\n      borderWidth = isV3 && mode === 'outlined' && !selected ? 1 : 0,\n      borderRadius = buttonSize / 2,\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const borderStyles = {\n      borderWidth,\n      borderRadius,\n      borderColor,\n    };\n\n    return (\n      <Surface\n        ref={ref}\n        testID={`${testID}-container`}\n        style={[\n          {\n            backgroundColor,\n            width: buttonSize,\n            height: buttonSize,\n          },\n          styles.container,\n          borderStyles,\n          !isV3 && disabled && styles.disabled,\n          style,\n        ]}\n        {...(isV3 && { elevation: 0 })}\n      >\n        <TouchableRipple\n          borderless\n          centered\n          onPress={onPress}\n          rippleColor={rippleColor}\n          accessibilityLabel={accessibilityLabel}\n          style={[styles.touchable, contentStyle]}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ disabled }}\n          disabled={disabled}\n          hitSlop={\n            TouchableRipple.supported\n              ? { top: 10, left: 10, bottom: 10, right: 10 }\n              : { top: 6, left: 6, bottom: 6, right: 6 }\n          }\n          testID={testID}\n          {...rest}\n        >\n          {loading ? (\n            <ActivityIndicator size={size} color={iconColor} />\n          ) : (\n            <IconComponent color={iconColor} source={icon} size={size} />\n          )}\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    margin: 6,\n    elevation: 0,\n  },\n  touchable: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  disabled: {\n    opacity: 0.32,\n  },\n});\n\nexport default IconButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._createWebFontTemplate = _createWebFontTemplate;\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _fontfaceobserver = _interopRequireDefault(require(\"fontfaceobserver\"));\nvar _Font = require(\"./Font.types\");\nfunction getFontFaceStyleSheet() {\n  if (!_expoModulesCore.Platform.isDOMAvailable) {\n    return null;\n  }\n  var styleSheet = getStyleElement();\n  return styleSheet.sheet ? styleSheet.sheet : null;\n}\nfunction getFontFaceRules() {\n  var sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    var rules = (0, _toConsumableArray2.default)(sheet.cssRules);\n    var items = [];\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({\n          rule: rule,\n          index: i\n        });\n      }\n    }\n    return items;\n  }\n  return [];\n}\nfunction getFontFaceRulesMatchingResource(fontFamilyName, options) {\n  var rules = getFontFaceRules();\n  return rules.filter(function (_ref) {\n    var rule = _ref.rule;\n    return rule.style.fontFamily === fontFamilyName && (options && options.display ? options.display === rule.style.fontDisplay : true);\n  });\n}\nvar serverContext = new Set();\nfunction getHeadElements() {\n  var entries = (0, _toConsumableArray2.default)(serverContext.entries());\n  if (!entries.length) {\n    return [];\n  }\n  var css = entries.map(function (_ref2) {\n    var _ref3 = (0, _slicedToArray2.default)(_ref2, 1),\n      css = _ref3[0].css;\n    return css;\n  }).join('\\n');\n  var links = entries.map(function (_ref4) {\n    var _ref5 = (0, _slicedToArray2.default)(_ref4, 1),\n      resourceId = _ref5[0].resourceId;\n    return resourceId;\n  });\n  return [{\n    $$type: 'style',\n    children: css,\n    id: ID,\n    type: 'text/css'\n  }].concat((0, _toConsumableArray2.default)(links.map(function (resourceId) {\n    return {\n      $$type: 'link',\n      rel: 'preload',\n      href: resourceId,\n      as: 'font',\n      crossorigin: ''\n    };\n  })));\n}\nvar _default = exports.default = {\n  unloadAllAsync: function () {\n    var _unloadAllAsync = (0, _asyncToGenerator2.default)(function* () {\n      if (!_expoModulesCore.Platform.isDOMAvailable) return;\n      var element = document.getElementById(ID);\n      if (element && element instanceof HTMLStyleElement) {\n        document.removeChild(element);\n      }\n    });\n    function unloadAllAsync() {\n      return _unloadAllAsync.apply(this, arguments);\n    }\n    return unloadAllAsync;\n  }(),\n  unloadAsync: function () {\n    var _unloadAsync = (0, _asyncToGenerator2.default)(function* (fontFamilyName, options) {\n      var sheet = getFontFaceStyleSheet();\n      if (!sheet) return;\n      var items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n      for (var item of items) {\n        sheet.deleteRule(item.index);\n      }\n    });\n    function unloadAsync(_x, _x2) {\n      return _unloadAsync.apply(this, arguments);\n    }\n    return unloadAsync;\n  }(),\n  getServerResources: function getServerResources() {\n    var elements = getHeadElements();\n    return elements.map(function (element) {\n      switch (element.$$type) {\n        case 'style':\n          return `<style id=\"${element.id}\" type=\"${element.type}\">${element.children}</style>`;\n        case 'link':\n          return `<link rel=\"${element.rel}\" href=\"${element.href}\" as=\"${element.as}\" crossorigin=\"${element.crossorigin}\" />`;\n        default:\n          return '';\n      }\n    }).filter(Boolean);\n  },\n  resetServerContext: function resetServerContext() {\n    serverContext.clear();\n  },\n  getLoadedFonts: function getLoadedFonts() {\n    if (typeof window === 'undefined') {\n      return (0, _toConsumableArray2.default)(serverContext.values()).map(function (_ref6) {\n        var name = _ref6.name;\n        return name;\n      });\n    }\n    var rules = getFontFaceRules();\n    return rules.map(function (_ref7) {\n      var rule = _ref7.rule;\n      return rule.style.fontFamily;\n    });\n  },\n  isLoaded: function isLoaded(fontFamilyName) {\n    var _getFontFaceRulesMatc;\n    var resource = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (typeof window === 'undefined') {\n      return !!(0, _toConsumableArray2.default)(serverContext.values()).find(function (asset) {\n        return asset.name === fontFamilyName;\n      });\n    }\n    return ((_getFontFaceRulesMatc = getFontFaceRulesMatchingResource(fontFamilyName, resource)) == null ? void 0 : _getFontFaceRulesMatc.length) > 0;\n  },\n  loadAsync: function loadAsync(fontFamilyName, resource) {\n    if (typeof window === 'undefined') {\n      serverContext.add({\n        name: fontFamilyName,\n        css: _createWebFontTemplate(fontFamilyName, resource),\n        resourceId: resource.uri\n      });\n      return Promise.resolve();\n    }\n    var canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new _expoModulesCore.CodedError('ERR_WEB_ENVIRONMENT', `The browser's \\`document.head\\` element doesn't support injecting fonts.`);\n    }\n    var style = getStyleElement();\n    document.head.appendChild(style);\n    var res = getFontFaceRulesMatchingResource(fontFamilyName, resource);\n    if (!res.length) {\n      _createWebStyle(fontFamilyName, resource);\n    }\n    if (!isFontLoadingListenerSupported()) {\n      return Promise.resolve();\n    }\n    return new _fontfaceobserver.default(fontFamilyName, {\n      display: resource.display\n    }).load(null, 6000);\n  }\n};\nvar ID = 'expo-generated-fonts';\nfunction getStyleElement() {\n  var element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  var styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\nfunction _createWebFontTemplate(fontFamily, resource) {\n  return `@font-face{font-family:${fontFamily};src:url(${resource.uri});font-display:${resource.display || _Font.FontDisplay.AUTO}}`;\n}\nfunction _createWebStyle(fontFamily, resource) {\n  var fontStyle = _createWebFontTemplate(fontFamily, resource);\n  var styleElement = getStyleElement();\n  if (styleElement.styleSheet) {\n    var styleElementIE = styleElement;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText ? styleElementIE.styleSheet.cssText + fontStyle : fontStyle;\n  } else {\n    var textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\nfunction isFontLoadingListenerSupported() {\n  var userAgent = window.navigator.userAgent;\n  var isIOS = !!userAgent.match(/iPad|iPhone/i);\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var isEdge = userAgent.includes('Edge');\n  var isIE = userAgent.includes('Trident');\n  var isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}","map":{"version":3,"names":["_expoModulesCore","require","_fontfaceobserver","_interopRequireDefault","_Font","getFontFaceStyleSheet","Platform","isDOMAvailable","styleSheet","getStyleElement","sheet","getFontFaceRules","rules","_toConsumableArray2","default","cssRules","items","i","length","rule","CSSFontFaceRule","push","index","getFontFaceRulesMatchingResource","fontFamilyName","options","filter","_ref","style","fontFamily","display","fontDisplay","serverContext","Set","getHeadElements","entries","css","map","_ref2","_ref3","_slicedToArray2","join","links","_ref4","_ref5","resourceId","$$type","children","id","ID","type","concat","rel","href","as","crossorigin","_default","exports","unloadAllAsync","_unloadAllAsync","_asyncToGenerator2","element","document","getElementById","HTMLStyleElement","removeChild","apply","arguments","unloadAsync","_unloadAsync","item","deleteRule","_x","_x2","getServerResources","elements","Boolean","resetServerContext","clear","getLoadedFonts","window","values","_ref6","name","_ref7","isLoaded","_getFontFaceRulesMatc","resource","undefined","find","asset","loadAsync","add","_createWebFontTemplate","uri","Promise","resolve","canInjectStyle","head","appendChild","CodedError","res","_createWebStyle","isFontLoadingListenerSupported","FontObserver","load","styleElement","createElement","FontDisplay","AUTO","fontStyle","styleElementIE","cssText","textNode","createTextNode","userAgent","navigator","isIOS","match","isSafari","test","isEdge","includes","isIE","isFirefox"],"sources":["/home/runner/workspace/node_modules/expo-font/src/ExpoFontLoader.web.ts"],"sourcesContent":["import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\n\nimport { UnloadFontOptions } from './Font';\nimport { FontDisplay, FontResource } from './Font.types';\n\nfunction getFontFaceStyleSheet(): CSSStyleSheet | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  const styleSheet = getStyleElement();\n  return styleSheet.sheet ? (styleSheet.sheet as CSSStyleSheet) : null;\n}\n\ntype RuleItem = { rule: CSSFontFaceRule; index: number };\n\nfunction getFontFaceRules(): RuleItem[] {\n  const sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    // @ts-ignore: rule iterator\n    const rules = [...sheet.cssRules];\n\n    const items: RuleItem[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({ rule, index: i });\n      }\n    }\n    return items;\n  }\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(\n  fontFamilyName: string,\n  options?: UnloadFontOptions\n): RuleItem[] {\n  const rules = getFontFaceRules();\n  return rules.filter(({ rule }) => {\n    return (\n      rule.style.fontFamily === fontFamilyName &&\n      (options && options.display ? options.display === (rule.style as any).fontDisplay : true)\n    );\n  });\n}\n\nconst serverContext: Set<{ name: string; css: string; resourceId: string }> = new Set();\n\nfunction getHeadElements(): {\n  $$type: string;\n  rel?: string;\n  href?: string;\n  as?: string;\n  crossorigin?: string;\n  children?: string;\n  id?: string;\n  type?: string;\n}[] {\n  const entries = [...serverContext.entries()];\n  if (!entries.length) {\n    return [];\n  }\n  const css = entries.map(([{ css }]) => css).join('\\n');\n  const links = entries.map(([{ resourceId }]) => resourceId);\n  // TODO: Maybe return nothing if no fonts were loaded.\n  return [\n    {\n      $$type: 'style',\n      children: css,\n      id: ID,\n      type: 'text/css',\n    },\n    ...links.map((resourceId) => ({\n      $$type: 'link',\n      rel: 'preload',\n      href: resourceId,\n      as: 'font',\n      crossorigin: '',\n    })),\n  ];\n}\n\nexport default {\n  async unloadAllAsync(): Promise<void> {\n    if (!Platform.isDOMAvailable) return;\n\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n      document.removeChild(element);\n    }\n  },\n\n  async unloadAsync(fontFamilyName: string, options?: UnloadFontOptions): Promise<void> {\n    const sheet = getFontFaceStyleSheet();\n    if (!sheet) return;\n    const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n    for (const item of items) {\n      sheet.deleteRule(item.index);\n    }\n  },\n\n  getServerResources(): string[] {\n    const elements = getHeadElements();\n\n    return elements\n      .map((element) => {\n        switch (element.$$type) {\n          case 'style':\n            return `<style id=\"${element.id}\" type=\"${element.type}\">${element.children}</style>`;\n          case 'link':\n            return `<link rel=\"${element.rel}\" href=\"${element.href}\" as=\"${element.as}\" crossorigin=\"${element.crossorigin}\" />`;\n          default:\n            return '';\n        }\n      })\n      .filter(Boolean);\n  },\n\n  resetServerContext() {\n    serverContext.clear();\n  },\n\n  getLoadedFonts(): string[] {\n    if (typeof window === 'undefined') {\n      return [...serverContext.values()].map(({ name }) => name);\n    }\n    const rules = getFontFaceRules();\n    return rules.map(({ rule }) => rule.style.fontFamily);\n  },\n\n  isLoaded(fontFamilyName: string, resource: UnloadFontOptions = {}): boolean {\n    if (typeof window === 'undefined') {\n      return !![...serverContext.values()].find((asset) => {\n        return asset.name === fontFamilyName;\n      });\n    }\n    return getFontFaceRulesMatchingResource(fontFamilyName, resource)?.length > 0;\n  },\n\n  // NOTE(EvanBacon): No async keyword! This cannot return a promise in Node environments.\n  loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (typeof window === 'undefined') {\n      serverContext.add({\n        name: fontFamilyName,\n        css: _createWebFontTemplate(fontFamilyName, resource),\n        // @ts-expect-error: typeof string\n        resourceId: resource.uri!,\n      });\n      return Promise.resolve();\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError(\n        'ERR_WEB_ENVIRONMENT',\n        `The browser's \\`document.head\\` element doesn't support injecting fonts.`\n      );\n    }\n\n    const style = getStyleElement();\n    document.head!.appendChild(style);\n\n    const res = getFontFaceRulesMatchingResource(fontFamilyName, resource);\n    if (!res.length) {\n      _createWebStyle(fontFamilyName, resource);\n    }\n\n    if (!isFontLoadingListenerSupported()) {\n      return Promise.resolve();\n    }\n\n    return new FontObserver(fontFamilyName, {\n      // @ts-expect-error: TODO(@kitten): Typings indicate that the polyfill may not support this?\n      display: resource.display,\n    }).load(null, 6000);\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nexport function _createWebFontTemplate(fontFamily: string, resource: FontResource): string {\n  return `@font-face{font-family:${fontFamily};src:url(${resource.uri});font-display:${\n    resource.display || FontDisplay.AUTO\n  }}`;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = _createWebFontTemplate(fontFamily, resource);\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported(): boolean {\n  const { userAgent } = window.navigator;\n  // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n  const isIOS = !!userAgent.match(/iPad|iPhone/i);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n  const isEdge = userAgent.includes('Edge');\n  // Internet Explorer\n  const isIE = userAgent.includes('Trident');\n  // Firefox\n  const isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
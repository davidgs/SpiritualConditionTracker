{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.FABGroup = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _FAB = _interopRequireDefault(require(\"./FAB\"));\nvar _utils = require(\"./utils\");\nvar _theming = require(\"../../core/theming\");\nvar _Card = _interopRequireDefault(require(\"../Card/Card\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar AnimatedPressable = _reactNative.Animated.createAnimatedComponent(_reactNative.Pressable);\nvar FABGroup = exports.FABGroup = function FABGroup(_ref) {\n  var actions = _ref.actions,\n    icon = _ref.icon,\n    open = _ref.open,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    toggleStackOnLongPress = _ref.toggleStackOnLongPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    fabStyle = _ref.fabStyle,\n    visible = _ref.visible,\n    label = _ref.label,\n    testID = _ref.testID,\n    onStateChange = _ref.onStateChange,\n    colorProp = _ref.color,\n    _ref$delayLongPress = _ref.delayLongPress,\n    delayLongPress = _ref$delayLongPress === void 0 ? 200 : _ref$delayLongPress,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    _ref$enableLongPressW = _ref.enableLongPressWhenStackOpened,\n    enableLongPressWhenStackOpened = _ref$enableLongPressW === void 0 ? false : _ref$enableLongPressW,\n    customBackdropColor = _ref.backdropColor,\n    rippleColor = _ref.rippleColor;\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _useSafeAreaInsets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)(),\n    top = _useSafeAreaInsets.top,\n    bottom = _useSafeAreaInsets.bottom,\n    right = _useSafeAreaInsets.right,\n    left = _useSafeAreaInsets.left;\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(0)),\n    backdrop = _React$useRef.current;\n  var animations = React.useRef(actions.map(function () {\n    return new _reactNative.Animated.Value(open ? 1 : 0);\n  }));\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    isClosingAnimationFinished = _React$useState2[0],\n    setIsClosingAnimationFinished = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    prevActions = _React$useState4[0],\n    setPrevActions = _React$useState4[1];\n  var scale = theme.animation.scale;\n  var isV3 = theme.isV3;\n  React.useEffect(function () {\n    if (open) {\n      setIsClosingAnimationFinished(false);\n      _reactNative.Animated.parallel([_reactNative.Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), _reactNative.Animated.stagger(isV3 ? 15 : 50 * scale, animations.current.map(function (animation) {\n        return _reactNative.Animated.timing(animation, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      }).reverse())]).start();\n    } else {\n      _reactNative.Animated.parallel([_reactNative.Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      })].concat((0, _toConsumableArray2.default)(animations.current.map(function (animation) {\n        return _reactNative.Animated.timing(animation, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      })))).start(function (_ref2) {\n        var finished = _ref2.finished;\n        if (finished) {\n          setIsClosingAnimationFinished(true);\n        }\n      });\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n  var close = function close() {\n    return onStateChange({\n      open: false\n    });\n  };\n  var toggle = function toggle() {\n    return onStateChange({\n      open: !open\n    });\n  };\n  var handlePress = function handlePress(e) {\n    onPress === null || onPress === void 0 ? void 0 : onPress(e);\n    if (!toggleStackOnLongPress || open) {\n      toggle();\n    }\n  };\n  var handleLongPress = function handleLongPress(e) {\n    if (!open || enableLongPressWhenStackOpened) {\n      onLongPress === null || onLongPress === void 0 ? void 0 : onLongPress(e);\n      if (toggleStackOnLongPress) {\n        toggle();\n      }\n    }\n  };\n  var _getFABGroupColors = (0, _utils.getFABGroupColors)({\n      theme: theme,\n      customBackdropColor: customBackdropColor\n    }),\n    labelColor = _getFABGroupColors.labelColor,\n    backdropColor = _getFABGroupColors.backdropColor,\n    stackedFABBackgroundColor = _getFABGroupColors.stackedFABBackgroundColor;\n  var backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  var opacities = animations.current;\n  var scales = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n  });\n  var translations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [24, -8]\n    }) : -8;\n  });\n  var labelTranslations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [8, -8]\n    }) : -8;\n  });\n  var containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top\n  };\n  var actionsContainerVisibility = {\n    display: isClosingAnimationFinished ? 'none' : 'flex'\n  };\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map(function (_, i) {\n      return animations.current[i] || new _reactNative.Animated.Value(open ? 1 : 0);\n    });\n    setPrevActions(actions);\n  }\n  return React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, containerPaddings, style]\n  }, React.createElement(AnimatedPressable, {\n    accessibilityRole: \"button\",\n    onPress: close,\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: backdropColor\n    }]\n  }), React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(_reactNative.View, {\n    pointerEvents: open ? 'box-none' : 'none',\n    style: actionsContainerVisibility\n  }, actions.map(function (it, i) {\n    var _it$labelTextColor;\n    var labelTextStyle = Object.assign({\n      color: (_it$labelTextColor = it.labelTextColor) != null ? _it$labelTextColor : labelColor\n    }, isV3 ? theme.fonts.titleMedium : {});\n    var marginHorizontal = typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n    var accessibilityLabel = typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label;\n    var size = typeof it.size !== 'undefined' ? it.size : 'small';\n    var handleActionPress = function handleActionPress(e) {\n      it.onPress(e);\n      close();\n    };\n    return React.createElement(_reactNative.View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal: marginHorizontal\n      }, it.wrapperStyle],\n      pointerEvents: open ? 'box-none' : 'none',\n      accessibilityRole: \"button\",\n      importantForAccessibility: open ? 'yes' : 'no-hide-descendants',\n      accessibilityElementsHidden: !open,\n      accessible: open,\n      accessibilityLabel: accessibilityLabel\n    }, it.label && React.createElement(_reactNative.View, null, React.createElement(_Card.default, {\n      mode: isV3 ? 'contained' : 'elevated',\n      onPress: handleActionPress,\n      accessibilityHint: it.accessibilityHint,\n      importantForAccessibility: \"no-hide-descendants\",\n      accessibilityElementsHidden: true,\n      style: [styles.containerStyle, {\n        transform: [isV3 ? {\n          translateY: labelTranslations[i]\n        } : {\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, isV3 && styles.v3ContainerStyle, it.containerStyle]\n    }, React.createElement(_Text.default, {\n      variant: \"titleMedium\",\n      importantForAccessibility: \"no-hide-descendants\",\n      accessibilityElementsHidden: true,\n      style: [labelTextStyle, it.labelStyle],\n      maxFontSizeMultiplier: it.labelMaxFontSizeMultiplier\n    }, it.label))), React.createElement(_FAB.default, {\n      size: size,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: stackedFABBackgroundColor\n      }, isV3 && {\n        transform: [{\n          translateY: translations[i]\n        }]\n      }, it.style],\n      accessibilityElementsHidden: true,\n      theme: theme,\n      onPress: handleActionPress,\n      importantForAccessibility: \"no-hide-descendants\",\n      testID: it.testID,\n      visible: open,\n      rippleColor: it.rippleColor\n    }));\n  })), React.createElement(_FAB.default, {\n    onPress: handlePress,\n    onLongPress: handleLongPress,\n    delayLongPress: delayLongPress,\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    theme: theme,\n    visible: visible,\n    label: label,\n    testID: testID,\n    variant: variant,\n    rippleColor: rippleColor\n  })));\n};\nFABGroup.displayName = 'FAB.Group';\nvar _default = exports.default = FABGroup;\nvar styles = _reactNative.StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject),\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_reactNativeSafeAreaContext","_FAB","_interopRequireDefault","_utils","_theming","_Card","_Text","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","AnimatedPressable","Animated","createAnimatedComponent","Pressable","FABGroup","exports","_ref","actions","icon","open","onPress","onLongPress","toggleStackOnLongPress","accessibilityLabel","themeOverrides","theme","style","fabStyle","visible","label","testID","onStateChange","colorProp","color","_ref$delayLongPress","delayLongPress","_ref$variant","variant","_ref$enableLongPressW","enableLongPressWhenStackOpened","customBackdropColor","backdropColor","rippleColor","useInternalTheme","_useSafeAreaInsets","useSafeAreaInsets","top","bottom","right","left","_React$useRef","useRef","Value","backdrop","current","animations","map","_React$useState","useState","_React$useState2","_slicedToArray2","isClosingAnimationFinished","setIsClosingAnimationFinished","_React$useState3","_React$useState4","prevActions","setPrevActions","scale","animation","isV3","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","concat","_toConsumableArray2","_ref2","finished","close","toggle","handlePress","handleLongPress","_getFABGroupColors","getFABGroupColors","labelColor","stackedFABBackgroundColor","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","translations","labelTranslations","containerPaddings","paddingBottom","paddingRight","paddingLeft","paddingTop","actionsContainerVisibility","display","length","_","createElement","View","pointerEvents","styles","container","accessibilityRole","backgroundColor","safeArea","it","_it$labelTextColor","labelTextStyle","assign","labelTextColor","fonts","titleMedium","marginHorizontal","size","handleActionPress","key","item","wrapperStyle","importantForAccessibility","accessibilityElementsHidden","accessible","Card","mode","accessibilityHint","containerStyle","transform","translateY","v3ContainerStyle","Text","labelStyle","maxFontSizeMultiplier","labelMaxFontSizeMultiplier","FAB","accessibilityState","expanded","fab","displayName","_default","StyleSheet","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/FAB/FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport FAB from './FAB';\nimport { getFABGroupColors } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Card from '../Card/Card';\nimport type { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nexport type Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `accessibilityHint`: accessibility hint for the action\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\n   * - `wrapperStyle`: pass additional styles for the wrapper of the action item.\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n   * - `labelMaxFontSizeMultiplier`: specifies the largest possible scale a title font can reach.\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   * - `onLongPress`: callback that is called when `FAB` is long pressed\n   * - `toggleStackOnLongPress`: callback that is called when `FAB` is long pressed\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\n   * - `testID`: testID to be used on tests\n   * - `rippleColor`: color of the ripple effect.\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    accessibilityHint?: string;\n    style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    containerStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    wrapperStyle?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<TextStyle>;\n    labelMaxFontSizeMultiplier?: number;\n    onPress: (e: GestureResponderEvent) => void;\n    size?: 'small' | 'medium';\n    testID?: string;\n    rippleColor?: ColorValue;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long pressing the `FAB`.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Makes actions stack appear on long press instead of on press.\n   */\n  toggleStackOnLongPress?: boolean;\n  /**\n   * Changes the delay for long press reaction.\n   */\n  delayLongPress?: number;\n  /**\n   * Allows for onLongPress when stack is opened.\n   */\n  enableLongPressWhenStackOpened?: boolean;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Optional label for `FAB`.\n   */\n  label?: string;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](../Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, PaperProvider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <PaperProvider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           visible\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  onLongPress,\n  toggleStackOnLongPress,\n  accessibilityLabel,\n  theme: themeOverrides,\n  style,\n  fabStyle,\n  visible,\n  label,\n  testID,\n  onStateChange,\n  color: colorProp,\n  delayLongPress = 200,\n  variant = 'primary',\n  enableLongPressWhenStackOpened = false,\n  backdropColor: customBackdropColor,\n  rippleColor,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { top, bottom, right, left } = useSafeAreaInsets();\n\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [isClosingAnimationFinished, setIsClosingAnimationFinished] =\n    React.useState(false);\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n        onPress: (e: GestureResponderEvent) => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n  const { isV3 } = theme;\n\n  React.useEffect(() => {\n    if (open) {\n      setIsClosingAnimationFinished(false);\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          isV3 ? 15 : 50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start(({ finished }) => {\n        if (finished) {\n          setIsClosingAnimationFinished(true);\n        }\n      });\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  const close = () => onStateChange({ open: false });\n  const toggle = () => onStateChange({ open: !open });\n\n  const handlePress = (e: GestureResponderEvent) => {\n    onPress?.(e);\n    if (!toggleStackOnLongPress || open) {\n      toggle();\n    }\n  };\n\n  const handleLongPress = (e: GestureResponderEvent) => {\n    if (!open || enableLongPressWhenStackOpened) {\n      onLongPress?.(e);\n      if (toggleStackOnLongPress) {\n        toggle();\n      }\n    }\n  };\n\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\n    getFABGroupColors({ theme, customBackdropColor });\n\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1],\n        })\n      : 1\n  );\n\n  const translations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [24, -8],\n        })\n      : -8\n  );\n  const labelTranslations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [8, -8],\n        })\n      : -8\n  );\n\n  const containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top,\n  };\n\n  const actionsContainerVisibility: ViewStyle = {\n    display: isClosingAnimationFinished ? 'none' : 'flex',\n  };\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.container, containerPaddings, style]}\n    >\n      <AnimatedPressable\n        accessibilityRole=\"button\"\n        onPress={close}\n        pointerEvents={open ? 'auto' : 'none'}\n        style={[\n          styles.backdrop,\n          {\n            opacity: backdropOpacity,\n            backgroundColor: backdropColor,\n          },\n        ]}\n      />\n      <View pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View\n          pointerEvents={open ? 'box-none' : 'none'}\n          style={actionsContainerVisibility}\n        >\n          {actions.map((it, i) => {\n            const labelTextStyle = {\n              color: it.labelTextColor ?? labelColor,\n              ...(isV3 ? theme.fonts.titleMedium : {}),\n            };\n            const marginHorizontal =\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n            const accessibilityLabel =\n              typeof it.accessibilityLabel !== 'undefined'\n                ? it.accessibilityLabel\n                : it.label;\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\n\n            const handleActionPress = (e: GestureResponderEvent) => {\n              it.onPress(e);\n              close();\n            };\n\n            return (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={[\n                  styles.item,\n                  {\n                    marginHorizontal,\n                  },\n                  it.wrapperStyle,\n                ]}\n                pointerEvents={open ? 'box-none' : 'none'}\n                accessibilityRole=\"button\"\n                importantForAccessibility={open ? 'yes' : 'no-hide-descendants'}\n                accessibilityElementsHidden={!open}\n                accessible={open}\n                accessibilityLabel={accessibilityLabel}\n              >\n                {it.label && (\n                  <View>\n                    <Card\n                      mode={isV3 ? 'contained' : 'elevated'}\n                      onPress={handleActionPress}\n                      accessibilityHint={it.accessibilityHint}\n                      importantForAccessibility=\"no-hide-descendants\"\n                      accessibilityElementsHidden={true}\n                      style={[\n                        styles.containerStyle,\n                        {\n                          transform: [\n                            isV3\n                              ? { translateY: labelTranslations[i] }\n                              : { scale: scales[i] },\n                          ],\n                          opacity: opacities[i],\n                        },\n                        isV3 && styles.v3ContainerStyle,\n                        it.containerStyle,\n                      ]}\n                    >\n                      <Text\n                        variant=\"titleMedium\"\n                        importantForAccessibility=\"no-hide-descendants\"\n                        accessibilityElementsHidden={true}\n                        style={[labelTextStyle, it.labelStyle]}\n                        maxFontSizeMultiplier={it.labelMaxFontSizeMultiplier}\n                      >\n                        {it.label}\n                      </Text>\n                    </Card>\n                  </View>\n                )}\n                <FAB\n                  size={size}\n                  icon={it.icon}\n                  color={it.color}\n                  style={[\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: stackedFABBackgroundColor,\n                    },\n                    isV3 && { transform: [{ translateY: translations[i] }] },\n                    it.style,\n                  ]}\n                  accessibilityElementsHidden={true}\n                  theme={theme}\n                  onPress={handleActionPress}\n                  importantForAccessibility=\"no-hide-descendants\"\n                  testID={it.testID}\n                  visible={open}\n                  rippleColor={it.rippleColor}\n                />\n              </View>\n            );\n          })}\n        </View>\n        <FAB\n          onPress={handlePress}\n          onLongPress={handleLongPress}\n          delayLongPress={delayLongPress}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          theme={theme}\n          visible={visible}\n          label={label}\n          testID={testID}\n          variant={variant}\n          rippleColor={rippleColor}\n        />\n      </View>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default FABGroup;\n\n// @component-docs ignore-next-line\nexport { FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
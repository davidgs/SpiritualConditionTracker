{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Underline = require(\"./Addons/Underline\");\nvar _enums = require(\"./Adornment/enums\");\nvar _TextInputAdornment = _interopRequireWildcard(require(\"./Adornment/TextInputAdornment\"));\nvar _constants = require(\"./constants\");\nvar _helpers = require(\"./helpers\");\nvar _InputLabel = _interopRequireDefault(require(\"./Label/InputLabel\"));\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"cursorColor\", \"underlineColor\", \"underlineStyle\", \"activeUnderlineColor\", \"textColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLabelTextLayout\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"onInputLayout\", \"left\", \"right\", \"placeholderTextColor\", \"testID\", \"contentStyle\", \"scaledLabel\"],\n  _excluded2 = [\"fontSize\", \"lineHeight\", \"fontWeight\", \"height\", \"paddingHorizontal\", \"textAlign\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar TextInputFlat = function TextInputFlat(_ref) {\n  var _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    label = _ref.label,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    customSelectionColor = _ref.selectionColor,\n    cursorColor = _ref.cursorColor,\n    underlineColor = _ref.underlineColor,\n    underlineStyle = _ref.underlineStyle,\n    activeUnderlineColor = _ref.activeUnderlineColor,\n    textColor = _ref.textColor,\n    dense = _ref.dense,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(_reactNative.TextInput, props);\n    } : _ref$render,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    parentState = _ref.parentState,\n    innerRef = _ref.innerRef,\n    onFocus = _ref.onFocus,\n    forceFocus = _ref.forceFocus,\n    onBlur = _ref.onBlur,\n    onChangeText = _ref.onChangeText,\n    onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n    onLabelTextLayout = _ref.onLabelTextLayout,\n    onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n    onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n    onInputLayout = _ref.onInputLayout,\n    left = _ref.left,\n    right = _ref.right,\n    placeholderTextColor = _ref.placeholderTextColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'text-input-flat' : _ref$testID,\n    contentStyle = _ref.contentStyle,\n    scaledLabel = _ref.scaledLabel,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isAndroid = _reactNative.Platform.OS === 'android';\n  var colors = theme.colors,\n    isV3 = theme.isV3,\n    roundness = theme.roundness;\n  var font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n  var _getConstants = (0, _helpers.getConstants)(isV3),\n    LABEL_PADDING_TOP = _getConstants.LABEL_PADDING_TOP,\n    FLAT_INPUT_OFFSET = _getConstants.FLAT_INPUT_OFFSET,\n    MIN_HEIGHT = _getConstants.MIN_HEIGHT,\n    MIN_WIDTH = _getConstants.MIN_WIDTH;\n  var _ref2 = _reactNative.StyleSheet.flatten(style) || {},\n    fontSizeStyle = _ref2.fontSize,\n    lineHeightStyle = _ref2.lineHeight,\n    fontWeight = _ref2.fontWeight,\n    height = _ref2.height,\n    paddingHorizontal = _ref2.paddingHorizontal,\n    textAlign = _ref2.textAlign,\n    viewStyle = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n  var fontSize = fontSizeStyle || _constants.MAXIMIZED_LABEL_FONT_SIZE;\n  var lineHeight = lineHeightStyle || (_reactNative.Platform.OS === 'web' ? fontSize * 1.2 : undefined);\n  var isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n  var adornmentConfig = (0, _TextInputAdornment.getAdornmentConfig)({\n    left: left,\n    right: right\n  });\n  var _calculateFlatInputHo = (0, _helpers.calculateFlatInputHorizontalPadding)({\n      adornmentConfig: adornmentConfig,\n      isV3: isV3\n    }),\n    paddingLeft = _calculateFlatInputHo.paddingLeft,\n    paddingRight = _calculateFlatInputHo.paddingRight;\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal;\n    paddingRight = paddingHorizontal;\n  }\n  var leftLayout = parentState.leftLayout,\n    rightLayout = parentState.rightLayout;\n  var rightAffixWidth = right ? rightLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = (0, _TextInputAdornment.getAdornmentStyleAdjustmentForNativeInput)({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    paddingHorizontal: paddingHorizontal,\n    inputOffset: FLAT_INPUT_OFFSET,\n    mode: _enums.InputMode.Flat,\n    isV3: isV3\n  });\n  var _getFlatInputColors = (0, _helpers.getFlatInputColors)({\n      underlineColor: underlineColor,\n      activeUnderlineColor: activeUnderlineColor,\n      customSelectionColor: customSelectionColor,\n      textColor: textColor,\n      disabled: disabled,\n      error: error,\n      theme: theme\n    }),\n    inputTextColor = _getFlatInputColors.inputTextColor,\n    activeColor = _getFlatInputColors.activeColor,\n    underlineColorCustom = _getFlatInputColors.underlineColorCustom,\n    placeholderColor = _getFlatInputColors.placeholderColor,\n    errorColor = _getFlatInputColors.errorColor,\n    backgroundColor = _getFlatInputColors.backgroundColor,\n    selectionColor = _getFlatInputColors.selectionColor;\n  var containerStyle = {\n    backgroundColor: backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness\n  };\n  var labelScale = _constants.MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = _constants.MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (_reactNative.I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (_reactNative.I18nManager.getConstants().isRTL ? -1 : 1) * paddingLeft;\n  var minInputHeight = dense ? (label ? _constants.MIN_DENSE_HEIGHT_WL : _constants.MIN_DENSE_HEIGHT) - _constants.LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n  var inputHeight = (0, _helpers.calculateInputHeight)(labelHeight, height, minInputHeight);\n  var topPosition = (0, _helpers.calculateLabelTopPosition)(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    label: label,\n    scale: fontScale,\n    isAndroid: isAndroid,\n    styles: _reactNative.StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n  };\n  var pad = (0, _helpers.calculatePadding)(paddingSettings);\n  var paddingFlat = (0, _helpers.adjustPaddingFlat)(Object.assign({}, paddingSettings, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + _constants.MINIMIZED_LABEL_Y_OFFSET);\n  var _React$useRef = React.useRef([new _reactNative.Animated.Value(0), new _reactNative.Animated.Value(1)]),\n    placeholderOpacityAnims = _React$useRef.current;\n  var placeholderOpacity = hasActiveOutline ? parentState.labeled : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n  var placeholderTextColorBasedOnState = parentState.displayPlaceholder ? placeholderTextColor != null ? placeholderTextColor : placeholderColor : 'transparent';\n  var minHeight = height || (dense ? label ? _constants.MIN_DENSE_HEIGHT_WL : _constants.MIN_DENSE_HEIGHT : MIN_HEIGHT);\n  var flatHeight = inputHeight + (!height ? dense ? _constants.LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n  var iconTopPosition = (flatHeight - _constants.ADORNMENT_SIZE) / 2;\n  var leftAffixTopPosition = leftLayout.height ? (0, _helpers.calculateFlatAffixTopPosition)(Object.assign({\n    height: flatHeight\n  }, paddingFlat, {\n    affixHeight: leftLayout.height\n  })) : null;\n  var rightAffixTopPosition = rightLayout.height ? (0, _helpers.calculateFlatAffixTopPosition)(Object.assign({\n    height: flatHeight\n  }, paddingFlat, {\n    affixHeight: rightLayout.height\n  })) : null;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    onLabelTextLayout: onLabelTextLayout,\n    placeholderOpacity: placeholderOpacity,\n    labelError: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: _constants.LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    paddingLeft: isAndroid ? _reactNative.I18nManager.isRTL ? paddingRight : paddingLeft : paddingLeft,\n    paddingRight: isAndroid ? _reactNative.I18nManager.isRTL ? paddingLeft : paddingRight : paddingRight,\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    errorColor: errorColor,\n    roundness: roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID: testID,\n    contentStyle: contentStyle,\n    inputContainerLayout: parentState.inputContainerLayout,\n    labelTextLayout: parentState.labelTextLayout,\n    opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1,\n    isV3: isV3\n  };\n  var affixTopPosition = (0, _defineProperty2.default)((0, _defineProperty2.default)({}, _enums.AdornmentSide.Left, leftAffixTopPosition), _enums.AdornmentSide.Right, rightAffixTopPosition);\n  var onAffixChange = (0, _defineProperty2.default)((0, _defineProperty2.default)({}, _enums.AdornmentSide.Left, onLeftAffixLayoutChange), _enums.AdornmentSide.Right, onRightAffixLayoutChange);\n  var adornmentProps = {\n    paddingHorizontal: paddingHorizontal,\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (0, _defineProperty2.default)((0, _defineProperty2.default)({}, _enums.AdornmentType.Affix, affixTopPosition), _enums.AdornmentType.Icon, iconTopPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled: disabled\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = Object.assign({}, adornmentProps, {\n      left: left,\n      right: right,\n      textStyle: Object.assign({}, font, {\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(_reactNative.View, {\n    style: [containerStyle, viewStyle]\n  }, React.createElement(_Underline.Underline, {\n    style: underlineStyle,\n    hasActiveOutline: hasActiveOutline,\n    parentState: parentState,\n    underlineColorCustom: underlineColorCustom,\n    error: error,\n    colors: colors,\n    activeColor: activeColor,\n    theme: theme\n  }), React.createElement(_reactNative.View, {\n    onLayout: onInputLayout,\n    style: [styles.labelContainer, {\n      minHeight: minHeight\n    }]\n  }, !isAndroid && multiline && !!label && !disabled && React.createElement(_reactNative.View, {\n    testID: \"patch-container\",\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, dense ? styles.densePatchContainer : styles.patchContainer, {\n      backgroundColor: viewStyle.backgroundColor || containerStyle.backgroundColor,\n      left: paddingLeft,\n      right: paddingRight\n    }]\n  }), label ? React.createElement(_InputLabel.default, _extends({\n    labeled: parentState.labeled,\n    error: parentState.error,\n    focused: parentState.focused,\n    scaledLabel: scaledLabel,\n    wiggle: Boolean(parentState.value && labelProps.labelError),\n    labelLayoutMeasured: parentState.labelLayout.measured,\n    labelLayoutWidth: parentState.labelLayout.width,\n    labelLayoutHeight: parentState.labelLayout.height\n  }, labelProps)) : null, render === null || render === void 0 ? void 0 : render(Object.assign({}, rest, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: rest.placeholder,\n    editable: !disabled && editable,\n    selectionColor: selectionColor,\n    cursorColor: typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n    placeholderTextColor: placeholderTextColorBasedOnState,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, multiline && height ? {\n      height: flatHeight\n    } : {}, paddingFlat, Object.assign({\n      paddingLeft: paddingLeft,\n      paddingRight: paddingRight\n    }, font, {\n      fontSize: fontSize,\n      lineHeight: lineHeight,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : _reactNative.I18nManager.getConstants().isRTL ? 'right' : 'left',\n      minWidth: Math.min(parentState.labelTextLayout.width + 2 * FLAT_INPUT_OFFSET, MIN_WIDTH)\n    }), _reactNative.Platform.OS === 'web' ? {\n      outline: 'none'\n    } : undefined, adornmentStyleAdjustmentForNativeInput, contentStyle],\n    testID: testID\n  }))), React.createElement(_TextInputAdornment.default, adornmentProps));\n};\nvar _default = exports.default = TextInputFlat;\nvar styles = _reactNative.StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    flexGrow: 1\n  },\n  input: {\n    margin: 0,\n    flexGrow: 1\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_Underline","_enums","_TextInputAdornment","_constants","_helpers","_InputLabel","_interopRequireDefault","_excluded","_excluded2","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","TextInputFlat","_ref","_ref$disabled","disabled","_ref$editable","editable","label","_ref$error","error","customSelectionColor","selectionColor","cursorColor","underlineColor","underlineStyle","activeUnderlineColor","textColor","dense","style","theme","_ref$render","render","props","createElement","NativeTextInput","_ref$multiline","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLabelTextLayout","onLeftAffixLayoutChange","onRightAffixLayoutChange","onInputLayout","left","right","placeholderTextColor","_ref$testID","testID","contentStyle","scaledLabel","rest","_objectWithoutProperties2","isAndroid","Platform","OS","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","_getConstants","getConstants","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","MIN_WIDTH","_ref2","StyleSheet","flatten","fontSizeStyle","fontSize","lineHeightStyle","lineHeight","fontWeight","height","paddingHorizontal","textAlign","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","undefined","isPaddingHorizontalPassed","adornmentConfig","getAdornmentConfig","_calculateFlatInputHo","calculateFlatInputHorizontalPadding","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","ADORNMENT_SIZE","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","inputOffset","mode","InputMode","Flat","_getFlatInputColors","getFlatInputColors","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","LABEL_PADDING_TOP_DENSE","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","calculatePadding","paddingFlat","adjustPaddingFlat","assign","baseLabelTranslateY","MINIMIZED_LABEL_Y_OFFSET","_React$useRef","useRef","Animated","Value","placeholderOpacityAnims","current","placeholderOpacity","labeled","measured","placeholderTextColorBasedOnState","displayPlaceholder","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","calculateFlatAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","labelError","placeholderStyle","placeholder","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","maxFontSizeMultiplier","inputContainerLayout","labelTextLayout","opacity","value","affixTopPosition","_defineProperty2","AdornmentSide","Left","Right","onAffixChange","adornmentProps","AdornmentType","Affix","Icon","isTextInputFocused","length","textStyle","visible","View","Underline","onLayout","labelContainer","pointerEvents","absoluteFill","densePatchContainer","patchContainer","InputLabel","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","labelLayoutHeight","ref","underlineColorAndroid","input","color","textAlignVertical","minWidth","Math","min","outline","TextInputAdornment","_default","exports","create","position","paddingTop","paddingBottom","flexGrow","margin","zIndex"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/TextInput/TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextInput as NativeTextInput,\n  TextStyle,\n  View,\n  Animated,\n} from 'react-native';\n\nimport { Underline } from './Addons/Underline';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport {\n  ADORNMENT_SIZE,\n  LABEL_PADDING_TOP_DENSE,\n  LABEL_WIGGLE_X_OFFSET,\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  MIN_DENSE_HEIGHT,\n  MIN_DENSE_HEIGHT_WL,\n} from './constants';\nimport {\n  adjustPaddingFlat,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  calculateInputHeight,\n  calculateLabelTopPosition,\n  calculatePadding,\n  getConstants,\n  getFlatInputColors,\n  Padding,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport type { ChildTextInputProps, RenderProps } from './types';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor,\n  underlineStyle,\n  activeUnderlineColor,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLabelTextLayout,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  onInputLayout,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-flat',\n  contentStyle,\n  scaledLabel,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT, MIN_WIDTH } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    lineHeight: lineHeightStyle,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight =\n    lineHeightStyle || (Platform.OS === 'web' ? fontSize * 1.2 : undefined);\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n    selectionColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) *\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const { current: placeholderOpacityAnims } = React.useRef([\n    new Animated.Value(0),\n    new Animated.Value(1),\n  ]);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n\n  // We don't want to show placeholder if label is displayed, because they overlap.\n  // Before it was done by setting placeholder's value to \" \", but inputs have the same props\n  // what causes broken styles due to: https://github.com/facebook/react-native/issues/48249\n  const placeholderTextColorBasedOnState = parentState.displayPlaceholder\n    ? placeholderTextColor ?? placeholderColor\n    : 'transparent';\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingLeft: isAndroid\n      ? I18nManager.isRTL\n        ? paddingRight\n        : paddingLeft\n      : paddingLeft,\n    paddingRight: isAndroid\n      ? I18nManager.isRTL\n        ? paddingLeft\n        : paddingRight\n      : paddingRight,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    inputContainerLayout: parentState.inputContainerLayout,\n    labelTextLayout: parentState.labelTextLayout,\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n    isV3,\n  };\n\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        style={underlineStyle}\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n        theme={theme}\n      />\n      <View\n        onLayout={onInputLayout}\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && !disabled && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        {label ? (\n          <InputLabel\n            labeled={parentState.labeled}\n            error={parentState.error}\n            focused={parentState.focused}\n            scaledLabel={scaledLabel}\n            wiggle={Boolean(parentState.value && labelProps.labelError)}\n            labelLayoutMeasured={parentState.labelLayout.measured}\n            labelLayoutWidth={parentState.labelLayout.width}\n            labelLayoutHeight={parentState.labelLayout.height}\n            {...labelProps}\n          />\n        ) : null}\n        {render?.({\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: rest.placeholder,\n          editable: !disabled && editable,\n          selectionColor,\n          cursorColor:\n            typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n          placeholderTextColor: placeholderTextColorBasedOnState,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            multiline && height ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              paddingLeft,\n              paddingRight,\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n              minWidth: Math.min(\n                parentState.labelTextLayout.width + 2 * FLAT_INPUT_OFFSET,\n                MIN_WIDTH\n              ),\n            },\n            Platform.OS === 'web' ? { outline: 'none' } : undefined,\n            adornmentStyleAdjustmentForNativeInput,\n            contentStyle,\n          ],\n          testID,\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    flexGrow: 1,\n  },\n  input: {\n    margin: 0,\n    flexGrow: 1,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
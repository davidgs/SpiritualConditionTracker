{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _theming = require(\"../../core/theming\");\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _excluded = [\"icon\", \"label\", \"active\", \"disabled\", \"theme\", \"rippleColor\", \"style\", \"onPress\", \"background\", \"accessibilityLabel\", \"right\", \"labelMaxFontSizeMultiplier\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar DrawerItem = function DrawerItem(_ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    active = _ref.active,\n    disabled = _ref.disabled,\n    themeOverrides = _ref.theme,\n    customRippleColor = _ref.rippleColor,\n    style = _ref.style,\n    onPress = _ref.onPress,\n    background = _ref.background,\n    accessibilityLabel = _ref.accessibilityLabel,\n    right = _ref.right,\n    labelMaxFontSizeMultiplier = _ref.labelMaxFontSizeMultiplier,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var roundness = theme.roundness,\n    isV3 = theme.isV3;\n  var backgroundColor = active ? isV3 ? theme.colors.secondaryContainer : (0, _color.default)(theme.colors.primary).alpha(0.12).rgb().string() : undefined;\n  var contentColor = active ? isV3 ? theme.colors.onSecondaryContainer : theme.colors.primary : isV3 ? theme.colors.onSurfaceVariant : (0, _color.default)(theme.colors.text).alpha(0.68).rgb().string();\n  var labelMargin = icon ? isV3 ? 12 : 32 : 0;\n  var borderRadius = (isV3 ? 7 : 1) * roundness;\n  var rippleColor = isV3 ? (0, _color.default)(contentColor).alpha(0.12).rgb().string() : undefined;\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  return React.createElement(_reactNative.View, rest, React.createElement(_TouchableRipple.default, {\n    borderless: true,\n    disabled: disabled,\n    background: background,\n    onPress: onPress,\n    style: [styles.container, {\n      backgroundColor: backgroundColor,\n      borderRadius: borderRadius\n    }, isV3 && styles.v3Container, style],\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel,\n    rippleColor: customRippleColor || rippleColor,\n    theme: theme\n  }, React.createElement(_reactNative.View, {\n    style: [styles.wrapper, isV3 && styles.v3Wrapper]\n  }, React.createElement(_reactNative.View, {\n    style: styles.content\n  }, icon ? React.createElement(_Icon.default, {\n    source: icon,\n    size: 24,\n    color: contentColor\n  }) : null, React.createElement(_Text.default, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.label, Object.assign({\n      color: contentColor,\n      marginLeft: labelMargin\n    }, font)],\n    maxFontSizeMultiplier: labelMaxFontSizeMultiplier\n  }, label)), right === null || right === void 0 ? void 0 : right({\n    color: contentColor\n  }))));\n};\nDrawerItem.displayName = 'Drawer.Item';\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    marginRight: 32\n  }\n});\nvar _default = exports.default = DrawerItem;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_color","_interopRequireDefault","_theming","_Icon","_TouchableRipple","_Text","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","DrawerItem","_ref","icon","label","active","disabled","themeOverrides","theme","customRippleColor","rippleColor","style","onPress","background","accessibilityLabel","right","labelMaxFontSizeMultiplier","rest","_objectWithoutProperties2","useInternalTheme","roundness","isV3","backgroundColor","colors","secondaryContainer","color","primary","alpha","rgb","string","undefined","contentColor","onSecondaryContainer","onSurfaceVariant","text","labelMargin","borderRadius","font","fonts","labelLarge","medium","createElement","View","TouchableRipple","borderless","styles","container","v3Container","accessibilityRole","accessibilityState","selected","wrapper","v3Wrapper","content","Icon","source","size","Text","variant","selectable","numberOfLines","assign","marginLeft","maxFontSizeMultiplier","displayName","StyleSheet","create","marginHorizontal","marginVertical","justifyContent","height","marginRight","flexDirection","alignItems","padding","flex","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/Drawer/DrawerItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Whether the item is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Callback which returns a React element to display on the right side. For instance a Badge.\n   */\n  right?: (props: { color: string }) => React.ReactNode;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  disabled,\n  theme: themeOverrides,\n  rippleColor: customRippleColor,\n  style,\n  onPress,\n  background,\n  accessibilityLabel,\n  right,\n  labelMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { roundness, isV3 } = theme;\n\n  const backgroundColor = active\n    ? isV3\n      ? theme.colors.secondaryContainer\n      : color(theme.colors.primary).alpha(0.12).rgb().string()\n    : undefined;\n  const contentColor = active\n    ? isV3\n      ? theme.colors.onSecondaryContainer\n      : theme.colors.primary\n    : isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.68).rgb().string();\n\n  const labelMargin = icon ? (isV3 ? 12 : 32) : 0;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const rippleColor = isV3\n    ? color(contentColor).alpha(0.12).rgb().string()\n    : undefined;\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  return (\n    <View {...rest}>\n      <TouchableRipple\n        borderless\n        disabled={disabled}\n        background={background}\n        onPress={onPress}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius },\n          isV3 && styles.v3Container,\n          style,\n        ]}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        rippleColor={customRippleColor || rippleColor}\n        theme={theme}\n      >\n        <View style={[styles.wrapper, isV3 && styles.v3Wrapper]}>\n          <View style={styles.content}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              variant=\"labelLarge\"\n              selectable={false}\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  marginLeft: labelMargin,\n                  ...font,\n                },\n              ]}\n              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n            >\n              {label}\n            </Text>\n          </View>\n\n          {right?.({ color: contentColor })}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default DrawerItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
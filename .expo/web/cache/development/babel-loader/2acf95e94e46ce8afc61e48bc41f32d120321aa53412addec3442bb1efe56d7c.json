{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIsKeyboardShown;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction useIsKeyboardShown(_ref) {\n  var onShow = _ref.onShow,\n    onHide = _ref.onHide;\n  React.useEffect(function () {\n    var willShowSubscription;\n    var willHideSubscription;\n    var didShowSubscription;\n    var didHideSubscription;\n    if (_reactNative.Platform.OS === 'ios') {\n      willShowSubscription = _reactNative.Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = _reactNative.Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = _reactNative.Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = _reactNative.Keyboard.addListener('keyboardDidHide', onHide);\n    }\n    return function () {\n      if (_reactNative.Platform.OS === 'ios') {\n        var _willShowSubscription, _willHideSubscription;\n        if ((_willShowSubscription = willShowSubscription) !== null && _willShowSubscription !== void 0 && _willShowSubscription.remove) {\n          willShowSubscription.remove();\n        } else {\n          _reactNative.Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n        if ((_willHideSubscription = willHideSubscription) !== null && _willHideSubscription !== void 0 && _willHideSubscription.remove) {\n          willHideSubscription.remove();\n        } else {\n          _reactNative.Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        var _didShowSubscription, _didHideSubscription;\n        if ((_didShowSubscription = didShowSubscription) !== null && _didShowSubscription !== void 0 && _didShowSubscription.remove) {\n          didShowSubscription.remove();\n        } else {\n          _reactNative.Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n        if ((_didHideSubscription = didHideSubscription) !== null && _didHideSubscription !== void 0 && _didHideSubscription.remove) {\n          didHideSubscription.remove();\n        } else {\n          _reactNative.Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useIsKeyboardShown","_ref","onShow","onHide","useEffect","willShowSubscription","willHideSubscription","didShowSubscription","didHideSubscription","Platform","OS","Keyboard","addListener","_willShowSubscription","_willHideSubscription","remove","removeListener","_didShowSubscription","_didHideSubscription"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/utils/useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n  onShow: () => void;\n  onHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n  React.useEffect(() => {\n    let willShowSubscription: NativeEventSubscription | undefined;\n    let willHideSubscription: NativeEventSubscription | undefined;\n    let didShowSubscription: NativeEventSubscription | undefined;\n    let didHideSubscription: NativeEventSubscription | undefined;\n\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        if (willShowSubscription?.remove) {\n          willShowSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if (willHideSubscription?.remove) {\n          willHideSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        if (didShowSubscription?.remove) {\n          didShowSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if (didHideSubscription?.remove) {\n          didHideSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
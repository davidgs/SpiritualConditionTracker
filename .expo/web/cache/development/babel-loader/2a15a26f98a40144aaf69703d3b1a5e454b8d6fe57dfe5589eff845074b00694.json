{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.userOperations = exports.update = exports.spiritualFitnessOperations = exports.query = exports.meetingOperations = exports.insert = exports.initDatabase = exports.getById = exports.getAll = exports.deleteById = exports.default = exports.calculateSobrietyYears = exports.calculateSobrietyDays = exports.calculateDistance = exports.activityOperations = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar STORAGE_KEYS = {\n  users: 'aa_tracker_users',\n  activities: 'aa_tracker_activities',\n  spiritualFitness: 'aa_tracker_spiritual_fitness',\n  meetings: 'aa_tracker_meetings',\n  meetingReminders: 'aa_tracker_meeting_reminders',\n  nearbyMembers: 'aa_tracker_nearby_members'\n};\nvar initDatabase = exports.initDatabase = function () {\n  var _ref = (0, _asyncToGenerator2.default)(function* () {\n    console.log('Initializing web localStorage database...');\n    try {\n      Object.values(STORAGE_KEYS).forEach(function (key) {\n        if (!localStorage.getItem(key)) {\n          localStorage.setItem(key, JSON.stringify([]));\n        }\n      });\n      console.log('Web localStorage database initialized');\n      return true;\n    } catch (error) {\n      console.error('Error initializing web database:', error);\n      throw error;\n    }\n  });\n  return function initDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getAll = exports.getAll = function getAll(collection) {\n  var key = STORAGE_KEYS[collection];\n  if (!key) {\n    console.error(`Unknown collection: ${collection}`);\n    return [];\n  }\n  try {\n    return JSON.parse(localStorage.getItem(key)) || [];\n  } catch (error) {\n    console.error(`Error getting items from ${collection}:`, error);\n    return [];\n  }\n};\nvar getById = exports.getById = function getById(collection, id) {\n  var items = getAll(collection);\n  return items.find(function (item) {\n    return item.id === id;\n  }) || null;\n};\nvar insert = exports.insert = function insert(collection, item) {\n  var key = STORAGE_KEYS[collection];\n  if (!key) {\n    console.error(`Unknown collection: ${collection}`);\n    return null;\n  }\n  try {\n    var items = getAll(collection);\n    items.push(item);\n    localStorage.setItem(key, JSON.stringify(items));\n    return item;\n  } catch (error) {\n    console.error(`Error adding item to ${collection}:`, error);\n    return null;\n  }\n};\nvar update = exports.update = function update(collection, id, updates) {\n  var key = STORAGE_KEYS[collection];\n  if (!key) {\n    console.error(`Unknown collection: ${collection}`);\n    return null;\n  }\n  try {\n    var items = getAll(collection);\n    var index = items.findIndex(function (item) {\n      return item.id === id;\n    });\n    if (index === -1) {\n      return null;\n    }\n    var updatedItem = Object.assign({}, items[index], updates);\n    items[index] = updatedItem;\n    localStorage.setItem(key, JSON.stringify(items));\n    return updatedItem;\n  } catch (error) {\n    console.error(`Error updating item in ${collection}:`, error);\n    return null;\n  }\n};\nvar deleteById = exports.deleteById = function deleteById(collection, id) {\n  var key = STORAGE_KEYS[collection];\n  if (!key) {\n    console.error(`Unknown collection: ${collection}`);\n    return false;\n  }\n  try {\n    var items = getAll(collection);\n    var filteredItems = items.filter(function (item) {\n      return item.id !== id;\n    });\n    if (filteredItems.length === items.length) {\n      return false;\n    }\n    localStorage.setItem(key, JSON.stringify(filteredItems));\n    return true;\n  } catch (error) {\n    console.error(`Error removing item from ${collection}:`, error);\n    return false;\n  }\n};\nvar query = exports.query = function query(collection, predicate) {\n  var items = getAll(collection);\n  return items.filter(predicate);\n};\nvar calculateDistance = exports.calculateDistance = function calculateDistance(lat1, lon1, lat2, lon2) {\n  if (lat1 === lat2 && lon1 === lon2) {\n    return 0;\n  }\n  var radlat1 = Math.PI * lat1 / 180;\n  var radlat2 = Math.PI * lat2 / 180;\n  var theta = lon1 - lon2;\n  var radtheta = Math.PI * theta / 180;\n  var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n  if (dist > 1) dist = 1;\n  dist = Math.acos(dist);\n  dist = dist * 180 / Math.PI;\n  dist = dist * 60 * 1.1515;\n  return dist;\n};\nvar calculateSobrietyDays = exports.calculateSobrietyDays = function calculateSobrietyDays(sobrietyDate) {\n  if (!sobrietyDate) return 0;\n  var start = new Date(sobrietyDate);\n  var today = new Date();\n  start.setHours(0, 0, 0, 0);\n  today.setHours(0, 0, 0, 0);\n  var diffTime = Math.abs(today - start);\n  var diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  return diffDays;\n};\nvar calculateSobrietyYears = exports.calculateSobrietyYears = function calculateSobrietyYears(sobrietyDate) {\n  var decimalPlaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var days = calculateSobrietyDays(sobrietyDate);\n  var years = days / 365.25;\n  return parseFloat(years.toFixed(decimalPlaces));\n};\nvar userOperations = exports.userOperations = {\n  createUser: function createUser(userData) {\n    var now = new Date().toISOString();\n    var userId = userData.id || `user_${Date.now()}`;\n    var user = {\n      id: userId,\n      name: userData.name || '',\n      sobrietyDate: userData.sobrietyDate || null,\n      homeGroup: userData.homeGroup || '',\n      phone: userData.phone || '',\n      email: userData.email || '',\n      sponsorId: userData.sponsorId || null,\n      privacySettings: userData.privacySettings || {},\n      createdAt: now,\n      updatedAt: now\n    };\n    insert('users', user);\n    return userId;\n  },\n  getUserById: function getUserById(userId) {\n    return getById('users', userId);\n  },\n  updateUser: function updateUser(userId, userData) {\n    var updates = Object.assign({\n      updatedAt: new Date().toISOString()\n    }, userData);\n    return update('users', userId, updates);\n  }\n};\nvar activityOperations = exports.activityOperations = {\n  createActivity: function createActivity(activityData) {\n    var now = new Date().toISOString();\n    var activityId = activityData.id || `activity_${Date.now()}`;\n    var activity = {\n      id: activityId,\n      userId: activityData.userId,\n      type: activityData.type,\n      date: activityData.date || now,\n      duration: activityData.duration || 0,\n      notes: activityData.notes || '',\n      createdAt: now\n    };\n    insert('activities', activity);\n    return activityId;\n  },\n  getUserActivities: function getUserActivities(userId) {\n    return query('activities', function (activity) {\n      return activity.userId === userId;\n    }).sort(function (a, b) {\n      return new Date(b.date) - new Date(a.date);\n    });\n  },\n  getRecentActivities: function getRecentActivities(userId) {\n    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return query('activities', function (activity) {\n      return activity.userId === userId;\n    }).sort(function (a, b) {\n      return new Date(b.date) - new Date(a.date);\n    }).slice(0, limit);\n  },\n  deleteActivity: function deleteActivity(activityId) {\n    return deleteById('activities', activityId);\n  }\n};\nvar spiritualFitnessOperations = exports.spiritualFitnessOperations = {\n  calculateSpiritualFitness: function calculateSpiritualFitness(userId) {\n    var thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    var activities = query('activities', function (activity) {\n      return activity.userId === userId && new Date(activity.date) >= thirtyDaysAgo;\n    });\n    var scores = {\n      prayer: 0,\n      meditation: 0,\n      reading: 0,\n      meeting: 0,\n      service: 0\n    };\n    activities.forEach(function (activity) {\n      var type = activity.type.toLowerCase();\n      var duration = activity.duration || 0;\n      if (type.includes('prayer')) {\n        scores.prayer += duration / 10;\n      } else if (type.includes('meditation')) {\n        scores.meditation += duration / 15;\n      } else if (type.includes('reading')) {\n        scores.reading += duration / 20;\n      } else if (type.includes('meeting')) {\n        scores.meeting += 1;\n      } else if (type.includes('service')) {\n        scores.service += duration / 30;\n      }\n    });\n    Object.keys(scores).forEach(function (key) {\n      scores[key] = Math.min(10, scores[key]);\n    });\n    var totalScore = Object.values(scores).reduce(function (sum, score) {\n      return sum + score;\n    }, 0);\n    var finalScore = parseFloat((totalScore / 50 * 100).toFixed(2));\n    var now = new Date().toISOString();\n    var fitnessId = `sf_${Date.now()}`;\n    var fitnessRecord = {\n      id: fitnessId,\n      userId: userId,\n      score: finalScore,\n      prayerScore: scores.prayer,\n      meditationScore: scores.meditation,\n      readingScore: scores.reading,\n      meetingScore: scores.meeting,\n      serviceScore: scores.service,\n      calculatedAt: now\n    };\n    insert('spiritualFitness', fitnessRecord);\n    return {\n      score: finalScore,\n      details: scores,\n      calculatedAt: now\n    };\n  }\n};\nvar meetingOperations = exports.meetingOperations = {\n  createMeeting: function createMeeting(meetingData) {\n    var now = new Date().toISOString();\n    var meetingId = meetingData.id || `meeting_${Date.now()}`;\n    var meeting = {\n      id: meetingId,\n      name: meetingData.name || '',\n      day: meetingData.day || '',\n      time: meetingData.time || '',\n      location: meetingData.location || '',\n      address: meetingData.address || '',\n      city: meetingData.city || '',\n      state: meetingData.state || '',\n      zip: meetingData.zip || '',\n      type: meetingData.type || '',\n      notes: meetingData.notes || '',\n      shared: meetingData.shared === true,\n      createdBy: meetingData.createdBy || null,\n      createdAt: now,\n      updatedAt: now\n    };\n    insert('meetings', meeting);\n    return meetingId;\n  },\n  getSharedMeetings: function getSharedMeetings() {\n    return query('meetings', function (meeting) {\n      return meeting.shared === true;\n    }).sort(function (a, b) {\n      var days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n      var dayDiff = days.indexOf(a.day.toLowerCase()) - days.indexOf(b.day.toLowerCase());\n      if (dayDiff !== 0) return dayDiff;\n      return a.time.localeCompare(b.time);\n    });\n  },\n  getUserMeetings: function getUserMeetings(userId) {\n    return query('meetings', function (meeting) {\n      return meeting.createdBy === userId;\n    }).sort(function (a, b) {\n      var days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n      var dayDiff = days.indexOf(a.day.toLowerCase()) - days.indexOf(b.day.toLowerCase());\n      if (dayDiff !== 0) return dayDiff;\n      return a.time.localeCompare(b.time);\n    });\n  }\n};\nvar _default = exports.default = {\n  initDatabase: initDatabase,\n  getAll: getAll,\n  getById: getById,\n  insert: insert,\n  update: update,\n  deleteById: deleteById,\n  query: query,\n  calculateDistance: calculateDistance,\n  calculateSobrietyDays: calculateSobrietyDays,\n  calculateSobrietyYears: calculateSobrietyYears,\n  userOperations: userOperations,\n  activityOperations: activityOperations,\n  spiritualFitnessOperations: spiritualFitnessOperations,\n  meetingOperations: meetingOperations\n};","map":{"version":3,"names":["STORAGE_KEYS","users","activities","spiritualFitness","meetings","meetingReminders","nearbyMembers","initDatabase","exports","_ref","_asyncToGenerator2","default","console","log","Object","values","forEach","key","localStorage","getItem","setItem","JSON","stringify","error","apply","arguments","getAll","collection","parse","getById","id","items","find","item","insert","push","update","updates","index","findIndex","updatedItem","assign","deleteById","filteredItems","filter","length","query","predicate","calculateDistance","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","calculateSobrietyDays","sobrietyDate","start","Date","today","setHours","diffTime","abs","diffDays","floor","calculateSobrietyYears","decimalPlaces","undefined","days","years","parseFloat","toFixed","userOperations","createUser","userData","now","toISOString","userId","user","name","homeGroup","phone","email","sponsorId","privacySettings","createdAt","updatedAt","getUserById","updateUser","activityOperations","createActivity","activityData","activityId","activity","type","date","duration","notes","getUserActivities","sort","a","b","getRecentActivities","limit","slice","deleteActivity","spiritualFitnessOperations","calculateSpiritualFitness","thirtyDaysAgo","setDate","getDate","scores","prayer","meditation","reading","meeting","service","toLowerCase","includes","keys","min","totalScore","reduce","sum","score","finalScore","fitnessId","fitnessRecord","prayerScore","meditationScore","readingScore","meetingScore","serviceScore","calculatedAt","details","meetingOperations","createMeeting","meetingData","meetingId","day","time","location","address","city","state","zip","shared","createdBy","getSharedMeetings","dayDiff","indexOf","localeCompare","getUserMeetings","_default"],"sources":["/home/runner/workspace/src/utils/local-database.js"],"sourcesContent":["/**\n * Web-specific database implementation for Spiritual Condition Tracker\n * Uses localStorage to store data in the browser\n */\n\n// Storage keys for each \"table\"\nconst STORAGE_KEYS = {\n  users: 'aa_tracker_users',\n  activities: 'aa_tracker_activities',\n  spiritualFitness: 'aa_tracker_spiritual_fitness',\n  meetings: 'aa_tracker_meetings',\n  meetingReminders: 'aa_tracker_meeting_reminders',\n  nearbyMembers: 'aa_tracker_nearby_members'\n};\n\n/**\n * Initialize all data stores\n */\nexport const initDatabase = async () => {\n  console.log('Initializing web localStorage database...');\n  try {\n    // Initialize each \"table\" if it doesn't exist\n    Object.values(STORAGE_KEYS).forEach(key => {\n      if (!localStorage.getItem(key)) {\n        localStorage.setItem(key, JSON.stringify([]));\n      }\n    });\n    \n    console.log('Web localStorage database initialized');\n    return true;\n  } catch (error) {\n    console.error('Error initializing web database:', error);\n    throw error;\n  }\n};\n\n/**\n * Get all items from a collection\n * @param {string} collection - The collection name\n * @returns {Array} All items in the collection\n */\nexport const getAll = (collection) => {\n  const key = STORAGE_KEYS[collection];\n  if (!key) {\n    console.error(`Unknown collection: ${collection}`);\n    return [];\n  }\n  \n  try {\n    return JSON.parse(localStorage.getItem(key)) || [];\n  } catch (error) {\n    console.error(`Error getting items from ${collection}:`, error);\n    return [];\n  }\n};\n\n/**\n * Get an item by ID from a collection\n * @param {string} collection - The collection name\n * @param {string} id - The item ID\n * @returns {Object|null} The found item or null\n */\nexport const getById = (collection, id) => {\n  const items = getAll(collection);\n  return items.find(item => item.id === id) || null;\n};\n\n/**\n * Add an item to a collection\n * @param {string} collection - The collection name\n * @param {Object} item - The item to add\n * @returns {Object} The added item\n */\nexport const insert = (collection, item) => {\n  const key = STORAGE_KEYS[collection];\n  if (!key) {\n    console.error(`Unknown collection: ${collection}`);\n    return null;\n  }\n  \n  try {\n    const items = getAll(collection);\n    items.push(item);\n    localStorage.setItem(key, JSON.stringify(items));\n    return item;\n  } catch (error) {\n    console.error(`Error adding item to ${collection}:`, error);\n    return null;\n  }\n};\n\n/**\n * Update an item in a collection\n * @param {string} collection - The collection name\n * @param {string} id - The item ID\n * @param {Object} updates - The updates to apply\n * @returns {Object|null} The updated item or null if not found\n */\nexport const update = (collection, id, updates) => {\n  const key = STORAGE_KEYS[collection];\n  if (!key) {\n    console.error(`Unknown collection: ${collection}`);\n    return null;\n  }\n  \n  try {\n    const items = getAll(collection);\n    const index = items.findIndex(item => item.id === id);\n    \n    if (index === -1) {\n      return null;\n    }\n    \n    const updatedItem = { ...items[index], ...updates };\n    items[index] = updatedItem;\n    \n    localStorage.setItem(key, JSON.stringify(items));\n    return updatedItem;\n  } catch (error) {\n    console.error(`Error updating item in ${collection}:`, error);\n    return null;\n  }\n};\n\n/**\n * Remove an item from a collection\n * @param {string} collection - The collection name\n * @param {string} id - The item ID\n * @returns {boolean} Whether the item was removed\n */\nexport const deleteById = (collection, id) => {\n  const key = STORAGE_KEYS[collection];\n  if (!key) {\n    console.error(`Unknown collection: ${collection}`);\n    return false;\n  }\n  \n  try {\n    const items = getAll(collection);\n    const filteredItems = items.filter(item => item.id !== id);\n    \n    if (filteredItems.length === items.length) {\n      return false;\n    }\n    \n    localStorage.setItem(key, JSON.stringify(filteredItems));\n    return true;\n  } catch (error) {\n    console.error(`Error removing item from ${collection}:`, error);\n    return false;\n  }\n};\n\n/**\n * Query items in a collection\n * @param {string} collection - The collection name\n * @param {Function} predicate - Filter function\n * @returns {Array} Filtered items\n */\nexport const query = (collection, predicate) => {\n  const items = getAll(collection);\n  return items.filter(predicate);\n};\n\n/**\n * Calculate distance between two lat/long points\n * @param {number} lat1 - Latitude of first point\n * @param {number} lon1 - Longitude of first point\n * @param {number} lat2 - Latitude of second point\n * @param {number} lon2 - Longitude of second point\n * @returns {number} - Distance in miles\n */\nexport const calculateDistance = (lat1, lon1, lat2, lon2) => {\n  if (lat1 === lat2 && lon1 === lon2) {\n    return 0;\n  }\n  \n  const radlat1 = (Math.PI * lat1) / 180;\n  const radlat2 = (Math.PI * lat2) / 180;\n  const theta = lon1 - lon2;\n  const radtheta = (Math.PI * theta) / 180;\n  \n  let dist = Math.sin(radlat1) * Math.sin(radlat2) + \n             Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n  \n  if (dist > 1) dist = 1;\n  \n  dist = Math.acos(dist);\n  dist = (dist * 180) / Math.PI;\n  dist = dist * 60 * 1.1515; // Miles\n  \n  return dist;\n};\n\n/**\n * Calculate sobriety days based on sobriety date\n * @param {string} sobrietyDate - Sobriety date in ISO format\n * @returns {number} - Number of days sober\n */\nexport const calculateSobrietyDays = (sobrietyDate) => {\n  if (!sobrietyDate) return 0;\n  \n  const start = new Date(sobrietyDate);\n  const today = new Date();\n  \n  // Reset hours to compare dates only\n  start.setHours(0, 0, 0, 0);\n  today.setHours(0, 0, 0, 0);\n  \n  const diffTime = Math.abs(today - start);\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  \n  return diffDays;\n};\n\n/**\n * Calculate sobriety years with decimal precision\n * @param {string} sobrietyDate - Sobriety date in ISO format\n * @param {number} decimalPlaces - Number of decimal places\n * @returns {number} - Years of sobriety with decimal precision\n */\nexport const calculateSobrietyYears = (sobrietyDate, decimalPlaces = 2) => {\n  const days = calculateSobrietyDays(sobrietyDate);\n  const years = days / 365.25; // Account for leap years\n  \n  return parseFloat(years.toFixed(decimalPlaces));\n};\n\n// User operations\nexport const userOperations = {\n  createUser: (userData) => {\n    const now = new Date().toISOString();\n    const userId = userData.id || `user_${Date.now()}`;\n    \n    const user = {\n      id: userId,\n      name: userData.name || '',\n      sobrietyDate: userData.sobrietyDate || null,\n      homeGroup: userData.homeGroup || '',\n      phone: userData.phone || '',\n      email: userData.email || '',\n      sponsorId: userData.sponsorId || null,\n      privacySettings: userData.privacySettings || {},\n      createdAt: now,\n      updatedAt: now\n    };\n    \n    insert('users', user);\n    return userId;\n  },\n  \n  getUserById: (userId) => {\n    return getById('users', userId);\n  },\n  \n  updateUser: (userId, userData) => {\n    const updates = {\n      updatedAt: new Date().toISOString(),\n      ...userData\n    };\n    \n    return update('users', userId, updates);\n  }\n};\n\n// Activity operations\nexport const activityOperations = {\n  createActivity: (activityData) => {\n    const now = new Date().toISOString();\n    const activityId = activityData.id || `activity_${Date.now()}`;\n    \n    const activity = {\n      id: activityId,\n      userId: activityData.userId,\n      type: activityData.type,\n      date: activityData.date || now,\n      duration: activityData.duration || 0,\n      notes: activityData.notes || '',\n      createdAt: now\n    };\n    \n    insert('activities', activity);\n    return activityId;\n  },\n  \n  getUserActivities: (userId) => {\n    return query('activities', activity => activity.userId === userId)\n      .sort((a, b) => new Date(b.date) - new Date(a.date));\n  },\n  \n  getRecentActivities: (userId, limit = 10) => {\n    return query('activities', activity => activity.userId === userId)\n      .sort((a, b) => new Date(b.date) - new Date(a.date))\n      .slice(0, limit);\n  },\n  \n  deleteActivity: (activityId) => {\n    return deleteById('activities', activityId);\n  }\n};\n\n// Spiritual fitness operations\nexport const spiritualFitnessOperations = {\n  calculateSpiritualFitness: (userId) => {\n    // Get user activities for the last 30 days\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    \n    const activities = query('activities', \n      activity => activity.userId === userId && new Date(activity.date) >= thirtyDaysAgo\n    );\n    \n    // Calculate scores based on activity frequency and duration\n    const scores = {\n      prayer: 0,\n      meditation: 0,\n      reading: 0,\n      meeting: 0,\n      service: 0\n    };\n    \n    // Process each activity type\n    activities.forEach(activity => {\n      const type = activity.type.toLowerCase();\n      const duration = activity.duration || 0;\n      \n      if (type.includes('prayer')) {\n        scores.prayer += duration / 10; // 10 minutes per day is ideal\n      } else if (type.includes('meditation')) {\n        scores.meditation += duration / 15; // 15 minutes per day is ideal\n      } else if (type.includes('reading')) {\n        scores.reading += duration / 20; // 20 minutes per day is ideal\n      } else if (type.includes('meeting')) {\n        scores.meeting += 1; // Each meeting counts as 1 point\n      } else if (type.includes('service')) {\n        scores.service += duration / 30; // 30 minutes per week is ideal\n      }\n    });\n    \n    // Cap each score at 10\n    Object.keys(scores).forEach(key => {\n      scores[key] = Math.min(10, scores[key]);\n    });\n    \n    // Calculate total score (max 50)\n    const totalScore = Object.values(scores).reduce((sum, score) => sum + score, 0);\n    \n    // Convert to percentage (0-100) with 2 decimal precision\n    const finalScore = parseFloat(((totalScore / 50) * 100).toFixed(2));\n    \n    // Save to database\n    const now = new Date().toISOString();\n    const fitnessId = `sf_${Date.now()}`;\n    \n    const fitnessRecord = {\n      id: fitnessId,\n      userId: userId,\n      score: finalScore,\n      prayerScore: scores.prayer,\n      meditationScore: scores.meditation,\n      readingScore: scores.reading,\n      meetingScore: scores.meeting,\n      serviceScore: scores.service,\n      calculatedAt: now\n    };\n    \n    insert('spiritualFitness', fitnessRecord);\n    \n    return {\n      score: finalScore,\n      details: scores,\n      calculatedAt: now\n    };\n  }\n};\n\n// Meeting operations\nexport const meetingOperations = {\n  createMeeting: (meetingData) => {\n    const now = new Date().toISOString();\n    const meetingId = meetingData.id || `meeting_${Date.now()}`;\n    \n    const meeting = {\n      id: meetingId,\n      name: meetingData.name || '',\n      day: meetingData.day || '',\n      time: meetingData.time || '',\n      location: meetingData.location || '',\n      address: meetingData.address || '',\n      city: meetingData.city || '',\n      state: meetingData.state || '',\n      zip: meetingData.zip || '',\n      type: meetingData.type || '',\n      notes: meetingData.notes || '',\n      shared: meetingData.shared === true,\n      createdBy: meetingData.createdBy || null,\n      createdAt: now,\n      updatedAt: now\n    };\n    \n    insert('meetings', meeting);\n    return meetingId;\n  },\n  \n  getSharedMeetings: () => {\n    return query('meetings', meeting => meeting.shared === true)\n      .sort((a, b) => {\n        // Sort by day of week, then time\n        const days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n        const dayDiff = days.indexOf(a.day.toLowerCase()) - days.indexOf(b.day.toLowerCase());\n        if (dayDiff !== 0) return dayDiff;\n        return a.time.localeCompare(b.time);\n      });\n  },\n  \n  getUserMeetings: (userId) => {\n    return query('meetings', meeting => meeting.createdBy === userId)\n      .sort((a, b) => {\n        // Sort by day of week, then time\n        const days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n        const dayDiff = days.indexOf(a.day.toLowerCase()) - days.indexOf(b.day.toLowerCase());\n        if (dayDiff !== 0) return dayDiff;\n        return a.time.localeCompare(b.time);\n      });\n  }\n};\n\n// Export the database interface\nexport default {\n  initDatabase,\n  getAll,\n  getById,\n  insert,\n  update,\n  deleteById,\n  query,\n  calculateDistance,\n  calculateSobrietyDays,\n  calculateSobrietyYears,\n  userOperations,\n  activityOperations,\n  spiritualFitnessOperations,\n  meetingOperations\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
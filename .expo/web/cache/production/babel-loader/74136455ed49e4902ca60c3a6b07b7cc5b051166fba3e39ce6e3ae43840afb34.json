{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _utils=require(\"./utils\");var _theming=require(\"../../core/theming\");var _forwardRef=require(\"../../utils/forwardRef\");var _ActivityIndicator=_interopRequireDefault(require(\"../ActivityIndicator\"));var _CrossFadeIcon=_interopRequireDefault(require(\"../CrossFadeIcon\"));var _Icon=_interopRequireDefault(require(\"../Icon\"));var _Surface=_interopRequireDefault(require(\"../Surface\"));var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));var _excluded=[\"icon\",\"iconColor\",\"containerColor\",\"rippleColor\",\"size\",\"accessibilityLabel\",\"disabled\",\"onPress\",\"selected\",\"animated\",\"mode\",\"style\",\"theme\",\"testID\",\"loading\",\"contentStyle\"];function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var PADDING=8;var IconButton=(0,_forwardRef.forwardRef)(function(_ref,ref){var icon=_ref.icon,customIconColor=_ref.iconColor,customContainerColor=_ref.containerColor,customRippleColor=_ref.rippleColor,_ref$size=_ref.size,size=_ref$size===void 0?24:_ref$size,accessibilityLabel=_ref.accessibilityLabel,disabled=_ref.disabled,onPress=_ref.onPress,_ref$selected=_ref.selected,selected=_ref$selected===void 0?false:_ref$selected,_ref$animated=_ref.animated,animated=_ref$animated===void 0?false:_ref$animated,mode=_ref.mode,style=_ref.style,themeOverrides=_ref.theme,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'icon-button':_ref$testID,_ref$loading=_ref.loading,loading=_ref$loading===void 0?false:_ref$loading,contentStyle=_ref.contentStyle,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var theme=(0,_theming.useInternalTheme)(themeOverrides);var isV3=theme.isV3;var IconComponent=animated?_CrossFadeIcon.default:_Icon.default;var _getIconButtonColor=(0,_utils.getIconButtonColor)({theme:theme,disabled:disabled,selected:selected,mode:mode,customIconColor:customIconColor,customContainerColor:customContainerColor,customRippleColor:customRippleColor}),iconColor=_getIconButtonColor.iconColor,rippleColor=_getIconButtonColor.rippleColor,backgroundColor=_getIconButtonColor.backgroundColor,borderColor=_getIconButtonColor.borderColor;var buttonSize=isV3?size+2*PADDING:size*1.5;var _ref2=_reactNative.StyleSheet.flatten(style)||{},_ref2$borderWidth=_ref2.borderWidth,borderWidth=_ref2$borderWidth===void 0?isV3&&mode==='outlined'&&!selected?1:0:_ref2$borderWidth,_ref2$borderRadius=_ref2.borderRadius,borderRadius=_ref2$borderRadius===void 0?buttonSize/2:_ref2$borderRadius;var borderStyles={borderWidth:borderWidth,borderRadius:borderRadius,borderColor:borderColor};return React.createElement(_Surface.default,_extends({ref:ref,testID:`${testID}-container`,style:[{backgroundColor:backgroundColor,width:buttonSize,height:buttonSize},styles.container,borderStyles,!isV3&&disabled&&styles.disabled,style]},isV3&&{elevation:0}),React.createElement(_TouchableRipple.default,_extends({borderless:true,centered:true,onPress:onPress,rippleColor:rippleColor,accessibilityLabel:accessibilityLabel,style:[styles.touchable,contentStyle],accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{disabled:disabled},disabled:disabled,hitSlop:_TouchableRipple.default.supported?{top:10,left:10,bottom:10,right:10}:{top:6,left:6,bottom:6,right:6},testID:testID},rest),loading?React.createElement(_ActivityIndicator.default,{size:size,color:iconColor}):React.createElement(IconComponent,{color:iconColor,source:icon,size:size})));});var styles=_reactNative.StyleSheet.create({container:{overflow:'hidden',margin:6,elevation:0},touchable:{flexGrow:1,justifyContent:'center',alignItems:'center'},disabled:{opacity:0.32}});var _default=exports.default=IconButton;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_utils","_theming","_forwardRef","_ActivityIndicator","_interopRequireDefault","_CrossFadeIcon","_Icon","_Surface","_TouchableRipple","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","PADDING","IconButton","forwardRef","_ref","ref","icon","customIconColor","iconColor","customContainerColor","containerColor","customRippleColor","rippleColor","_ref$size","size","accessibilityLabel","disabled","onPress","_ref$selected","selected","_ref$animated","animated","mode","style","themeOverrides","theme","_ref$testID","testID","_ref$loading","loading","contentStyle","rest","_objectWithoutProperties2","useInternalTheme","isV3","IconComponent","CrossFadeIcon","Icon","_getIconButtonColor","getIconButtonColor","backgroundColor","borderColor","buttonSize","_ref2","StyleSheet","flatten","_ref2$borderWidth","borderWidth","_ref2$borderRadius","borderRadius","borderStyles","createElement","Surface","_extends","width","height","styles","container","elevation","TouchableRipple","borderless","centered","touchable","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","hitSlop","supported","top","left","bottom","right","ActivityIndicator","color","source","create","overflow","margin","flexGrow","justifyContent","alignItems","opacity","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/IconButton/IconButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n  Animated,\n  ColorValue,\n} from 'react-native';\n\nimport { getIconButtonColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nconst PADDING = 8;\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\nexport type Props = Omit<$RemoveChildren<typeof TouchableRipple>, 'style'> & {\n  /**\n   * Icon to display.\n   */\n  icon: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Mode of the icon button. By default there is no specified mode - only pressable icon will be rendered.\n   */\n  mode?: IconButtonMode;\n  /**\n   * @renamed Renamed from 'color' to 'iconColor' in v5.x\n   * Color of the icon.\n   */\n  iconColor?: string;\n  /**\n   * Background color of the icon container.\n   */\n  containerColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether icon button is selected. A selected button receives alternative combination of icon and container colors.\n   */\n  selected?: boolean;\n  /**\n   * Size of the icon.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width or to set a custom padding`.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  ref?: React.RefObject<View>;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n};\n\n/**\n * An icon button is a button which displays only an icon without a label.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <IconButton\n *     icon=\"camera\"\n *     iconColor={MD3Colors.error50}\n *     size={20}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst IconButton = forwardRef<View, Props>(\n  (\n    {\n      icon,\n      iconColor: customIconColor,\n      containerColor: customContainerColor,\n      rippleColor: customRippleColor,\n      size = 24,\n      accessibilityLabel,\n      disabled,\n      onPress,\n      selected = false,\n      animated = false,\n      mode,\n      style,\n      theme: themeOverrides,\n      testID = 'icon-button',\n      loading = false,\n      contentStyle,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const { isV3 } = theme;\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const { iconColor, rippleColor, backgroundColor, borderColor } =\n      getIconButtonColor({\n        theme,\n        disabled,\n        selected,\n        mode,\n        customIconColor,\n        customContainerColor,\n        customRippleColor,\n      });\n\n    const buttonSize = isV3 ? size + 2 * PADDING : size * 1.5;\n\n    const {\n      borderWidth = isV3 && mode === 'outlined' && !selected ? 1 : 0,\n      borderRadius = buttonSize / 2,\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const borderStyles = {\n      borderWidth,\n      borderRadius,\n      borderColor,\n    };\n\n    return (\n      <Surface\n        ref={ref}\n        testID={`${testID}-container`}\n        style={[\n          {\n            backgroundColor,\n            width: buttonSize,\n            height: buttonSize,\n          },\n          styles.container,\n          borderStyles,\n          !isV3 && disabled && styles.disabled,\n          style,\n        ]}\n        {...(isV3 && { elevation: 0 })}\n      >\n        <TouchableRipple\n          borderless\n          centered\n          onPress={onPress}\n          rippleColor={rippleColor}\n          accessibilityLabel={accessibilityLabel}\n          style={[styles.touchable, contentStyle]}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ disabled }}\n          disabled={disabled}\n          hitSlop={\n            TouchableRipple.supported\n              ? { top: 10, left: 10, bottom: 10, right: 10 }\n              : { top: 6, left: 6, bottom: 6, right: 6 }\n          }\n          testID={testID}\n          {...rest}\n        >\n          {loading ? (\n            <ActivityIndicator size={size} color={iconColor} />\n          ) : (\n            <IconComponent color={iconColor} source={icon} size={size} />\n          )}\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    margin: 6,\n    elevation: 0,\n  },\n  touchable: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  disabled: {\n    opacity: 0.32,\n  },\n});\n\nexport default IconButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
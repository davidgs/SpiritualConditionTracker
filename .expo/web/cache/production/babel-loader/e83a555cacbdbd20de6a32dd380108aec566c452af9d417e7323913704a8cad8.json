{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.CheckboxAndroid=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _utils=require(\"./utils\");var _theming=require(\"../../core/theming\");var _MaterialCommunityIcon=_interopRequireDefault(require(\"../MaterialCommunityIcon\"));var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));var _excluded=[\"status\",\"theme\",\"disabled\",\"onPress\",\"testID\"];function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var ANIMATION_DURATION=100;var CheckboxAndroid=exports.CheckboxAndroid=function CheckboxAndroid(_ref){var status=_ref.status,themeOverrides=_ref.theme,disabled=_ref.disabled,onPress=_ref.onPress,testID=_ref.testID,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var theme=(0,_theming.useInternalTheme)(themeOverrides);var _React$useRef=React.useRef(new _reactNative.Animated.Value(1)),scaleAnim=_React$useRef.current;var isFirstRendering=React.useRef(true);var scale=theme.animation.scale;React.useEffect(function(){if(isFirstRendering.current){isFirstRendering.current=false;return;}var checked=status==='checked';_reactNative.Animated.sequence([_reactNative.Animated.timing(scaleAnim,{toValue:0.85,duration:checked?ANIMATION_DURATION*scale:0,useNativeDriver:false}),_reactNative.Animated.timing(scaleAnim,{toValue:1,duration:checked?ANIMATION_DURATION*scale:ANIMATION_DURATION*scale*1.75,useNativeDriver:false})]).start();},[status,scaleAnim,scale]);var checked=status==='checked';var indeterminate=status==='indeterminate';var _getAndroidSelectionC=(0,_utils.getAndroidSelectionControlColor)({theme:theme,disabled:disabled,checked:checked,customColor:rest.color,customUncheckedColor:rest.uncheckedColor}),rippleColor=_getAndroidSelectionC.rippleColor,selectionControlColor=_getAndroidSelectionC.selectionControlColor;var borderWidth=scaleAnim.interpolate({inputRange:[0.8,1],outputRange:[7,0]});var icon=indeterminate?'minus-box':checked?'checkbox-marked':'checkbox-blank-outline';return React.createElement(_TouchableRipple.default,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:onPress,disabled:disabled,accessibilityRole:\"checkbox\",accessibilityState:{disabled:disabled,checked:checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID,theme:theme}),React.createElement(_reactNative.Animated.View,{style:{transform:[{scale:scaleAnim}]}},React.createElement(_MaterialCommunityIcon.default,{allowFontScaling:false,name:icon,size:24,color:selectionControlColor,direction:\"ltr\"}),React.createElement(_reactNative.View,{style:[_reactNative.StyleSheet.absoluteFill,styles.fillContainer]},React.createElement(_reactNative.Animated.View,{style:[styles.fill,{borderColor:selectionControlColor},{borderWidth:borderWidth}]}))));};CheckboxAndroid.displayName='Checkbox.Android';var styles=_reactNative.StyleSheet.create({container:{borderRadius:18,width:36,height:36,padding:6},fillContainer:{alignItems:'center',justifyContent:'center'},fill:{height:14,width:14}});var _default=exports.default=CheckboxAndroid;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_utils","_theming","_MaterialCommunityIcon","_interopRequireDefault","_TouchableRipple","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ANIMATION_DURATION","CheckboxAndroid","exports","_ref","status","themeOverrides","theme","disabled","onPress","testID","rest","_objectWithoutProperties2","useInternalTheme","_React$useRef","useRef","Animated","Value","scaleAnim","current","isFirstRendering","scale","animation","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","_getAndroidSelectionC","getAndroidSelectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","rippleColor","selectionControlColor","borderWidth","interpolate","inputRange","outputRange","icon","createElement","TouchableRipple","_extends","borderless","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","transform","MaterialCommunityIcon","allowFontScaling","name","size","direction","StyleSheet","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","_default"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/Checkbox/CheckboxAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { getAndroidSelectionControlColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst CheckboxAndroid = ({\n  status,\n  theme: themeOverrides,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n\n  const { rippleColor, selectionControlColor } =\n    getAndroidSelectionControlColor({\n      theme,\n      disabled,\n      checked,\n      customColor: rest.color,\n      customUncheckedColor: rest.uncheckedColor,\n    });\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n      theme={theme}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={selectionControlColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: selectionControlColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default CheckboxAndroid;\n\n// @component-docs ignore-next-line\nexport { CheckboxAndroid };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
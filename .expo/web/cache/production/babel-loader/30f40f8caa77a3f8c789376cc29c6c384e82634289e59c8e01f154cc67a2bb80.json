{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.pickScale=exports.default=void 0;exports.setCustomSourceTransformer=setCustomSourceTransformer;var _registry=require(\"@react-native/assets-registry/registry\");var _AssetSourceResolver=_interopRequireDefault(require(\"./AssetSourceResolver\"));var _customSourceTransformer;function setCustomSourceTransformer(transformer){_customSourceTransformer=transformer;}function resolveAssetSource(source){if(typeof source==='object'){return source;}var asset=(0,_registry.getAssetByID)(source);if(!asset){return null;}var resolver=new _AssetSourceResolver.default('https://expo.dev',null,asset);if(_customSourceTransformer){return _customSourceTransformer(resolver);}return resolver.defaultAsset();}Object.defineProperty(resolveAssetSource,'setCustomSourceTransformer',{get:function get(){return setCustomSourceTransformer;}});var _default=exports.default=resolveAssetSource;var pickScale=exports.pickScale=_AssetSourceResolver.default.pickScale;","map":{"version":3,"names":["_registry","require","_AssetSourceResolver","_interopRequireDefault","_customSourceTransformer","setCustomSourceTransformer","transformer","resolveAssetSource","source","asset","getAssetByID","resolver","AssetSourceResolver","defaultAsset","Object","defineProperty","get","_default","exports","default","pickScale"],"sources":["/home/runner/workspace/node_modules/expo-asset/src/resolveAssetSource.ts"],"sourcesContent":["import { getAssetByID } from '@react-native/assets-registry/registry';\n\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver';\n\nlet _customSourceTransformer: (resolver: AssetSourceResolver) => ResolvedAssetSource;\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\ninterface resolveAssetSource {\n  (source: any): ResolvedAssetSource | null;\n  setCustomSourceTransformer(\n    transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n  ): ResolvedAssetSource;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nfunction resolveAssetSource(source: any): ResolvedAssetSource | null {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return null;\n  }\n\n  const resolver = new AssetSourceResolver(\n    // Doesn't matter since this is removed on web\n    'https://expo.dev',\n    null,\n    asset\n  );\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport default resolveAssetSource as resolveAssetSource;\n\nexport const { pickScale } = AssetSourceResolver;\n"],"mappings":"mPAAA,IAAAA,SAAA,CAAAC,OAAA,2CAEA,IAAAC,oBAAA,CAAAC,sBAAA,CAAAF,OAAA,2BAEA,GAAI,CAAAG,wBAAgF,CAE9E,QAAU,CAAAC,0BAA0BA,CACxCC,WAAmE,EAEnEF,wBAAwB,CAAGE,WAAW,CACxC,CAaA,QAAS,CAAAC,kBAAkBA,CAACC,MAAW,EACrC,GAAI,MAAO,CAAAA,MAAM,GAAK,QAAQ,CAAE,CAC9B,MAAO,CAAAA,MAAM,CACf,CAEA,GAAM,CAAAC,KAAK,CAAG,GAAAC,sBAAY,EAACF,MAAM,CAAC,CAClC,GAAI,CAACC,KAAK,CAAE,CACV,MAAO,KAAI,CACb,CAEA,GAAM,CAAAE,QAAQ,CAAG,GAAI,CAAAC,4BAAmB,CAEtC,kBAAkB,CAClB,IAAI,CACJH,KAAK,CACN,CACD,GAAIL,wBAAwB,CAAE,CAC5B,MAAO,CAAAA,wBAAwB,CAACO,QAAQ,CAAC,CAC3C,CACA,MAAO,CAAAA,QAAQ,CAACE,YAAY,EAAE,CAChC,CAEAC,MAAM,CAACC,cAAc,CAACR,kBAAkB,CAAE,4BAA4B,CAAE,CACtES,GAAG,SAAH,CAAAA,GAAGA,CAAA,EACD,MAAO,CAAAX,0BAA0B,CACnC,C,CACD,CAAC,CAAC,IAAAY,QAAA,CAAAC,OAAA,CAAAC,OAAA,CAEYZ,kBAAwC,CAEhD,GAAQ,CAAAa,SAAS,CAAAF,OAAA,CAAAE,SAAA,CAAKR,4BAAmB,CAAjCQ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.Checkbox=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _CheckboxAndroid=_interopRequireDefault(require(\"./CheckboxAndroid\"));var _CheckboxIOS=_interopRequireDefault(require(\"./CheckboxIOS\"));var _theming=require(\"../../core/theming\");var _excluded=[\"theme\"];function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var Checkbox=function Checkbox(_ref){var themeOverrides=_ref.theme,props=(0,_objectWithoutProperties2.default)(_ref,_excluded);var theme=(0,_theming.useInternalTheme)(themeOverrides);return _reactNative.Platform.OS==='ios'?React.createElement(_CheckboxIOS.default,_extends({},props,{theme:theme})):React.createElement(_CheckboxAndroid.default,_extends({},props,{theme:theme}));};var _default=exports.default=Checkbox;var CheckboxWithTheme=exports.Checkbox=Checkbox;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_CheckboxAndroid","_interopRequireDefault","_CheckboxIOS","_theming","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Checkbox","_ref","themeOverrides","theme","props","_objectWithoutProperties2","useInternalTheme","Platform","OS","createElement","CheckboxIOS","_extends","CheckboxAndroid","_default","exports","CheckboxWithTheme"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = ({ theme: themeOverrides, ...props }: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  return Platform.OS === 'ios' ? (\n    <CheckboxIOS {...props} theme={theme} />\n  ) : (\n    <CheckboxAndroid {...props} theme={theme} />\n  );\n};\n\nexport default Checkbox;\n\n// @component-docs ignore-next-line\nconst CheckboxWithTheme = Checkbox;\n// @component-docs ignore-next-line\nexport { CheckboxWithTheme as Checkbox };\n"],"mappings":"oSAAA,IAAAA,KAAA,CAAAC,uBAAA,CAAAC,OAAA,WACA,IAAAC,YAAA,CAAAD,OAAA,iBAEA,IAAAE,gBAAA,CAAAC,sBAAA,CAAAH,OAAA,uBACA,IAAAI,YAAA,CAAAD,sBAAA,CAAAH,OAAA,mBACA,IAAAK,QAAA,CAAAL,OAAA,uBAAqD,IAAAM,SAAA,oBAAAP,wBAAAQ,CAAA,CAAAC,CAAA,wBAAAC,OAAA,KAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAV,uBAAA,UAAAA,wBAAAQ,CAAA,CAAAC,CAAA,MAAAA,CAAA,EAAAD,CAAA,EAAAA,CAAA,CAAAK,UAAA,QAAAL,CAAA,KAAAM,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAAAC,SAAA,MAAAC,OAAA,CAAAV,CAAA,YAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAQ,CAAA,IAAAF,CAAA,CAAAL,CAAA,CAAAG,CAAA,CAAAD,CAAA,KAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,SAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,EAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,CAAAQ,CAAA,WAAAM,EAAA,IAAAd,CAAA,aAAAc,EAAA,KAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,CAAAc,EAAA,KAAAP,CAAA,EAAAD,CAAA,CAAAW,MAAA,CAAAC,cAAA,GAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,CAAAc,EAAA,KAAAP,CAAA,CAAAK,GAAA,EAAAL,CAAA,CAAAM,GAAA,EAAAP,CAAA,CAAAE,CAAA,CAAAM,EAAA,CAAAP,CAAA,EAAAC,CAAA,CAAAM,EAAA,EAAAd,CAAA,CAAAc,EAAA,UAAAN,CAAA,IAAAR,CAAA,CAAAC,CAAA,G,2SA0DrD,GAAM,CAAAmB,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAGC,IAAA,CAAgD,IAAtC,CAAAC,cAAc,CAAmBD,IAAA,CAAxCE,KAAK,CAAqBC,KAAA,IAAAC,yBAAA,CAAAf,OAAA,EAAcW,IAAA,CAAAtB,SAAA,EAC1D,GAAM,CAAAwB,KAAK,CAAG,GAAAG,yBAAgB,EAACJ,cAAc,CAAC,CAC9C,MAAO,CAAAK,qBAAQ,CAACC,EAAE,GAAK,KAAK,CAC1BrC,KAAA,CAAAsC,aAAA,CAACC,oBAAW,CAAAC,QAAA,IAAKP,KAAK,EAAED,KAAK,CAAEA,KAAM,EAAE,CAAC,CAExChC,KAAA,CAAAsC,aAAA,CAACG,wBAAe,CAAAD,QAAA,IAAKP,KAAK,EAAED,KAAK,CAAEA,KAAM,EAAE,CAC5C,CACH,CAAC,KAAAU,QAAA,CAAAC,OAAA,CAAAxB,OAAA,CAEcU,QAAQ,CAGvB,GAAM,CAAAe,iBAAiB,CAAAD,OAAA,CAAAd,QAAA,CAAGA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
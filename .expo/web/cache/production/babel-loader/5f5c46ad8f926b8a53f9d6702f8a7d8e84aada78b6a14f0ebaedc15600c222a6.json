{"ast":null,"code":"\"use strict\";var _asyncToGenerator=require(\"@babel/runtime/helpers/asyncToGenerator\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.dynamicLoader=void 0;var loadFontAsync=function(){var _ref=_asyncToGenerator(function*(_fontFamily,_fontSource){return undefined;});return function loadFontAsync(_x,_x2){return _ref.apply(this,arguments);};}();var isLoaded=function isLoaded(_fontFamily){return true;};var dynamicLoader=exports.dynamicLoader={isLoaded:isLoaded,loadFontAsync:loadFontAsync};","map":{"version":3,"names":["loadFontAsync","_ref","_asyncToGenerator","_fontFamily","_fontSource","undefined","_x","_x2","apply","arguments","isLoaded","dynamicLoader","exports"],"sources":["/home/runner/workspace/node_modules/@react-native-vector-icons/common/src/dynamicLoading/dynamic-font-loading.web.ts"],"sourcesContent":["/**\n * dynamic font loading isn't supported on web\n * */\nimport type { DynamicLoader, FontSource } from './types';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst loadFontAsync = async (_fontFamily: string, _fontSource: FontSource): Promise<void> => undefined;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst isLoaded = (_fontFamily: string) => true;\n\nexport const dynamicLoader: DynamicLoader = {\n  isLoaded,\n  loadFontAsync,\n};\n"],"mappings":"4KAMA,GAAM,CAAAA,aAAa,gBAAAC,IAAA,CAAAC,iBAAA,CAAG,UAAOC,WAAmB,CAAEC,WAAuB,QAAoB,CAAAC,SAAS,mBAAhG,CAAAL,aAAaA,CAAAM,EAAA,CAAAC,GAAA,SAAAN,IAAA,CAAAO,KAAA,MAAAC,SAAA,OAAmF,CAGtG,GAAM,CAAAC,QAAQ,CAAI,QAAZ,CAAAA,QAAQA,CAAIP,WAAmB,QAAK,KAAI,GAEvC,GAAM,CAAAQ,aAA4B,CAAAC,OAAA,CAAAD,aAAA,CAAG,CAC1CD,QAAQ,CAARA,QAAQ,CACRV,aAAA,CAAAA,aACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
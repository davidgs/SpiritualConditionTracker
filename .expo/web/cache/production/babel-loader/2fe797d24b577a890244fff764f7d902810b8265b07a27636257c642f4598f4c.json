{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.LegacyEventEmitter=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _invariant=_interopRequireDefault(require(\"invariant\"));var _reactNative=require(\"react-native\");var nativeEmitterSubscriptionKey='@@nativeEmitterSubscription@@';var LegacyEventEmitter=exports.LegacyEventEmitter=function(){function LegacyEventEmitter(nativeModule){(0,_classCallCheck2.default)(this,LegacyEventEmitter);this._listenerCount=0;if(nativeModule.__expo_module_name__){return nativeModule;}this._nativeModule=nativeModule;this._eventEmitter=new _reactNative.NativeEventEmitter(nativeModule);}return(0,_createClass2.default)(LegacyEventEmitter,[{key:\"addListener\",value:function addListener(eventName,listener){var _this=this;if(!this._listenerCount&&_reactNative.Platform.OS!=='ios'&&this._nativeModule.startObserving){this._nativeModule.startObserving();}this._listenerCount++;var nativeEmitterSubscription=this._eventEmitter.addListener(eventName,listener);var subscription=(0,_defineProperty2.default)((0,_defineProperty2.default)({},nativeEmitterSubscriptionKey,nativeEmitterSubscription),\"remove\",function remove(){_this.removeSubscription(subscription);});return subscription;}},{key:\"removeAllListeners\",value:function removeAllListeners(eventName){var removedListenerCount=this._eventEmitter.listenerCount?this._eventEmitter.listenerCount(eventName):this._eventEmitter.listeners(eventName).length;this._eventEmitter.removeAllListeners(eventName);this._listenerCount-=removedListenerCount;(0,_invariant.default)(this._listenerCount>=0,`EventEmitter must have a non-negative number of listeners`);if(!this._listenerCount&&_reactNative.Platform.OS!=='ios'&&this._nativeModule.stopObserving){this._nativeModule.stopObserving();}}},{key:\"removeSubscription\",value:function removeSubscription(subscription){var state=subscription;var nativeEmitterSubscription=state[nativeEmitterSubscriptionKey];if(!nativeEmitterSubscription){return;}if('remove'in nativeEmitterSubscription){nativeEmitterSubscription.remove==null||nativeEmitterSubscription.remove();}this._listenerCount--;delete state[nativeEmitterSubscriptionKey];subscription.remove=function(){};if(!this._listenerCount&&_reactNative.Platform.OS!=='ios'&&this._nativeModule.stopObserving){this._nativeModule.stopObserving();}}},{key:\"emit\",value:function emit(eventName){var _this$_eventEmitter;for(var _len=arguments.length,params=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){params[_key-1]=arguments[_key];}(_this$_eventEmitter=this._eventEmitter).emit.apply(_this$_eventEmitter,[eventName].concat(params));}}]);}();","map":{"version":3,"names":["_invariant","_interopRequireDefault","require","_reactNative","nativeEmitterSubscriptionKey","LegacyEventEmitter","exports","nativeModule","_classCallCheck2","default","_listenerCount","__expo_module_name__","_nativeModule","_eventEmitter","NativeEventEmitter","_createClass2","key","value","addListener","eventName","listener","_this","Platform","OS","startObserving","nativeEmitterSubscription","subscription","_defineProperty2","remove","removeSubscription","removeAllListeners","removedListenerCount","listenerCount","listeners","length","invariant","stopObserving","state","emit","_this$_eventEmitter","_len","arguments","params","Array","_key","apply","concat"],"sources":["/home/runner/workspace/node_modules/expo-modules-core/src/LegacyEventEmitter.ts"],"sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, Platform } from 'react-native';\n\nimport { EventSubscription } from './EventEmitter';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@' as const;\n\ntype SubscriptionState = {\n  // NOTE(@kitten): Since this is legacy/deprecated, we don't need to be exact about types here\n  [Key in typeof nativeEmitterSubscriptionKey]?: {\n    remove?(): void;\n  };\n} & EventSubscription;\n\ntype NativeModule = {\n  __expo_module_name__?: string;\n  startObserving?: () => void;\n  stopObserving?: () => void;\n\n  // Erase these types as they would conflict with the new NativeModule type.\n  // This EventEmitter is deprecated anyway.\n  addListener?: any;\n  removeListeners?: any;\n};\n\n/**\n * @deprecated Deprecated in favor of `EventEmitter`.\n */\nexport class LegacyEventEmitter {\n  _listenerCount = 0;\n\n  // @ts-expect-error\n  _nativeModule: NativeModule;\n\n  // @ts-expect-error\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    // If the native module is a new module, just return it back as it's already an event emitter.\n    // This is for backwards compatibility until we stop using this legacy class in other packages.\n    if (nativeModule.__expo_module_name__) {\n      // @ts-expect-error\n      return nativeModule;\n    }\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): EventSubscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription: SubscriptionState = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n    const removedListenerCount = this._eventEmitter.listenerCount\n      ? // @ts-ignore: this is available since 0.64\n        this._eventEmitter.listenerCount(eventName)\n      : // @ts-ignore: this is available in older versions\n        this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: EventSubscription): void {\n    const state = subscription as SubscriptionState;\n    const nativeEmitterSubscription = state[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    if ('remove' in nativeEmitterSubscription) {\n      nativeEmitterSubscription.remove?.();\n    }\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete state[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
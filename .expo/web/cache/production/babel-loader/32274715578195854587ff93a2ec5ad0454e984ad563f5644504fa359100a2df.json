{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _theming=require(\"../../core/theming\");var _colors=require(\"../../styles/themes/v2/colors\");var _getContrastingColor=_interopRequireDefault(require(\"../../utils/getContrastingColor\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _excluded=[\"label\",\"size\",\"style\",\"labelStyle\",\"color\",\"theme\",\"maxFontSizeMultiplier\"],_excluded2=[\"backgroundColor\"];function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var defaultSize=64;var AvatarText=function AvatarText(_ref){var _theme$colors;var label=_ref.label,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,labelStyle=_ref.labelStyle,customColor=_ref.color,themeOverrides=_ref.theme,maxFontSizeMultiplier=_ref.maxFontSizeMultiplier,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var theme=(0,_theming.useInternalTheme)(themeOverrides);var _ref2=_reactNative.StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.primary:_ref2$backgroundColor,restStyle=(0,_objectWithoutProperties2.default)(_ref2,_excluded2);var textColor=customColor!=null?customColor:(0,_getContrastingColor.default)(backgroundColor,_colors.white,'rgba(0, 0, 0, .54)');var _useWindowDimensions=(0,_reactNative.useWindowDimensions)(),fontScale=_useWindowDimensions.fontScale;return React.createElement(_reactNative.View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(_Text.default,{style:[styles.text,{color:textColor,fontSize:size/2,lineHeight:size/fontScale},labelStyle],numberOfLines:1,maxFontSizeMultiplier:maxFontSizeMultiplier},label));};AvatarText.displayName='Avatar.Text';var styles=_reactNative.StyleSheet.create({container:{justifyContent:'center',alignItems:'center'},text:{textAlign:'center',textAlignVertical:'center'}});var _default=exports.default=AvatarText;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_theming","_colors","_getContrastingColor","_interopRequireDefault","_Text","_excluded","_excluded2","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","defaultSize","AvatarText","_ref","_theme$colors","label","_ref$size","size","style","labelStyle","customColor","color","themeOverrides","theme","maxFontSizeMultiplier","rest","_objectWithoutProperties2","useInternalTheme","_ref2","StyleSheet","flatten","_ref2$backgroundColor","backgroundColor","colors","primary","restStyle","textColor","getContrastingColor","white","_useWindowDimensions","useWindowDimensions","fontScale","createElement","View","_extends","width","height","borderRadius","styles","container","Text","text","fontSize","lineHeight","numberOfLines","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/Avatar/AvatarText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  useWindowDimensions,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Text from '../Typography/Text';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nconst AvatarText = ({\n  label,\n  size = defaultSize,\n  style,\n  labelStyle,\n  color: customColor,\n  theme: themeOverrides,\n  maxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    customColor ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  const { fontScale } = useWindowDimensions();\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Text\n        style={[\n          styles.text,\n          {\n            color: textColor,\n            fontSize: size / 2,\n            lineHeight: size / fontScale,\n          },\n          labelStyle,\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      >\n        {label}\n      </Text>\n    </View>\n  );\n};\n\nAvatarText.displayName = 'Avatar.Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default AvatarText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.CheckboxItem=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _Checkbox=_interopRequireDefault(require(\"./Checkbox\"));var _CheckboxAndroid=_interopRequireDefault(require(\"./CheckboxAndroid\"));var _CheckboxIOS=_interopRequireDefault(require(\"./CheckboxIOS\"));var _theming=require(\"../../core/theming\");var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _excluded=[\"style\",\"status\",\"label\",\"onPress\",\"onLongPress\",\"labelStyle\",\"theme\",\"testID\",\"mode\",\"position\",\"accessibilityLabel\",\"disabled\",\"labelVariant\",\"labelMaxFontSizeMultiplier\",\"rippleColor\",\"background\"];function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}var CheckboxItem=exports.CheckboxItem=function CheckboxItem(_ref){var style=_ref.style,status=_ref.status,label=_ref.label,onPress=_ref.onPress,onLongPress=_ref.onLongPress,labelStyle=_ref.labelStyle,themeOverrides=_ref.theme,testID=_ref.testID,mode=_ref.mode,_ref$position=_ref.position,position=_ref$position===void 0?'trailing':_ref$position,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?label:_ref$accessibilityLab,disabled=_ref.disabled,_ref$labelVariant=_ref.labelVariant,labelVariant=_ref$labelVariant===void 0?'bodyLarge':_ref$labelVariant,_ref$labelMaxFontSize=_ref.labelMaxFontSizeMultiplier,labelMaxFontSizeMultiplier=_ref$labelMaxFontSize===void 0?1.5:_ref$labelMaxFontSize,rippleColor=_ref.rippleColor,background=_ref.background,props=(0,_objectWithoutProperties2.default)(_ref,_excluded);var theme=(0,_theming.useInternalTheme)(themeOverrides);var checkboxProps=Object.assign({},props,{status:status,theme:theme,disabled:disabled});var isLeading=position==='leading';var checkbox;if(mode==='android'){checkbox=React.createElement(_CheckboxAndroid.default,checkboxProps);}else if(mode==='ios'){checkbox=React.createElement(_CheckboxIOS.default,checkboxProps);}else{checkbox=React.createElement(_Checkbox.default,checkboxProps);}var textColor=theme.isV3?theme.colors.onSurface:theme.colors.text;var disabledTextColor=theme.isV3?theme.colors.onSurfaceDisabled:theme.colors.disabled;var textAlign=isLeading?'right':'left';var computedStyle={color:disabled?disabledTextColor:textColor,textAlign:textAlign};return React.createElement(_TouchableRipple.default,{accessibilityLabel:accessibilityLabel,accessibilityRole:\"checkbox\",accessibilityState:{checked:status==='checked',disabled:disabled},onPress:onPress,onLongPress:onLongPress,testID:testID,disabled:disabled,rippleColor:rippleColor,theme:theme,background:background},React.createElement(_reactNative.View,{style:[styles.container,style],pointerEvents:\"none\",importantForAccessibility:\"no-hide-descendants\"},isLeading&&checkbox,React.createElement(_Text.default,{variant:labelVariant,testID:`${testID}-text`,maxFontSizeMultiplier:labelMaxFontSizeMultiplier,style:[styles.label,!theme.isV3&&styles.font,computedStyle,labelStyle]},label),!isLeading&&checkbox));};CheckboxItem.displayName='Checkbox.Item';var _default=exports.default=CheckboxItem;var styles=_reactNative.StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16},label:{flexShrink:1,flexGrow:1},font:{fontSize:16}});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_Checkbox","_interopRequireDefault","_CheckboxAndroid","_CheckboxIOS","_theming","_TouchableRipple","_Text","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","CheckboxItem","exports","_ref","style","status","label","onPress","onLongPress","labelStyle","themeOverrides","theme","testID","mode","_ref$position","position","_ref$accessibilityLab","accessibilityLabel","disabled","_ref$labelVariant","labelVariant","_ref$labelMaxFontSize","labelMaxFontSizeMultiplier","rippleColor","background","props","_objectWithoutProperties2","useInternalTheme","checkboxProps","assign","isLeading","checkbox","createElement","CheckboxAndroid","CheckboxIOS","Checkbox","textColor","isV3","colors","onSurface","text","disabledTextColor","onSurfaceDisabled","textAlign","computedStyle","color","TouchableRipple","accessibilityRole","accessibilityState","checked","View","styles","container","pointerEvents","importantForAccessibility","Text","variant","maxFontSizeMultiplier","font","displayName","_default","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/Checkbox/CheckboxItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport Checkbox from './Checkbox';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp, MD3TypescaleKey } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Label text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  labelVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Checkbox control position.\n   */\n  position?: 'leading' | 'trailing';\n  /**\n   * Whether `<Checkbox.Android />` or `<Checkbox.IOS />` should be used.\n   * Left undefined `<Checkbox />` will be used.\n   */\n  mode?: 'android' | 'ios';\n};\n\n/**\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Checkbox.Item label=\"Item\" status=\"checked\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n *```\n */\n\nconst CheckboxItem = ({\n  style,\n  status,\n  label,\n  onPress,\n  onLongPress,\n  labelStyle,\n  theme: themeOverrides,\n  testID,\n  mode,\n  position = 'trailing',\n  accessibilityLabel = label,\n  disabled,\n  labelVariant = 'bodyLarge',\n  labelMaxFontSizeMultiplier = 1.5,\n  rippleColor,\n  background,\n  ...props\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const checkboxProps = { ...props, status, theme, disabled };\n  const isLeading = position === 'leading';\n  let checkbox;\n\n  if (mode === 'android') {\n    checkbox = <CheckboxAndroid {...checkboxProps} />;\n  } else if (mode === 'ios') {\n    checkbox = <CheckboxIOS {...checkboxProps} />;\n  } else {\n    checkbox = <Checkbox {...checkboxProps} />;\n  }\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  const disabledTextColor = theme.isV3\n    ? theme.colors.onSurfaceDisabled\n    : theme.colors.disabled;\n  const textAlign = isLeading ? 'right' : 'left';\n\n  const computedStyle = {\n    color: disabled ? disabledTextColor : textColor,\n    textAlign,\n  } as TextStyle;\n\n  return (\n    <TouchableRipple\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{\n        checked: status === 'checked',\n        disabled,\n      }}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      testID={testID}\n      disabled={disabled}\n      rippleColor={rippleColor}\n      theme={theme}\n      background={background}\n    >\n      <View\n        style={[styles.container, style]}\n        pointerEvents=\"none\"\n        importantForAccessibility=\"no-hide-descendants\"\n      >\n        {isLeading && checkbox}\n        <Text\n          variant={labelVariant}\n          testID={`${testID}-text`}\n          maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n          style={[\n            styles.label,\n            !theme.isV3 && styles.font,\n            computedStyle,\n            labelStyle,\n          ]}\n        >\n          {label}\n        </Text>\n        {!isLeading && checkbox}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxItem.displayName = 'Checkbox.Item';\n\nexport default CheckboxItem;\n\n// @component-docs ignore-next-line\nexport { CheckboxItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n  font: {\n    fontSize: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
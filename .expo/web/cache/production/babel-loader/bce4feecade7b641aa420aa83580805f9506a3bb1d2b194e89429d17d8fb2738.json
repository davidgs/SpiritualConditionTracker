{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"DEFAULT_ICON_COLOR\",{enumerable:true,get:function get(){return _createIconSet.DEFAULT_ICON_COLOR;}});Object.defineProperty(exports,\"DEFAULT_ICON_SIZE\",{enumerable:true,get:function get(){return _createIconSet.DEFAULT_ICON_SIZE;}});exports.default=_default;var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var Font=_interopRequireWildcard(require(\"expo-font\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _createIconSet=_interopRequireWildcard(require(\"./vendor/react-native-vector-icons/lib/create-icon-set\"));var _iconButton=_interopRequireDefault(require(\"./vendor/react-native-vector-icons/lib/icon-button\"));var _jsxRuntime=require(\"react/jsx-runtime\");function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _callSuper(t,o,e){return o=(0,_getPrototypeOf2.default)(o),(0,_possibleConstructorReturn2.default)(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],(0,_getPrototypeOf2.default)(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _default(glyphMap,fontName,expoAssetId,fontStyle){var _Icon;var font=(0,_defineProperty2.default)({},fontName,expoAssetId);var RNVIconComponent=(0,_createIconSet.default)(glyphMap,fontName,null,fontStyle);return _Icon=function(_React$Component){function Icon(){var _this;(0,_classCallCheck2.default)(this,Icon);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_callSuper(this,Icon,[].concat(args));_this._mounted=false;_this.state={fontIsLoaded:Font.isLoaded(fontName)};return _this;}(0,_inherits2.default)(Icon,_React$Component);return(0,_createClass2.default)(Icon,[{key:\"componentDidMount\",value:function(){var _componentDidMount=(0,_asyncToGenerator2.default)(function*(){this._mounted=true;if(!this.state.fontIsLoaded){yield Font.loadAsync(font);this._mounted&&this.setState({fontIsLoaded:true});}});function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._mounted=false;}},{key:\"setNativeProps\",value:function setNativeProps(props){if(this._icon){this._icon.setNativeProps(props);}}},{key:\"render\",value:function render(){var _this2=this;if(__DEV__&&this.props.name&&!(this.props.name in glyphMap)){console.warn(`\"${this.props.name}\" is not a valid icon name for family \"${fontName}\"`);}if(!this.state.fontIsLoaded){return(0,_jsxRuntime.jsx)(_reactNative.Text,{});}return(0,_jsxRuntime.jsx)(RNVIconComponent,Object.assign({ref:function ref(view){_this2._icon=view;}},this.props));}}]);}(_react.default.Component),_Icon.defaultProps=RNVIconComponent.defaultProps,_Icon.Button=(0,_iconButton.default)(_Icon),_Icon.glyphMap=glyphMap,_Icon.getRawGlyphMap=function(){return glyphMap;},_Icon.getFontFamily=function(){return fontName;},_Icon.loadFont=function(){return Font.loadAsync(font);},_Icon.font=font,_Icon;}","map":{"version":3,"names":["Font","_interopRequireWildcard","require","_react","_interopRequireDefault","_reactNative","_createIconSet","_iconButton","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","_default","glyphMap","fontName","expoAssetId","fontStyle","_Icon","font","_defineProperty2","RNVIconComponent","createIconSet","_React$Component","Icon","_this","_classCallCheck2","_len","arguments","length","args","Array","_key","concat","_mounted","state","fontIsLoaded","isLoaded","_inherits2","_createClass2","key","value","_componentDidMount","_asyncToGenerator2","loadAsync","setState","componentDidMount","componentWillUnmount","setNativeProps","props","_icon","render","_this2","__DEV__","name","console","warn","jsx","Text","assign","ref","view","React","Component","defaultProps","Button","createIconButtonComponent","getRawGlyphMap","getFontFamily","loadFont"],"sources":["/home/runner/workspace/node_modules/@expo/vector-icons/src/createIconSet.tsx"],"sourcesContent":["import * as Font from 'expo-font';\nimport React, { ComponentClass } from 'react';\nimport {\n  Text,\n  TextProps,\n  TouchableHighlightProps,\n  ViewProps,\n  OpaqueColorValue,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport createIconSet from './vendor/react-native-vector-icons/lib/create-icon-set';\nimport createIconButtonComponent from './vendor/react-native-vector-icons/lib/icon-button';\n\nexport {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from './vendor/react-native-vector-icons/lib/create-icon-set';\n\nexport interface IconProps<GLYPHS extends string> extends TextProps {\n  /**\n   * Size of the icon, can also be passed as fontSize in the style object.\n   *\n   * @default 12\n   */\n  size?: number;\n\n  /**\n   * Name of the icon to show\n   *\n   * See Icon Explorer app\n   * {@link https://expo.github.io/vector-icons/}\n   */\n  name: GLYPHS;\n\n  /**\n   * Color of the icon. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   */\n  color?: string | OpaqueColorValue;\n}\n\nexport interface IconButtonProps<GLYPHS extends string>\n  extends IconProps<GLYPHS>,\n    ViewProps,\n    TouchableHighlightProps {\n  /**\n   * Text and icon color\n   * Use iconStyle or nest a Text component if you need different colors.\n   * Can be a string or OpaqueColorValue (returned from PlatformColor(..))\n   *\n   *  @default 'white'\n   */\n  color?: string | OpaqueColorValue;\n\n  /**\n   * Border radius of the button\n   * Set to 0 to disable.\n   *\n   * @default 5\n   */\n  borderRadius?: number;\n\n  /**\n   * Styles applied to the icon only\n   * Good for setting margins or a different color.\n   *\n   * @default {marginRight: 10}\n   */\n  iconStyle?: TextStyle;\n\n  /**\n   * Style prop inherited from TextProps and TouchableWithoutFeedbackProperties\n   * Only exist here so we can have ViewStyle or TextStyle\n   *\n   */\n  style?: ViewStyle | TextStyle;\n\n  /**\n   * Background color of the button. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   * @default '#007AFF'\n   */\n  backgroundColor?: string | OpaqueColorValue;\n}\n\nexport type GlyphMap<G extends string> = { [K in G]: number | string };\n\nexport interface Icon<G extends string, FN extends string> {\n  defaultProps: any;\n  Button: ComponentClass<IconButtonProps<G>>;\n  glyphMap: GlyphMap<G>;\n  getRawGlyphMap: () => GlyphMap<G>;\n  getFontFamily: () => FN;\n  loadFont: () => Promise<void>;\n  font: { [x: string]: any };\n  new (props: IconProps<G>): React.Component<IconProps<G>>;\n}\n\nexport default function <G extends string, FN extends string>(\n  glyphMap: GlyphMap<G>,\n  fontName: FN,\n  expoAssetId,\n  fontStyle?: any\n): Icon<G, FN> {\n  const font = { [fontName]: expoAssetId };\n  const RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n\n  return class Icon extends React.Component<IconProps<G>> {\n    static defaultProps = RNVIconComponent.defaultProps;\n    static Button = createIconButtonComponent(Icon);\n    static glyphMap = glyphMap;\n    static getRawGlyphMap = () => glyphMap;\n    static getFontFamily = () => fontName;\n    static loadFont = () => Font.loadAsync(font);\n    static font = font;\n\n    _mounted = false;\n    _icon?: any;\n\n    state = {\n      fontIsLoaded: Font.isLoaded(fontName),\n    };\n\n    async componentDidMount() {\n      this._mounted = true;\n      if (!this.state.fontIsLoaded) {\n        await Font.loadAsync(font);\n        /* eslint-disable react/no-did-mount-set-state */\n        this._mounted && this.setState({ fontIsLoaded: true });\n      }\n    }\n\n    componentWillUnmount() {\n      this._mounted = false;\n    }\n\n    setNativeProps(props) {\n      if (this._icon) {\n        this._icon.setNativeProps(props);\n      }\n    }\n\n    render() {\n      if (__DEV__ && this.props.name && !(this.props.name in glyphMap)) {\n        console.warn(`\"${this.props.name}\" is not a valid icon name for family \"${fontName}\"`);\n      }\n\n      if (!this.state.fontIsLoaded) {\n        return <Text />;\n      }\n\n      return (\n        <RNVIconComponent\n          ref={(view) => {\n            this._icon = view;\n          }}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
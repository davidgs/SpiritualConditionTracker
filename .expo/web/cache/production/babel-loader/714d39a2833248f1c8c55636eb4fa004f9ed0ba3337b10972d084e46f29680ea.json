{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.RadioButtonAndroid=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _RadioButtonGroup=require(\"./RadioButtonGroup\");var _utils=require(\"./utils\");var _theming=require(\"../../core/theming\");var _utils2=require(\"../Checkbox/utils\");var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));var _excluded=[\"disabled\",\"onPress\",\"theme\",\"value\",\"status\",\"testID\"];function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var BORDER_WIDTH=2;var RadioButtonAndroid=exports.RadioButtonAndroid=function RadioButtonAndroid(_ref){var disabled=_ref.disabled,onPress=_ref.onPress,themeOverrides=_ref.theme,value=_ref.value,status=_ref.status,testID=_ref.testID,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var theme=(0,_theming.useInternalTheme)(themeOverrides);var _React$useRef=React.useRef(new _reactNative.Animated.Value(BORDER_WIDTH)),borderAnim=_React$useRef.current;var _React$useRef2=React.useRef(new _reactNative.Animated.Value(1)),radioAnim=_React$useRef2.current;var isFirstRendering=React.useRef(true);var scale=theme.animation.scale;React.useEffect(function(){if(isFirstRendering.current){isFirstRendering.current=false;return;}if(status==='checked'){radioAnim.setValue(1.2);_reactNative.Animated.timing(radioAnim,{toValue:1,duration:150*scale,useNativeDriver:true}).start();}else{borderAnim.setValue(10);_reactNative.Animated.timing(borderAnim,{toValue:BORDER_WIDTH,duration:150*scale,useNativeDriver:false}).start();}},[status,borderAnim,radioAnim,scale]);return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer,null,function(context){var checked=(0,_utils.isChecked)({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';var _getAndroidSelectionC=(0,_utils2.getAndroidSelectionControlColor)({theme:theme,disabled:disabled,checked:checked,customColor:rest.color,customUncheckedColor:rest.uncheckedColor}),rippleColor=_getAndroidSelectionC.rippleColor,selectionControlColor=_getAndroidSelectionC.selectionControlColor;return React.createElement(_TouchableRipple.default,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:disabled?undefined:function(event){(0,_utils.handlePress)({onPress:onPress,onValueChange:context===null||context===void 0?void 0:context.onValueChange,value:value,event:event});},accessibilityRole:\"radio\",accessibilityState:{disabled:disabled,checked:checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID,theme:theme}),React.createElement(_reactNative.Animated.View,{style:[styles.radio,{borderColor:selectionControlColor,borderWidth:borderAnim}]},checked?React.createElement(_reactNative.View,{style:[_reactNative.StyleSheet.absoluteFill,styles.radioContainer]},React.createElement(_reactNative.Animated.View,{style:[styles.dot,{backgroundColor:selectionControlColor,transform:[{scale:radioAnim}]}]})):null));});};RadioButtonAndroid.displayName='RadioButton.Android';var styles=_reactNative.StyleSheet.create({container:{borderRadius:18},radioContainer:{alignItems:'center',justifyContent:'center'},radio:{height:20,width:20,borderRadius:10,margin:8},dot:{height:10,width:10,borderRadius:5}});var _default=exports.default=RadioButtonAndroid;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_RadioButtonGroup","_utils","_theming","_utils2","_TouchableRipple","_interopRequireDefault","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","BORDER_WIDTH","RadioButtonAndroid","exports","_ref","disabled","onPress","themeOverrides","theme","value","status","testID","rest","_objectWithoutProperties2","useInternalTheme","_React$useRef","useRef","Animated","Value","borderAnim","current","_React$useRef2","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","createElement","RadioButtonContext","Consumer","context","checked","isChecked","contextValue","_getAndroidSelectionC","getAndroidSelectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","rippleColor","selectionControlColor","TouchableRipple","_extends","borderless","undefined","event","handlePress","onValueChange","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","radio","borderColor","borderWidth","StyleSheet","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin","_default"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/RadioButton/RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { getAndroidSelectionControlColor } from '../Checkbox/utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  value,\n  status,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: borderAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(BORDER_WIDTH)\n  );\n\n  const { current: radioAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { rippleColor, selectionControlColor } =\n          getAndroidSelectionControlColor({\n            theme,\n            disabled,\n            checked,\n            customColor: rest.color,\n            customUncheckedColor: rest.uncheckedColor,\n          });\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : (event) => {\n                    handlePress({\n                      onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                      event,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n            theme={theme}\n          >\n            <Animated.View\n              style={[\n                styles.radio,\n                {\n                  borderColor: selectionControlColor,\n                  borderWidth: borderAnim,\n                },\n              ]}\n            >\n              {checked ? (\n                <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n                  <Animated.View\n                    style={[\n                      styles.dot,\n                      {\n                        backgroundColor: selectionControlColor,\n                        transform: [{ scale: radioAnim }],\n                      },\n                    ]}\n                  />\n                </View>\n              ) : null}\n            </Animated.View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default RadioButtonAndroid;\n\n// @component-docs ignore-next-line\nexport { RadioButtonAndroid };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
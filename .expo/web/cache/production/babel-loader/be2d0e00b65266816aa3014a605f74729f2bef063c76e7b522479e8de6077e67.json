{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.IconAdornment=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _utils=require(\"./utils\");var _theming=require(\"../../../core/theming\");var _IconButton=_interopRequireDefault(require(\"../../IconButton/IconButton\"));var _constants=require(\"../constants\");var _helpers=require(\"../helpers\");var _excluded=[\"icon\",\"onPress\",\"forceTextInputFocus\",\"color\",\"theme\",\"rippleColor\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var StyleContext=_react.default.createContext({style:{},isTextInputFocused:false,forceFocus:function forceFocus(){},testID:''});var IconAdornment=exports.IconAdornment=function IconAdornment(_ref){var icon=_ref.icon,topPosition=_ref.topPosition,side=_ref.side,isTextInputFocused=_ref.isTextInputFocused,forceFocus=_ref.forceFocus,testID=_ref.testID,themeOverrides=_ref.theme,disabled=_ref.disabled;var _useInternalTheme=(0,_theming.useInternalTheme)(themeOverrides),isV3=_useInternalTheme.isV3;var _getConstants=(0,_helpers.getConstants)(isV3),ICON_OFFSET=_getConstants.ICON_OFFSET;var style=(0,_defineProperty2.default)({top:topPosition},side,ICON_OFFSET);var contextState={style:style,isTextInputFocused:isTextInputFocused,forceFocus:forceFocus,testID:testID,disabled:disabled};return _react.default.createElement(StyleContext.Provider,{value:contextState},icon);};var TextInputIcon=function TextInputIcon(_ref2){var icon=_ref2.icon,onPress=_ref2.onPress,_ref2$forceTextInputF=_ref2.forceTextInputFocus,forceTextInputFocus=_ref2$forceTextInputF===void 0?true:_ref2$forceTextInputF,customColor=_ref2.color,themeOverrides=_ref2.theme,rippleColor=_ref2.rippleColor,rest=(0,_objectWithoutProperties2.default)(_ref2,_excluded);var _React$useContext=_react.default.useContext(StyleContext),style=_React$useContext.style,isTextInputFocused=_React$useContext.isTextInputFocused,forceFocus=_React$useContext.forceFocus,testID=_React$useContext.testID,disabled=_React$useContext.disabled;var onPressWithFocusControl=_react.default.useCallback(function(e){if(forceTextInputFocus&&!isTextInputFocused){forceFocus();}onPress===null||onPress===void 0?void 0:onPress(e);},[forceTextInputFocus,forceFocus,isTextInputFocused,onPress]);var theme=(0,_theming.useInternalTheme)(themeOverrides);var iconColor=(0,_utils.getIconColor)({theme:theme,disabled:disabled,isTextInputFocused:isTextInputFocused,customColor:customColor});return _react.default.createElement(_reactNative.View,{style:[styles.container,style]},_react.default.createElement(_IconButton.default,_extends({icon:icon,style:styles.iconButton,size:_constants.ICON_SIZE,onPress:onPressWithFocusControl,iconColor:iconColor,testID:testID,theme:themeOverrides,rippleColor:rippleColor},rest)));};TextInputIcon.displayName='TextInput.Icon';var styles=_reactNative.StyleSheet.create({container:{position:'absolute',width:_constants.ICON_SIZE,height:_constants.ICON_SIZE,justifyContent:'center',alignItems:'center'},iconButton:{margin:0}});var _default=exports.default=TextInputIcon;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_utils","_theming","_IconButton","_constants","_helpers","_excluded","StyleContext","React","createContext","style","isTextInputFocused","forceFocus","testID","IconAdornment","exports","_ref","icon","topPosition","side","themeOverrides","theme","disabled","_useInternalTheme","useInternalTheme","isV3","_getConstants","getConstants","ICON_OFFSET","_defineProperty2","default","top","contextState","createElement","Provider","value","TextInputIcon","_ref2","onPress","_ref2$forceTextInputF","forceTextInputFocus","customColor","color","rippleColor","rest","_objectWithoutProperties2","_React$useContext","useContext","onPressWithFocusControl","useCallback","e","iconColor","getIconColor","View","styles","container","IconButton","_extends","iconButton","size","ICON_SIZE","displayName","StyleSheet","create","position","width","height","justifyContent","alignItems","margin","_default"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/TextInput/Adornment/TextInputIcon.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { getIconColor } from './utils';\nimport { useInternalTheme } from '../../../core/theming';\nimport type { $Omit, ThemeProp } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport IconButton from '../../IconButton/IconButton';\nimport { ICON_SIZE } from '../constants';\nimport { getConstants } from '../helpers';\n\nexport type Props = $Omit<\n  React.ComponentProps<typeof IconButton>,\n  'icon' | 'theme' | 'color' | 'iconColor'\n> & {\n  /**\n   * @renamed Renamed from 'name' to 'icon` in v5.x\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the TextInput will focus after onPress.\n   */\n  forceTextInputFocus?: boolean;\n  /**\n   * Color of the icon or a function receiving a boolean indicating whether the TextInput is focused and returning the color.\n   */\n  color?: ((isTextInputFocused: boolean) => string | undefined) | string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype StyleContextType = {\n  style: StyleProp<ViewStyle>;\n  isTextInputFocused: boolean;\n  forceFocus: () => void;\n  testID: string;\n  disabled?: boolean;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n  testID: '',\n});\n\nconst IconAdornment: React.FunctionComponent<\n  {\n    testID: string;\n    icon: React.ReactNode;\n    topPosition: number;\n    side: 'left' | 'right';\n    theme?: ThemeProp;\n    disabled?: boolean;\n  } & Omit<StyleContextType, 'style'>\n> = ({\n  icon,\n  topPosition,\n  side,\n  isTextInputFocused,\n  forceFocus,\n  testID,\n  theme: themeOverrides,\n  disabled,\n}) => {\n  const { isV3 } = useInternalTheme(themeOverrides);\n  const { ICON_OFFSET } = getConstants(isV3);\n\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET,\n  };\n  const contextState = {\n    style,\n    isTextInputFocused,\n    forceFocus,\n    testID,\n    disabled,\n  };\n\n  return (\n    <StyleContext.Provider value={contextState}>{icon}</StyleContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon icon=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = ({\n  icon,\n  onPress,\n  forceTextInputFocus = true,\n  color: customColor,\n  theme: themeOverrides,\n  rippleColor,\n  ...rest\n}: Props) => {\n  const { style, isTextInputFocused, forceFocus, testID, disabled } =\n    React.useContext(StyleContext);\n\n  const onPressWithFocusControl = React.useCallback(\n    (e: GestureResponderEvent) => {\n      if (forceTextInputFocus && !isTextInputFocused) {\n        forceFocus();\n      }\n\n      onPress?.(e);\n    },\n    [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]\n  );\n\n  const theme = useInternalTheme(themeOverrides);\n\n  const iconColor = getIconColor({\n    theme,\n    disabled,\n    isTextInputFocused,\n    customColor,\n  });\n\n  return (\n    <View style={[styles.container, style]}>\n      <IconButton\n        icon={icon}\n        style={styles.iconButton}\n        size={ICON_SIZE}\n        onPress={onPressWithFocusControl}\n        iconColor={iconColor}\n        testID={testID}\n        theme={themeOverrides}\n        rippleColor={rippleColor}\n        {...rest}\n      />\n    </View>\n  );\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: 0,\n  },\n});\n\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
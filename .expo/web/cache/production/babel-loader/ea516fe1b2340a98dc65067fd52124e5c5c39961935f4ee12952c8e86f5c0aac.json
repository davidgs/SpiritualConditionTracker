{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports._createWebFontTemplate=_createWebFontTemplate;exports.default=void 0;var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _expoModulesCore=require(\"expo-modules-core\");var _fontfaceobserver=_interopRequireDefault(require(\"fontfaceobserver\"));var _Font=require(\"./Font.types\");function getFontFaceStyleSheet(){if(!_expoModulesCore.Platform.isDOMAvailable){return null;}var styleSheet=getStyleElement();return styleSheet.sheet?styleSheet.sheet:null;}function getFontFaceRules(){var sheet=getFontFaceStyleSheet();if(sheet){var rules=(0,_toConsumableArray2.default)(sheet.cssRules);var items=[];for(var i=0;i<rules.length;i++){var rule=rules[i];if(rule instanceof CSSFontFaceRule){items.push({rule:rule,index:i});}}return items;}return[];}function getFontFaceRulesMatchingResource(fontFamilyName,options){var rules=getFontFaceRules();return rules.filter(function(_ref){var rule=_ref.rule;return rule.style.fontFamily===fontFamilyName&&(options&&options.display?options.display===rule.style.fontDisplay:true);});}var serverContext=new Set();function getHeadElements(){var entries=(0,_toConsumableArray2.default)(serverContext.entries());if(!entries.length){return[];}var css=entries.map(function(_ref2){var _ref3=(0,_slicedToArray2.default)(_ref2,1),css=_ref3[0].css;return css;}).join('\\n');var links=entries.map(function(_ref4){var _ref5=(0,_slicedToArray2.default)(_ref4,1),resourceId=_ref5[0].resourceId;return resourceId;});return[{$$type:'style',children:css,id:ID,type:'text/css'}].concat((0,_toConsumableArray2.default)(links.map(function(resourceId){return{$$type:'link',rel:'preload',href:resourceId,as:'font',crossorigin:''};})));}var _default=exports.default={unloadAllAsync:function(){var _unloadAllAsync=(0,_asyncToGenerator2.default)(function*(){if(!_expoModulesCore.Platform.isDOMAvailable)return;var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){document.removeChild(element);}});function unloadAllAsync(){return _unloadAllAsync.apply(this,arguments);}return unloadAllAsync;}(),unloadAsync:function(){var _unloadAsync=(0,_asyncToGenerator2.default)(function*(fontFamilyName,options){var sheet=getFontFaceStyleSheet();if(!sheet)return;var items=getFontFaceRulesMatchingResource(fontFamilyName,options);for(var item of items){sheet.deleteRule(item.index);}});function unloadAsync(_x,_x2){return _unloadAsync.apply(this,arguments);}return unloadAsync;}(),getServerResources:function getServerResources(){var elements=getHeadElements();return elements.map(function(element){switch(element.$$type){case'style':return`<style id=\"${element.id}\" type=\"${element.type}\">${element.children}</style>`;case'link':return`<link rel=\"${element.rel}\" href=\"${element.href}\" as=\"${element.as}\" crossorigin=\"${element.crossorigin}\" />`;default:return'';}}).filter(Boolean);},resetServerContext:function resetServerContext(){serverContext.clear();},getLoadedFonts:function getLoadedFonts(){if(typeof window==='undefined'){return(0,_toConsumableArray2.default)(serverContext.values()).map(function(_ref6){var name=_ref6.name;return name;});}var rules=getFontFaceRules();return rules.map(function(_ref7){var rule=_ref7.rule;return rule.style.fontFamily;});},isLoaded:function isLoaded(fontFamilyName){var _getFontFaceRulesMatc;var resource=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(typeof window==='undefined'){return!!(0,_toConsumableArray2.default)(serverContext.values()).find(function(asset){return asset.name===fontFamilyName;});}return((_getFontFaceRulesMatc=getFontFaceRulesMatchingResource(fontFamilyName,resource))==null?void 0:_getFontFaceRulesMatc.length)>0;},loadAsync:function loadAsync(fontFamilyName,resource){if(typeof window==='undefined'){serverContext.add({name:fontFamilyName,css:_createWebFontTemplate(fontFamilyName,resource),resourceId:resource.uri});return Promise.resolve();}var canInjectStyle=document.head&&typeof document.head.appendChild==='function';if(!canInjectStyle){throw new _expoModulesCore.CodedError('ERR_WEB_ENVIRONMENT',`The browser's \\`document.head\\` element doesn't support injecting fonts.`);}var style=getStyleElement();document.head.appendChild(style);var res=getFontFaceRulesMatchingResource(fontFamilyName,resource);if(!res.length){_createWebStyle(fontFamilyName,resource);}if(!isFontLoadingListenerSupported()){return Promise.resolve();}return new _fontfaceobserver.default(fontFamilyName,{display:resource.display}).load(null,6000);}};var ID='expo-generated-fonts';function getStyleElement(){var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){return element;}var styleElement=document.createElement('style');styleElement.id=ID;styleElement.type='text/css';return styleElement;}function _createWebFontTemplate(fontFamily,resource){return`@font-face{font-family:${fontFamily};src:url(${resource.uri});font-display:${resource.display||_Font.FontDisplay.AUTO}}`;}function _createWebStyle(fontFamily,resource){var fontStyle=_createWebFontTemplate(fontFamily,resource);var styleElement=getStyleElement();if(styleElement.styleSheet){var styleElementIE=styleElement;styleElementIE.styleSheet.cssText=styleElementIE.styleSheet.cssText?styleElementIE.styleSheet.cssText+fontStyle:fontStyle;}else{var textNode=document.createTextNode(fontStyle);styleElement.appendChild(textNode);}return styleElement;}function isFontLoadingListenerSupported(){var userAgent=window.navigator.userAgent;var isIOS=!!userAgent.match(/iPad|iPhone/i);var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);var isEdge=userAgent.includes('Edge');var isIE=userAgent.includes('Trident');var isFirefox=userAgent.includes('Firefox');return!isSafari&&!isIOS&&!isEdge&&!isIE&&!isFirefox;}","map":{"version":3,"names":["_expoModulesCore","require","_fontfaceobserver","_interopRequireDefault","_Font","getFontFaceStyleSheet","Platform","isDOMAvailable","styleSheet","getStyleElement","sheet","getFontFaceRules","rules","_toConsumableArray2","default","cssRules","items","i","length","rule","CSSFontFaceRule","push","index","getFontFaceRulesMatchingResource","fontFamilyName","options","filter","_ref","style","fontFamily","display","fontDisplay","serverContext","Set","getHeadElements","entries","css","map","_ref2","_ref3","_slicedToArray2","join","links","_ref4","_ref5","resourceId","$$type","children","id","ID","type","concat","rel","href","as","crossorigin","_default","exports","unloadAllAsync","_unloadAllAsync","_asyncToGenerator2","element","document","getElementById","HTMLStyleElement","removeChild","apply","arguments","unloadAsync","_unloadAsync","item","deleteRule","_x","_x2","getServerResources","elements","Boolean","resetServerContext","clear","getLoadedFonts","window","values","_ref6","name","_ref7","isLoaded","_getFontFaceRulesMatc","resource","undefined","find","asset","loadAsync","add","_createWebFontTemplate","uri","Promise","resolve","canInjectStyle","head","appendChild","CodedError","res","_createWebStyle","isFontLoadingListenerSupported","FontObserver","load","styleElement","createElement","FontDisplay","AUTO","fontStyle","styleElementIE","cssText","textNode","createTextNode","userAgent","navigator","isIOS","match","isSafari","test","isEdge","includes","isIE","isFirefox"],"sources":["/home/runner/workspace/node_modules/expo-font/src/ExpoFontLoader.web.ts"],"sourcesContent":["import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\n\nimport { UnloadFontOptions } from './Font';\nimport { FontDisplay, FontResource } from './Font.types';\n\nfunction getFontFaceStyleSheet(): CSSStyleSheet | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n  const styleSheet = getStyleElement();\n  return styleSheet.sheet ? (styleSheet.sheet as CSSStyleSheet) : null;\n}\n\ntype RuleItem = { rule: CSSFontFaceRule; index: number };\n\nfunction getFontFaceRules(): RuleItem[] {\n  const sheet = getFontFaceStyleSheet();\n  if (sheet) {\n    // @ts-ignore: rule iterator\n    const rules = [...sheet.cssRules];\n\n    const items: RuleItem[] = [];\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i];\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({ rule, index: i });\n      }\n    }\n    return items;\n  }\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(\n  fontFamilyName: string,\n  options?: UnloadFontOptions\n): RuleItem[] {\n  const rules = getFontFaceRules();\n  return rules.filter(({ rule }) => {\n    return (\n      rule.style.fontFamily === fontFamilyName &&\n      (options && options.display ? options.display === (rule.style as any).fontDisplay : true)\n    );\n  });\n}\n\nconst serverContext: Set<{ name: string; css: string; resourceId: string }> = new Set();\n\nfunction getHeadElements(): {\n  $$type: string;\n  rel?: string;\n  href?: string;\n  as?: string;\n  crossorigin?: string;\n  children?: string;\n  id?: string;\n  type?: string;\n}[] {\n  const entries = [...serverContext.entries()];\n  if (!entries.length) {\n    return [];\n  }\n  const css = entries.map(([{ css }]) => css).join('\\n');\n  const links = entries.map(([{ resourceId }]) => resourceId);\n  // TODO: Maybe return nothing if no fonts were loaded.\n  return [\n    {\n      $$type: 'style',\n      children: css,\n      id: ID,\n      type: 'text/css',\n    },\n    ...links.map((resourceId) => ({\n      $$type: 'link',\n      rel: 'preload',\n      href: resourceId,\n      as: 'font',\n      crossorigin: '',\n    })),\n  ];\n}\n\nexport default {\n  async unloadAllAsync(): Promise<void> {\n    if (!Platform.isDOMAvailable) return;\n\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n      document.removeChild(element);\n    }\n  },\n\n  async unloadAsync(fontFamilyName: string, options?: UnloadFontOptions): Promise<void> {\n    const sheet = getFontFaceStyleSheet();\n    if (!sheet) return;\n    const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n    for (const item of items) {\n      sheet.deleteRule(item.index);\n    }\n  },\n\n  getServerResources(): string[] {\n    const elements = getHeadElements();\n\n    return elements\n      .map((element) => {\n        switch (element.$$type) {\n          case 'style':\n            return `<style id=\"${element.id}\" type=\"${element.type}\">${element.children}</style>`;\n          case 'link':\n            return `<link rel=\"${element.rel}\" href=\"${element.href}\" as=\"${element.as}\" crossorigin=\"${element.crossorigin}\" />`;\n          default:\n            return '';\n        }\n      })\n      .filter(Boolean);\n  },\n\n  resetServerContext() {\n    serverContext.clear();\n  },\n\n  getLoadedFonts(): string[] {\n    if (typeof window === 'undefined') {\n      return [...serverContext.values()].map(({ name }) => name);\n    }\n    const rules = getFontFaceRules();\n    return rules.map(({ rule }) => rule.style.fontFamily);\n  },\n\n  isLoaded(fontFamilyName: string, resource: UnloadFontOptions = {}): boolean {\n    if (typeof window === 'undefined') {\n      return !![...serverContext.values()].find((asset) => {\n        return asset.name === fontFamilyName;\n      });\n    }\n    return getFontFaceRulesMatchingResource(fontFamilyName, resource)?.length > 0;\n  },\n\n  // NOTE(EvanBacon): No async keyword! This cannot return a promise in Node environments.\n  loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (typeof window === 'undefined') {\n      serverContext.add({\n        name: fontFamilyName,\n        css: _createWebFontTemplate(fontFamilyName, resource),\n        // @ts-expect-error: typeof string\n        resourceId: resource.uri!,\n      });\n      return Promise.resolve();\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new CodedError(\n        'ERR_WEB_ENVIRONMENT',\n        `The browser's \\`document.head\\` element doesn't support injecting fonts.`\n      );\n    }\n\n    const style = getStyleElement();\n    document.head!.appendChild(style);\n\n    const res = getFontFaceRulesMatchingResource(fontFamilyName, resource);\n    if (!res.length) {\n      _createWebStyle(fontFamilyName, resource);\n    }\n\n    if (!isFontLoadingListenerSupported()) {\n      return Promise.resolve();\n    }\n\n    return new FontObserver(fontFamilyName, {\n      // @ts-expect-error: TODO(@kitten): Typings indicate that the polyfill may not support this?\n      display: resource.display,\n    }).load(null, 6000);\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nexport function _createWebFontTemplate(fontFamily: string, resource: FontResource): string {\n  return `@font-face{font-family:${fontFamily};src:url(${resource.uri});font-display:${\n    resource.display || FontDisplay.AUTO\n  }}`;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = _createWebFontTemplate(fontFamily, resource);\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported(): boolean {\n  const { userAgent } = window.navigator;\n  // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n  const isIOS = !!userAgent.match(/iPad|iPhone/i);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n  const isEdge = userAgent.includes('Edge');\n  // Internet Explorer\n  const isIE = userAgent.includes('Trident');\n  // Firefox\n  const isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n"],"mappings":"2fAAA,IAAAA,gBAAA,CAAAC,OAAA,sBACA,IAAAC,iBAAA,CAAAC,sBAAA,CAAAF,OAAA,sBAGA,IAAAG,KAAA,CAAAH,OAAA,iBAEA,QAAS,CAAAI,qBAAqBA,CAAA,EAC5B,GAAI,CAACC,yBAAQ,CAACC,cAAc,CAAE,CAC5B,MAAO,KAAI,CACb,CACA,GAAM,CAAAC,UAAU,CAAGC,eAAe,EAAE,CACpC,MAAO,CAAAD,UAAU,CAACE,KAAK,CAAIF,UAAU,CAACE,KAAuB,CAAG,IAAI,CACtE,CAIA,QAAS,CAAAC,gBAAgBA,CAAA,EACvB,GAAM,CAAAD,KAAK,CAAGL,qBAAqB,EAAE,CACrC,GAAIK,KAAK,CAAE,CAET,GAAM,CAAAE,KAAK,IAAAC,mBAAA,CAAAC,OAAA,EAAOJ,KAAK,CAACK,QAAQ,CAAC,CAEjC,GAAM,CAAAC,KAAK,CAAe,EAAE,CAE5B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,KAAK,CAACM,MAAM,CAAED,CAAC,EAAE,CAAE,CACrC,GAAM,CAAAE,IAAI,CAAGP,KAAK,CAACK,CAAC,CAAC,CACrB,GAAIE,IAAI,WAAY,CAAAC,eAAe,CAAE,CACnCJ,KAAK,CAACK,IAAI,CAAC,CAAEF,IAAI,CAAJA,IAAI,CAAEG,KAAK,CAAEL,CAAC,CAAE,CAAC,CAChC,CACF,CACA,MAAO,CAAAD,KAAK,CACd,CACA,MAAO,EAAE,CACX,CAEA,QAAS,CAAAO,gCAAgCA,CACvCC,cAAsB,CACtBC,OAA2B,EAE3B,GAAM,CAAAb,KAAK,CAAGD,gBAAgB,EAAE,CAChC,MAAO,CAAAC,KAAK,CAACc,MAAM,CAAC,SAAAC,IAAA,CAAa,IAAV,CAAAR,IAAI,CAAAQ,IAAA,CAAJR,IAAI,CACzB,MACE,CAAAA,IAAI,CAACS,KAAK,CAACC,UAAU,GAAKL,cAAc,GACvCC,OAAO,EAAIA,OAAO,CAACK,OAAO,CAAGL,OAAO,CAACK,OAAO,GAAMX,IAAI,CAACS,KAAa,CAACG,WAAW,CAAG,IAAI,CAAC,CAE7F,CAAC,CAAC,CACJ,CAEA,GAAM,CAAAC,aAAa,CAA2D,GAAI,CAAAC,GAAG,EAAE,CAEvF,QAAS,CAAAC,eAAeA,CAAA,EAUtB,GAAM,CAAAC,OAAO,IAAAtB,mBAAA,CAAAC,OAAA,EAAOkB,aAAa,CAACG,OAAO,EAAE,CAAC,CAC5C,GAAI,CAACA,OAAO,CAACjB,MAAM,CAAE,CACnB,MAAO,EAAE,CACX,CACA,GAAM,CAAAkB,GAAG,CAAGD,OAAO,CAACE,GAAG,CAAC,SAAAC,KAAA,MAAAC,KAAA,IAAAC,eAAA,CAAA1B,OAAA,EAAAwB,KAAA,IAAIF,GAAG,CAAAG,KAAA,IAAHH,GAAG,OAAQ,CAAAA,GAAG,GAAC,CAACK,IAAI,CAAC,IAAI,CAAC,CACtD,GAAM,CAAAC,KAAK,CAAGP,OAAO,CAACE,GAAG,CAAC,SAAAM,KAAA,MAAAC,KAAA,IAAAJ,eAAA,CAAA1B,OAAA,EAAA6B,KAAA,IAAIE,UAAU,CAAAD,KAAA,IAAVC,UAAU,OAAQ,CAAAA,UAAU,GAAC,CAE3D,OACE,CACEC,MAAM,CAAE,OAAO,CACfC,QAAQ,CAAEX,GAAG,CACbY,EAAE,CAAEC,EAAE,CACNC,IAAI,CAAE,U,CACP,EAAAC,MAAA,IAAAtC,mBAAA,CAAAC,OAAA,EACE4B,KAAK,CAACL,GAAG,CAAC,SAACQ,UAAU,QAAM,CAC5BC,MAAM,CAAE,MAAM,CACdM,GAAG,CAAE,SAAS,CACdC,IAAI,CAAER,UAAU,CAChBS,EAAE,CAAE,MAAM,CACVC,WAAW,CAAE,E,CACd,EAAC,CAAC,GAEP,CAAC,IAAAC,QAAA,CAAAC,OAAA,CAAA3C,OAAA,CAEc,CACP4C,cAAc,gBAAAC,eAAA,IAAAC,kBAAA,CAAA9C,OAAA,cAClB,GAAI,CAACR,yBAAQ,CAACC,cAAc,CAAE,OAE9B,GAAM,CAAAsD,OAAO,CAAGC,QAAQ,CAACC,cAAc,CAACd,EAAE,CAAC,CAC3C,GAAIY,OAAO,EAAIA,OAAO,WAAY,CAAAG,gBAAgB,CAAE,CAClDF,QAAQ,CAACG,WAAW,CAACJ,OAAO,CAAC,CAC/B,CACF,CAAC,UAPK,CAAAH,cAAcA,CAAA,SAAAC,eAAA,CAAAO,KAAA,MAAAC,SAAA,SAAd,CAAAT,cAAc,KASdU,WAAW,gBAAAC,YAAA,IAAAT,kBAAA,CAAA9C,OAAA,YAACU,cAAsB,CAAEC,OAA2B,EACnE,GAAM,CAAAf,KAAK,CAAGL,qBAAqB,EAAE,CACrC,GAAI,CAACK,KAAK,CAAE,OACZ,GAAM,CAAAM,KAAK,CAAGO,gCAAgC,CAACC,cAAc,CAAEC,OAAO,CAAC,CACvE,IAAK,GAAM,CAAA6C,IAAI,GAAI,CAAAtD,KAAK,CAAE,CACxBN,KAAK,CAAC6D,UAAU,CAACD,IAAI,CAAChD,KAAK,CAAC,CAC9B,CACF,CAAC,UAPK,CAAA8C,WAAWA,CAAAI,EAAA,CAAAC,GAAA,SAAAJ,YAAA,CAAAH,KAAA,MAAAC,SAAA,SAAX,CAAAC,WAAW,KASjBM,kBAAkB,SAAlB,CAAAA,kBAAkBA,CAAA,EAChB,GAAM,CAAAC,QAAQ,CAAGzC,eAAe,EAAE,CAElC,MAAO,CAAAyC,QAAQ,CACZtC,GAAG,CAAC,SAACwB,OAAO,CAAI,CACf,OAAQA,OAAO,CAACf,MAAM,EACpB,IAAK,OAAO,CACV,MAAO,cAAce,OAAO,CAACb,EAAE,WAAWa,OAAO,CAACX,IAAI,KAAKW,OAAO,CAACd,QAAQ,UAAU,CACvF,IAAK,MAAM,CACT,MAAO,cAAcc,OAAO,CAACT,GAAG,WAAWS,OAAO,CAACR,IAAI,SAASQ,OAAO,CAACP,EAAE,kBAAkBO,OAAO,CAACN,WAAW,MAAM,CACvH,QACE,MAAO,EAAE,CACb,CACF,CAAC,CAAC,CACD7B,MAAM,CAACkD,OAAO,CAAC,CACpB,CAAC,CAEDC,kBAAkB,SAAlB,CAAAA,kBAAkBA,CAAA,EAChB7C,aAAa,CAAC8C,KAAK,EAAE,CACvB,CAAC,CAEDC,cAAc,SAAd,CAAAA,cAAcA,CAAA,EACZ,GAAI,MAAO,CAAAC,MAAM,GAAK,WAAW,CAAE,CACjC,MAAO,GAAAnE,mBAAA,CAAAC,OAAA,EAAIkB,aAAa,CAACiD,MAAM,EAAE,EAAE5C,GAAG,CAAC,SAAA6C,KAAA,KAAG,CAAAC,IAAI,CAAAD,KAAA,CAAJC,IAAI,OAAO,CAAAA,IAAI,GAAC,CAC5D,CACA,GAAM,CAAAvE,KAAK,CAAGD,gBAAgB,EAAE,CAChC,MAAO,CAAAC,KAAK,CAACyB,GAAG,CAAC,SAAA+C,KAAA,KAAG,CAAAjE,IAAI,CAAAiE,KAAA,CAAJjE,IAAI,OAAO,CAAAA,IAAI,CAACS,KAAK,CAACC,UAAU,GAAC,CACvD,CAAC,CAEDwD,QAAQ,SAAR,CAAAA,QAAQA,CAAC7D,cAAsB,CAAkC,KAAA8D,qBAAA,IAAhC,CAAAC,QAAA,CAAApB,SAAA,CAAAjD,MAAA,IAAAiD,SAAA,MAAAqB,SAAA,CAAArB,SAAA,IAA8B,EAAE,CAC/D,GAAI,MAAO,CAAAa,MAAM,GAAK,WAAW,CAAE,CACjC,MAAO,CAAC,CAAC,GAAAnE,mBAAA,CAAAC,OAAA,EAAIkB,aAAa,CAACiD,MAAM,EAAE,EAAEQ,IAAI,CAAC,SAACC,KAAK,CAAI,CAClD,MAAO,CAAAA,KAAK,CAACP,IAAI,GAAK3D,cAAc,CACtC,CAAC,CAAC,CACJ,CACA,MAAO,EAAA8D,qBAAA,CAAA/D,gCAAgC,CAACC,cAAc,CAAE+D,QAAQ,CAAC,eAA1DD,qBAAA,CAA4DpE,MAAM,EAAG,CAAC,CAC/E,CAAC,CAGDyE,SAAS,SAAT,CAAAA,SAASA,CAACnE,cAAsB,CAAE+D,QAAsB,EACtD,GAAI,MAAO,CAAAP,MAAM,GAAK,WAAW,CAAE,CACjChD,aAAa,CAAC4D,GAAG,CAAC,CAChBT,IAAI,CAAE3D,cAAc,CACpBY,GAAG,CAAEyD,sBAAsB,CAACrE,cAAc,CAAE+D,QAAQ,CAAC,CAErD1C,UAAU,CAAE0C,QAAQ,CAACO,G,CACtB,CAAC,CACF,MAAO,CAAAC,OAAO,CAACC,OAAO,EAAE,CAC1B,CAEA,GAAM,CAAAC,cAAc,CAAGnC,QAAQ,CAACoC,IAAI,EAAI,MAAO,CAAApC,QAAQ,CAACoC,IAAI,CAACC,WAAW,GAAK,UAAU,CACvF,GAAI,CAACF,cAAc,CAAE,CACnB,KAAM,IAAI,CAAAG,2BAAU,CAClB,qBAAqB,CACrB,0EAA0E,CAC3E,CACH,CAEA,GAAM,CAAAxE,KAAK,CAAGnB,eAAe,EAAE,CAC/BqD,QAAQ,CAACoC,IAAK,CAACC,WAAW,CAACvE,KAAK,CAAC,CAEjC,GAAM,CAAAyE,GAAG,CAAG9E,gCAAgC,CAACC,cAAc,CAAE+D,QAAQ,CAAC,CACtE,GAAI,CAACc,GAAG,CAACnF,MAAM,CAAE,CACfoF,eAAe,CAAC9E,cAAc,CAAE+D,QAAQ,CAAC,CAC3C,CAEA,GAAI,CAACgB,8BAA8B,EAAE,CAAE,CACrC,MAAO,CAAAR,OAAO,CAACC,OAAO,EAAE,CAC1B,CAEA,MAAO,IAAI,CAAAQ,yBAAY,CAAChF,cAAc,CAAE,CAEtCM,OAAO,CAAEyD,QAAQ,CAACzD,O,CACnB,CAAC,CAAC2E,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,CACrB,C,CACD,CAED,GAAM,CAAAxD,EAAE,CAAG,sBAAsB,CAEjC,QAAS,CAAAxC,eAAeA,CAAA,EACtB,GAAM,CAAAoD,OAAO,CAAGC,QAAQ,CAACC,cAAc,CAACd,EAAE,CAAC,CAC3C,GAAIY,OAAO,EAAIA,OAAO,WAAY,CAAAG,gBAAgB,CAAE,CAClD,MAAO,CAAAH,OAAO,CAChB,CACA,GAAM,CAAA6C,YAAY,CAAG5C,QAAQ,CAAC6C,aAAa,CAAC,OAAO,CAAC,CACpDD,YAAY,CAAC1D,EAAE,CAAGC,EAAE,CACpByD,YAAY,CAACxD,IAAI,CAAG,UAAU,CAC9B,MAAO,CAAAwD,YAAY,CACrB,CAEM,QAAU,CAAAb,sBAAsBA,CAAChE,UAAkB,CAAE0D,QAAsB,EAC/E,MAAO,0BAA0B1D,UAAU,YAAY0D,QAAQ,CAACO,GAAG,kBACjEP,QAAQ,CAACzD,OAAO,EAAI8E,iBAAW,CAACC,IAClC,GAAG,CACL,CAEA,QAAS,CAAAP,eAAeA,CAACzE,UAAkB,CAAE0D,QAAsB,EACjE,GAAM,CAAAuB,SAAS,CAAGjB,sBAAsB,CAAChE,UAAU,CAAE0D,QAAQ,CAAC,CAE9D,GAAM,CAAAmB,YAAY,CAAGjG,eAAe,EAAE,CAGtC,GAAIiG,YAAY,CAAClG,UAAU,CAAE,CAC3B,GAAM,CAAAuG,cAAc,CAAGL,YAAmB,CAC1CK,cAAc,CAACvG,UAAU,CAACwG,OAAO,CAAGD,cAAc,CAACvG,UAAU,CAACwG,OAAO,CACjED,cAAc,CAACvG,UAAU,CAACwG,OAAO,CAAGF,SAAS,CAC7CA,SAAS,CACf,CAAC,IAAM,CACL,GAAM,CAAAG,QAAQ,CAAGnD,QAAQ,CAACoD,cAAc,CAACJ,SAAS,CAAC,CACnDJ,YAAY,CAACP,WAAW,CAACc,QAAQ,CAAC,CACpC,CACA,MAAO,CAAAP,YAAY,CACrB,CAEA,QAAS,CAAAH,8BAA8BA,CAAA,EACrC,GAAQ,CAAAY,SAAS,CAAKnC,MAAM,CAACoC,SAAS,CAA9BD,SAAS,CAEjB,GAAM,CAAAE,KAAK,CAAG,CAAC,CAACF,SAAS,CAACG,KAAK,CAAC,cAAc,CAAC,CAC/C,GAAM,CAAAC,QAAQ,CAAG,gCAAgC,CAACC,IAAI,CAACJ,SAAS,CAACD,SAAS,CAAC,CAE3E,GAAM,CAAAM,MAAM,CAAGN,SAAS,CAACO,QAAQ,CAAC,MAAM,CAAC,CAEzC,GAAM,CAAAC,IAAI,CAAGR,SAAS,CAACO,QAAQ,CAAC,SAAS,CAAC,CAE1C,GAAM,CAAAE,SAAS,CAAGT,SAAS,CAACO,QAAQ,CAAC,SAAS,CAAC,CAC/C,MAAO,CAACH,QAAQ,EAAI,CAACF,KAAK,EAAI,CAACI,MAAM,EAAI,CAACE,IAAI,EAAI,CAACC,SAAS,CAC9D","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
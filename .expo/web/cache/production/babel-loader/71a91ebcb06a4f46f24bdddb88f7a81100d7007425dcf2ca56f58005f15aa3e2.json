{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _utils=require(\"./utils\");var _theming=require(\"../../core/theming\");var _excluded=[\"value\",\"disabled\",\"onValueChange\",\"color\",\"theme\"];function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var version=_reactNative.NativeModules.PlatformConstants?_reactNative.NativeModules.PlatformConstants.reactNativeVersion:undefined;var Switch=function Switch(_ref){var value=_ref.value,disabled=_ref.disabled,onValueChange=_ref.onValueChange,color=_ref.color,themeOverrides=_ref.theme,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var theme=(0,_theming.useInternalTheme)(themeOverrides);var _getSwitchColor=(0,_utils.getSwitchColor)({theme:theme,disabled:disabled,value:value,color:color}),checkedColor=_getSwitchColor.checkedColor,onTintColor=_getSwitchColor.onTintColor,thumbTintColor=_getSwitchColor.thumbTintColor;var props=version&&version.major===0&&version.minor<=56?{onTintColor:onTintColor,thumbTintColor:thumbTintColor}:_reactNative.Platform.OS==='web'?{activeTrackColor:onTintColor,thumbColor:thumbTintColor,activeThumbColor:checkedColor}:{thumbColor:thumbTintColor,trackColor:{true:onTintColor,false:onTintColor}};return React.createElement(_reactNative.Switch,_extends({value:value,disabled:disabled,onValueChange:disabled?undefined:onValueChange},props,rest));};var _default=exports.default=Switch;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_utils","_theming","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","version","NativeModules","PlatformConstants","reactNativeVersion","undefined","Switch","_ref","value","disabled","onValueChange","color","themeOverrides","theme","rest","_objectWithoutProperties2","useInternalTheme","_getSwitchColor","getSwitchColor","checkedColor","onTintColor","thumbTintColor","props","major","minor","Platform","OS","activeTrackColor","thumbColor","activeThumbColor","trackColor","true","false","createElement","NativeSwitch","_extends","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/Switch/Switch.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  NativeModules,\n  Platform,\n  StyleProp,\n  Switch as NativeSwitch,\n  ViewStyle,\n} from 'react-native';\n\nimport { getSwitchColor } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nconst version = NativeModules.PlatformConstants\n  ? NativeModules.PlatformConstants.reactNativeVersion\n  : undefined;\n\nexport type Props = React.ComponentPropsWithRef<typeof NativeSwitch> & {\n  /**\n   * Disable toggling the switch.\n   */\n  disabled?: boolean;\n  /**\n   * Value of the switch, true means 'on', false means 'off'.\n   */\n  value?: boolean;\n  /**\n   * Custom color for switch.\n   */\n  color?: string;\n  /**\n   * Callback called with the new value when it changes.\n   */\n  onValueChange?: Function;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Switch is a visual toggle between two mutually exclusive states â€” on and off.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Switch } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [isSwitchOn, setIsSwitchOn] = React.useState(false);\n *\n *   const onToggleSwitch = () => setIsSwitchOn(!isSwitchOn);\n *\n *   return <Switch value={isSwitchOn} onValueChange={onToggleSwitch} />;\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Switch = ({\n  value,\n  disabled,\n  onValueChange,\n  color,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { checkedColor, onTintColor, thumbTintColor } = getSwitchColor({\n    theme,\n    disabled,\n    value,\n    color,\n  });\n\n  const props =\n    version && version.major === 0 && version.minor <= 56\n      ? {\n          onTintColor,\n          thumbTintColor,\n        }\n      : Platform.OS === 'web'\n      ? {\n          activeTrackColor: onTintColor,\n          thumbColor: thumbTintColor,\n          activeThumbColor: checkedColor,\n        }\n      : {\n          thumbColor: thumbTintColor,\n          trackColor: {\n            true: onTintColor,\n            false: onTintColor,\n          },\n        };\n\n  return (\n    <NativeSwitch\n      value={value}\n      disabled={disabled}\n      onValueChange={disabled ? undefined : onValueChange}\n      {...props}\n      {...rest}\n    />\n  );\n};\n\nexport default Switch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
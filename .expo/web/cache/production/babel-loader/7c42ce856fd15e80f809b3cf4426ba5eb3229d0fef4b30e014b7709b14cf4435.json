{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;exports.getAdornmentConfig=getAdornmentConfig;exports.getAdornmentStyleAdjustmentForNativeInput=getAdornmentStyleAdjustmentForNativeInput;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _react=_interopRequireDefault(require(\"react\"));var _enums=require(\"./enums\");var _TextInputAffix=_interopRequireWildcard(require(\"./TextInputAffix\"));var _TextInputIcon=_interopRequireWildcard(require(\"./TextInputIcon\"));var _helpers=require(\"../helpers\");function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function getAdornmentConfig(_ref){var left=_ref.left,right=_ref.right;var adornmentConfig=[];if(left||right){[{side:_enums.AdornmentSide.Left,adornment:left},{side:_enums.AdornmentSide.Right,adornment:right}].forEach(function(_ref2){var side=_ref2.side,adornment=_ref2.adornment;if(adornment&&_react.default.isValidElement(adornment)){var type;if(adornment.type===_TextInputAffix.default){type=_enums.AdornmentType.Affix;}else if(adornment.type===_TextInputIcon.default){type=_enums.AdornmentType.Icon;}adornmentConfig.push({side:side,type:type});}});}return adornmentConfig;}function getAdornmentStyleAdjustmentForNativeInput(_ref3){var adornmentConfig=_ref3.adornmentConfig,leftAffixWidth=_ref3.leftAffixWidth,rightAffixWidth=_ref3.rightAffixWidth,paddingHorizontal=_ref3.paddingHorizontal,_ref3$inputOffset=_ref3.inputOffset,inputOffset=_ref3$inputOffset===void 0?0:_ref3$inputOffset,mode=_ref3.mode,isV3=_ref3.isV3;var _getConstants=(0,_helpers.getConstants)(isV3),OUTLINED_INPUT_OFFSET=_getConstants.OUTLINED_INPUT_OFFSET,ADORNMENT_OFFSET=_getConstants.ADORNMENT_OFFSET;if(adornmentConfig.length){var adornmentStyleAdjustmentForNativeInput=adornmentConfig.map(function(_ref4){var type=_ref4.type,side=_ref4.side;var isLeftSide=side===_enums.AdornmentSide.Left;var inputModeAdornemntOffset=mode===_enums.InputMode.Outlined?ADORNMENT_OFFSET+OUTLINED_INPUT_OFFSET:ADORNMENT_OFFSET;var paddingKey=`padding${captalize(side)}`;var affixWidth=isLeftSide?leftAffixWidth:rightAffixWidth;var padding=typeof paddingHorizontal==='number'?paddingHorizontal:inputModeAdornemntOffset;var offset=affixWidth+padding;var isAffix=type===_enums.AdornmentType.Affix;var marginKey=`margin${captalize(side)}`;return(0,_defineProperty2.default)((0,_defineProperty2.default)({},marginKey,isAffix?0:offset),paddingKey,isAffix?offset:inputOffset);});var allStyleAdjustmentsMerged=adornmentStyleAdjustmentForNativeInput.reduce(function(mergedStyles,currentStyle){return Object.assign({},mergedStyles,currentStyle);},{});return allStyleAdjustmentsMerged;}else{return[{}];}}var captalize=function captalize(text){return text.charAt(0).toUpperCase()+text.slice(1);};var TextInputAdornment=function TextInputAdornment(_ref5){var adornmentConfig=_ref5.adornmentConfig,left=_ref5.left,right=_ref5.right,onAffixChange=_ref5.onAffixChange,textStyle=_ref5.textStyle,visible=_ref5.visible,topPosition=_ref5.topPosition,isTextInputFocused=_ref5.isTextInputFocused,forceFocus=_ref5.forceFocus,paddingHorizontal=_ref5.paddingHorizontal,maxFontSizeMultiplier=_ref5.maxFontSizeMultiplier,theme=_ref5.theme,disabled=_ref5.disabled;if(adornmentConfig.length){return _react.default.createElement(_react.default.Fragment,null,adornmentConfig.map(function(_ref6){var type=_ref6.type,side=_ref6.side;var inputAdornmentComponent;if(side===_enums.AdornmentSide.Left){inputAdornmentComponent=left;}else if(side===_enums.AdornmentSide.Right){inputAdornmentComponent=right;}var commonProps={side:side,testID:`${side}-${type}-adornment`,isTextInputFocused:isTextInputFocused,paddingHorizontal:paddingHorizontal,disabled:disabled};if(type===_enums.AdornmentType.Icon){return _react.default.createElement(_TextInputIcon.IconAdornment,_extends({},commonProps,{theme:theme,key:side,icon:inputAdornmentComponent,topPosition:topPosition[_enums.AdornmentType.Icon],forceFocus:forceFocus}));}else if(type===_enums.AdornmentType.Affix){return _react.default.createElement(_TextInputAffix.AffixAdornment,_extends({},commonProps,{key:side,topPosition:topPosition[_enums.AdornmentType.Affix][side],affix:inputAdornmentComponent,textStyle:textStyle,onLayout:onAffixChange[side],visible:visible,maxFontSizeMultiplier:maxFontSizeMultiplier}));}else{return null;}}));}else{return null;}};var _default=exports.default=TextInputAdornment;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_enums","_TextInputAffix","_interopRequireWildcard","_TextInputIcon","_helpers","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","getAdornmentConfig","_ref","left","right","adornmentConfig","side","AdornmentSide","Left","adornment","Right","forEach","_ref2","React","isValidElement","type","TextInputAffix","AdornmentType","Affix","TextInputIcon","Icon","push","getAdornmentStyleAdjustmentForNativeInput","_ref3","leftAffixWidth","rightAffixWidth","paddingHorizontal","_ref3$inputOffset","inputOffset","mode","isV3","_getConstants","getConstants","OUTLINED_INPUT_OFFSET","ADORNMENT_OFFSET","length","adornmentStyleAdjustmentForNativeInput","map","_ref4","isLeftSide","inputModeAdornemntOffset","InputMode","Outlined","paddingKey","captalize","affixWidth","padding","offset","isAffix","marginKey","_defineProperty2","allStyleAdjustmentsMerged","reduce","mergedStyles","currentStyle","assign","text","charAt","toUpperCase","slice","TextInputAdornment","_ref5","onAffixChange","textStyle","visible","topPosition","isTextInputFocused","forceFocus","maxFontSizeMultiplier","theme","disabled","createElement","Fragment","_ref6","inputAdornmentComponent","commonProps","testID","IconAdornment","_extends","key","icon","AffixAdornment","affix","onLayout","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/TextInput/Adornment/TextInputAdornment.tsx"],"sourcesContent":["import React from 'react';\nimport type {\n  LayoutChangeEvent,\n  TextStyle,\n  StyleProp,\n  Animated,\n  DimensionValue,\n} from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { AdornmentSide, AdornmentType, InputMode } from './enums';\nimport TextInputAffix, { AffixAdornment } from './TextInputAffix';\nimport TextInputIcon, { IconAdornment } from './TextInputIcon';\nimport type {\n  AdornmentConfig,\n  AdornmentStyleAdjustmentForNativeInput,\n} from './types';\nimport { getConstants } from '../helpers';\n\nexport function getAdornmentConfig({\n  left,\n  right,\n}: {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n}): Array<AdornmentConfig> {\n  let adornmentConfig: any[] = [];\n  if (left || right) {\n    [\n      { side: AdornmentSide.Left, adornment: left },\n      { side: AdornmentSide.Right, adornment: right },\n    ].forEach(({ side, adornment }) => {\n      if (adornment && React.isValidElement(adornment)) {\n        let type;\n        if (adornment.type === TextInputAffix) {\n          type = AdornmentType.Affix;\n        } else if (adornment.type === TextInputIcon) {\n          type = AdornmentType.Icon;\n        }\n        adornmentConfig.push({\n          side,\n          type,\n        });\n      }\n    });\n  }\n\n  return adornmentConfig;\n}\n\nexport function getAdornmentStyleAdjustmentForNativeInput({\n  adornmentConfig,\n  leftAffixWidth,\n  rightAffixWidth,\n  paddingHorizontal,\n  inputOffset = 0,\n  mode,\n  isV3,\n}: {\n  inputOffset?: number;\n  adornmentConfig: AdornmentConfig[];\n  leftAffixWidth: number;\n  rightAffixWidth: number;\n  mode?: 'outlined' | 'flat';\n  paddingHorizontal?: DimensionValue;\n  isV3?: boolean;\n}): AdornmentStyleAdjustmentForNativeInput | {} {\n  const { OUTLINED_INPUT_OFFSET, ADORNMENT_OFFSET } = getConstants(isV3);\n\n  if (adornmentConfig.length) {\n    const adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(\n      ({ type, side }: AdornmentConfig) => {\n        const isLeftSide = side === AdornmentSide.Left;\n        const inputModeAdornemntOffset =\n          mode === InputMode.Outlined\n            ? ADORNMENT_OFFSET + OUTLINED_INPUT_OFFSET\n            : ADORNMENT_OFFSET;\n        const paddingKey = `padding${captalize(side)}`;\n        const affixWidth = isLeftSide ? leftAffixWidth : rightAffixWidth;\n        const padding =\n          typeof paddingHorizontal === 'number'\n            ? paddingHorizontal\n            : inputModeAdornemntOffset;\n        const offset = affixWidth + padding;\n\n        const isAffix = type === AdornmentType.Affix;\n        const marginKey = `margin${captalize(side)}`;\n\n        return {\n          [marginKey]: isAffix ? 0 : offset,\n          [paddingKey]: isAffix ? offset : inputOffset,\n        };\n      }\n    );\n    const allStyleAdjustmentsMerged =\n      adornmentStyleAdjustmentForNativeInput.reduce(\n        (mergedStyles, currentStyle) => {\n          return {\n            ...mergedStyles,\n            ...currentStyle,\n          };\n        },\n        {}\n      );\n    return allStyleAdjustmentsMerged;\n  } else {\n    return [{}];\n  }\n}\n\nconst captalize = (text: string) =>\n  text.charAt(0).toUpperCase() + text.slice(1);\n\nexport interface TextInputAdornmentProps {\n  forceFocus: () => void;\n  adornmentConfig: AdornmentConfig[];\n  topPosition: {\n    [AdornmentType.Affix]: {\n      [AdornmentSide.Left]: number | null;\n      [AdornmentSide.Right]: number | null;\n    };\n    [AdornmentType.Icon]: number;\n  };\n  onAffixChange: {\n    [AdornmentSide.Left]: (event: LayoutChangeEvent) => void;\n    [AdornmentSide.Right]: (event: LayoutChangeEvent) => void;\n  };\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  textStyle?: StyleProp<TextStyle>;\n  visible?: Animated.Value;\n  isTextInputFocused: boolean;\n  paddingHorizontal?: DimensionValue;\n  maxFontSizeMultiplier?: number | undefined | null;\n  theme?: ThemeProp;\n  disabled?: boolean;\n}\n\nconst TextInputAdornment: React.FunctionComponent<TextInputAdornmentProps> = ({\n  adornmentConfig,\n  left,\n  right,\n  onAffixChange,\n  textStyle,\n  visible,\n  topPosition,\n  isTextInputFocused,\n  forceFocus,\n  paddingHorizontal,\n  maxFontSizeMultiplier,\n  theme,\n  disabled,\n}) => {\n  if (adornmentConfig.length) {\n    return (\n      <>\n        {adornmentConfig.map(({ type, side }: AdornmentConfig) => {\n          let inputAdornmentComponent;\n          if (side === AdornmentSide.Left) {\n            inputAdornmentComponent = left;\n          } else if (side === AdornmentSide.Right) {\n            inputAdornmentComponent = right;\n          }\n\n          const commonProps = {\n            side: side,\n            testID: `${side}-${type}-adornment`,\n            isTextInputFocused,\n            paddingHorizontal,\n            disabled,\n          };\n          if (type === AdornmentType.Icon) {\n            return (\n              <IconAdornment\n                {...commonProps}\n                theme={theme}\n                key={side}\n                icon={inputAdornmentComponent}\n                topPosition={topPosition[AdornmentType.Icon]}\n                forceFocus={forceFocus}\n              />\n            );\n          } else if (type === AdornmentType.Affix) {\n            return (\n              <AffixAdornment\n                {...commonProps}\n                key={side}\n                topPosition={topPosition[AdornmentType.Affix][side]}\n                affix={inputAdornmentComponent}\n                textStyle={textStyle}\n                onLayout={onAffixChange[side]}\n                visible={visible}\n                maxFontSizeMultiplier={maxFontSizeMultiplier}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TextInputAdornment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
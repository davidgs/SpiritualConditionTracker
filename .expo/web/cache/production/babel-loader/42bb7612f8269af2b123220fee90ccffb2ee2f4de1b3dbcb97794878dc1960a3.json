{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _native=require(\"@react-navigation/native\");var _bottomTabs=require(\"@react-navigation/bottom-tabs\");var _nativeStack=require(\"@react-navigation/native-stack\");var _FontAwesome=_interopRequireDefault(require(\"react-native-vector-icons/FontAwesome5\"));var _UserContext=require(\"./contexts/UserContext\");var _ActivitiesContext=require(\"./contexts/ActivitiesContext\");var _DashboardScreen=_interopRequireDefault(require(\"./screens/DashboardScreen\"));var _ActivityLogScreen=_interopRequireDefault(require(\"./screens/ActivityLogScreen\"));var _SpiritualFitnessScreen=_interopRequireDefault(require(\"./screens/SpiritualFitnessScreen\"));var _MeetingsScreen=_interopRequireDefault(require(\"./screens/MeetingsScreen\"));var _ProximityWizardScreen=_interopRequireDefault(require(\"./screens/ProximityWizardScreen\"));var _NearbyMembersScreen=_interopRequireDefault(require(\"./screens/NearbyMembersScreen\"));var _SettingsScreen=_interopRequireDefault(require(\"./screens/SettingsScreen\"));var _jsxRuntime=require(\"react/jsx-runtime\");var Tab=(0,_bottomTabs.createBottomTabNavigator)();var Stack=(0,_nativeStack.createNativeStackNavigator)();var LoadingScreen=function LoadingScreen(){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.loadingContainer,children:[(0,_jsxRuntime.jsx)(_reactNative.ActivityIndicator,{size:\"large\",color:\"#0000ff\"}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.loadingText,children:\"Loading AA Recovery Tracker...\"})]});};var MainTabNavigator=function MainTabNavigator(){return(0,_jsxRuntime.jsxs)(Tab.Navigator,{screenOptions:function screenOptions(_ref){var route=_ref.route;return{tabBarIcon:function tabBarIcon(_ref2){var focused=_ref2.focused,color=_ref2.color,size=_ref2.size;var iconName;if(route.name==='Dashboard'){iconName='home';}else if(route.name==='Activities'){iconName='list-alt';}else if(route.name==='Spiritual'){iconName='heart';}else if(route.name==='Meetings'){iconName='users';}else if(route.name==='Nearby'){iconName='map-marker-alt';}else if(route.name==='Settings'){iconName='cog';}return(0,_jsxRuntime.jsx)(_FontAwesome.default,{name:iconName,size:size,color:color});},tabBarActiveTintColor:'#3498db',tabBarInactiveTintColor:'gray',headerShown:false};},children:[(0,_jsxRuntime.jsx)(Tab.Screen,{name:\"Dashboard\",component:_DashboardScreen.default}),(0,_jsxRuntime.jsx)(Tab.Screen,{name:\"Activities\",component:_ActivityLogScreen.default}),(0,_jsxRuntime.jsx)(Tab.Screen,{name:\"Spiritual\",component:_SpiritualFitnessScreen.default}),(0,_jsxRuntime.jsx)(Tab.Screen,{name:\"Meetings\",component:_MeetingsScreen.default}),(0,_jsxRuntime.jsx)(Tab.Screen,{name:\"Nearby\",component:NearbyStackNavigator}),(0,_jsxRuntime.jsx)(Tab.Screen,{name:\"Settings\",component:_SettingsScreen.default})]});};var NearbyStackNavigator=function NearbyStackNavigator(){return(0,_jsxRuntime.jsxs)(Stack.Navigator,{screenOptions:{headerShown:false},children:[(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"NearbyMembers\",component:_NearbyMembersScreen.default}),(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"ProximityWizard\",component:_ProximityWizardScreen.default})]});};var AppContainer=function AppContainer(){var _useUser=(0,_UserContext.useUser)(),isLoading=_useUser.isLoading;if(isLoading){return(0,_jsxRuntime.jsx)(LoadingScreen,{});}return(0,_jsxRuntime.jsx)(_native.NavigationContainer,{children:(0,_jsxRuntime.jsx)(MainTabNavigator,{})});};var App=function App(){return(0,_jsxRuntime.jsxs)(_reactNative.SafeAreaView,{style:styles.container,children:[(0,_jsxRuntime.jsx)(_reactNative.StatusBar,{barStyle:\"dark-content\"}),(0,_jsxRuntime.jsx)(_UserContext.UserProvider,{children:(0,_jsxRuntime.jsx)(_ActivitiesContext.ActivitiesProvider,{children:(0,_jsxRuntime.jsx)(AppContainer,{})})})]});};var styles=_reactNative.StyleSheet.create({container:{flex:1,backgroundColor:'#fff'},loadingContainer:{flex:1,justifyContent:'center',alignItems:'center',backgroundColor:'#f5f5f5'},loadingText:{marginTop:20,fontSize:18,color:'#333'}});var _default=exports.default=App;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_native","_bottomTabs","_nativeStack","_FontAwesome","_UserContext","_ActivitiesContext","_DashboardScreen","_ActivityLogScreen","_SpiritualFitnessScreen","_MeetingsScreen","_ProximityWizardScreen","_NearbyMembersScreen","_SettingsScreen","_jsxRuntime","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","LoadingScreen","jsxs","View","style","styles","loadingContainer","children","jsx","ActivityIndicator","size","color","Text","loadingText","MainTabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","iconName","name","default","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","Screen","component","DashboardScreen","ActivityLogScreen","SpiritualFitnessScreen","MeetingsScreen","NearbyStackNavigator","SettingsScreen","NearbyMembersScreen","ProximityWizardScreen","AppContainer","_useUser","useUser","isLoading","NavigationContainer","App","SafeAreaView","container","StatusBar","barStyle","UserProvider","ActivitiesProvider","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","_default","exports"],"sources":["/home/runner/workspace/src/App.js"],"sourcesContent":["import React from 'react';\nimport { SafeAreaView, StyleSheet, StatusBar, View, Text, ActivityIndicator } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\n\n// Contexts\nimport { UserProvider, useUser } from './contexts/UserContext';\nimport { ActivitiesProvider } from './contexts/ActivitiesContext';\n\n// Import screens\nimport DashboardScreen from './screens/DashboardScreen';\nimport ActivityLogScreen from './screens/ActivityLogScreen';\nimport SpiritualFitnessScreen from './screens/SpiritualFitnessScreen';\nimport MeetingsScreen from './screens/MeetingsScreen';\nimport ProximityWizardScreen from './screens/ProximityWizardScreen';\nimport NearbyMembersScreen from './screens/NearbyMembersScreen';\nimport SettingsScreen from './screens/SettingsScreen';\n\n// Initialize navigation\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\n\n// Loading screen while database initializes\nconst LoadingScreen = () => (\n  <View style={styles.loadingContainer}>\n    <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    <Text style={styles.loadingText}>Loading AA Recovery Tracker...</Text>\n  </View>\n);\n\n// Main tab navigation\nconst MainTabNavigator = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          \n          if (route.name === 'Dashboard') {\n            iconName = 'home';\n          } else if (route.name === 'Activities') {\n            iconName = 'list-alt';\n          } else if (route.name === 'Spiritual') {\n            iconName = 'heart';\n          } else if (route.name === 'Meetings') {\n            iconName = 'users';\n          } else if (route.name === 'Nearby') {\n            iconName = 'map-marker-alt';\n          } else if (route.name === 'Settings') {\n            iconName = 'cog';\n          }\n          \n          return <Icon name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#3498db',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      })}\n    >\n      <Tab.Screen name=\"Dashboard\" component={DashboardScreen} />\n      <Tab.Screen name=\"Activities\" component={ActivityLogScreen} />\n      <Tab.Screen name=\"Spiritual\" component={SpiritualFitnessScreen} />\n      <Tab.Screen name=\"Meetings\" component={MeetingsScreen} />\n      <Tab.Screen name=\"Nearby\" component={NearbyStackNavigator} />\n      <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n    </Tab.Navigator>\n  );\n};\n\n// Nested stack navigator for nearby screens\nconst NearbyStackNavigator = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false\n      }}\n    >\n      <Stack.Screen name=\"NearbyMembers\" component={NearbyMembersScreen} />\n      <Stack.Screen name=\"ProximityWizard\" component={ProximityWizardScreen} />\n    </Stack.Navigator>\n  );\n};\n\n// App container with context providers\nconst AppContainer = () => {\n  const { isLoading } = useUser();\n  \n  if (isLoading) {\n    return <LoadingScreen />;\n  }\n  \n  return (\n    <NavigationContainer>\n      <MainTabNavigator />\n    </NavigationContainer>\n  );\n};\n\n// Root component with providers\nconst App = () => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"dark-content\" />\n      <UserProvider>\n        <ActivitiesProvider>\n          <AppContainer />\n        </ActivitiesProvider>\n      </UserProvider>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 20,\n    fontSize: 18,\n    color: '#333'\n  }\n});\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
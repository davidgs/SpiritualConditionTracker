{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _theming=require(\"../../core/theming\");function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}var ListImage=function ListImage(_ref){var style=_ref.style,source=_ref.source,_ref$variant=_ref.variant,variant=_ref$variant===void 0?'image':_ref$variant,themeOverrides=_ref.theme;var theme=(0,_theming.useInternalTheme)(themeOverrides);var getStyles=function getStyles(){if(variant==='video'){if(!theme.isV3){return[style,styles.video];}return[style,styles.videoV3];}return[style,styles.image];};return React.createElement(_reactNative.Image,{style:getStyles(),source:source,accessibilityIgnoresInvertColors:true,testID:\"list-image\"});};var styles=_reactNative.StyleSheet.create({image:{width:56,height:56},video:{width:100,height:64,marginLeft:0},videoV3:{width:114,height:64,marginLeft:0}});ListImage.displayName='List.Image';var _default=exports.default=ListImage;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_theming","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ListImage","_ref","style","source","_ref$variant","variant","themeOverrides","theme","useInternalTheme","getStyles","isV3","styles","video","videoV3","image","createElement","Image","accessibilityIgnoresInvertColors","testID","StyleSheet","create","width","height","marginLeft","displayName","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/List/ListImage.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  Image,\n  ImageSourcePropType,\n  ImageStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = {\n  source: ImageSourcePropType;\n  variant?: 'image' | 'video';\n  style?: StyleProp<ImageStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show image in a list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <List.Image variant=\"image\" source={{uri: 'https://www.someurl.com/apple'}} />\n *     <List.Image variant=\"video\" source={require('../../some-apple.png')} />\n *   </>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ListImage = ({\n  style,\n  source,\n  variant = 'image',\n  theme: themeOverrides,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const getStyles = () => {\n    if (variant === 'video') {\n      if (!theme.isV3) {\n        return [style, styles.video];\n      }\n\n      return [style, styles.videoV3];\n    }\n\n    return [style, styles.image];\n  };\n\n  return (\n    <Image\n      style={getStyles()}\n      source={source}\n      accessibilityIgnoresInvertColors\n      testID=\"list-image\"\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 56,\n    height: 56,\n  },\n  video: {\n    width: 100,\n    height: 64,\n    marginLeft: 0,\n  },\n  videoV3: {\n    width: 114,\n    height: 64,\n    marginLeft: 0,\n  },\n});\n\nListImage.displayName = 'List.Image';\n\nexport default ListImage;\n"],"mappings":"gFAAA,IAAAA,KAAA,CAAAC,uBAAA,CAAAC,OAAA,WACA,IAAAC,YAAA,CAAAD,OAAA,iBAQA,IAAAE,QAAA,CAAAF,OAAA,uBAAqD,SAAAD,wBAAAI,CAAA,CAAAC,CAAA,wBAAAC,OAAA,KAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAN,uBAAA,UAAAA,wBAAAI,CAAA,CAAAC,CAAA,MAAAA,CAAA,EAAAD,CAAA,EAAAA,CAAA,CAAAK,UAAA,QAAAL,CAAA,KAAAM,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAAAC,SAAA,MAAAC,OAAA,CAAAV,CAAA,YAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAQ,CAAA,IAAAF,CAAA,CAAAL,CAAA,CAAAG,CAAA,CAAAD,CAAA,KAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,SAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,EAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,CAAAQ,CAAA,WAAAM,EAAA,IAAAd,CAAA,aAAAc,EAAA,KAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,CAAAc,EAAA,KAAAP,CAAA,EAAAD,CAAA,CAAAW,MAAA,CAAAC,cAAA,GAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,CAAAc,EAAA,KAAAP,CAAA,CAAAK,GAAA,EAAAL,CAAA,CAAAM,GAAA,EAAAP,CAAA,CAAAE,CAAA,CAAAM,EAAA,CAAAP,CAAA,EAAAC,CAAA,CAAAM,EAAA,EAAAd,CAAA,CAAAc,EAAA,UAAAN,CAAA,IAAAR,CAAA,CAAAC,CAAA,GA+BrD,GAAM,CAAAmB,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAGC,IAAA,CAKL,IAJX,CAAAC,KAAK,CAICD,IAAA,CAJNC,KAAK,CACLC,MAAM,CAGAF,IAAA,CAHNE,MAAM,CAAAC,YAAA,CAGAH,IAAA,CAFNI,OAAO,CAAPA,OAAO,CAAAD,YAAA,UAAG,OAAO,CAAAA,YAAA,CACVE,cAAA,CACDL,IAAA,CADNM,KAAK,CAEL,GAAM,CAAAA,KAAK,CAAG,GAAAC,yBAAgB,EAACF,cAAc,CAAC,CAC9C,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CACtB,GAAIJ,OAAO,GAAK,OAAO,CAAE,CACvB,GAAI,CAACE,KAAK,CAACG,IAAI,CAAE,CACf,MAAO,CAACR,KAAK,CAAES,MAAM,CAACC,KAAK,CAAC,CAC9B,CAEA,MAAO,CAACV,KAAK,CAAES,MAAM,CAACE,OAAO,CAAC,CAChC,CAEA,MAAO,CAACX,KAAK,CAAES,MAAM,CAACG,KAAK,CAAC,CAC9B,CAAC,CAED,MACE,CAAAvC,KAAA,CAAAwC,aAAA,CAACC,kBAAK,EACJd,KAAK,CAAEO,SAAS,CAAC,CAAE,CACnBN,MAAM,CAAEA,MAAO,CACfc,gCAAgC,MAChCC,MAAM,CAAC,YAAY,CACpB,CAAC,CAEN,CAAC,CAED,GAAM,CAAAP,MAAM,CAAGQ,uBAAU,CAACC,MAAM,CAAC,CAC/BN,KAAK,CAAE,CACLO,KAAK,CAAE,EAAE,CACTC,MAAM,CAAE,EACV,CAAC,CACDV,KAAK,CAAE,CACLS,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,EAAE,CACVC,UAAU,CAAE,CACd,CAAC,CACDV,OAAO,CAAE,CACPQ,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,EAAE,CACVC,UAAU,CAAE,CACd,CACF,CAAC,CAAC,CAEFvB,SAAS,CAACwB,WAAW,CAAG,YAAY,KAAAC,QAAA,CAAAC,OAAA,CAAApC,OAAA,CAErBU,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.resolveUri=resolveUri;exports.selectAssetSource=selectAssetSource;var _expoModulesCore=require(\"expo-modules-core\");var _reactNative=require(\"react-native\");var _AssetSourceResolver=_interopRequireDefault(require(\"./AssetSourceResolver\"));var _PlatformUtils=require(\"./PlatformUtils\");function selectAssetSource(meta){var _meta$fileHashes$inde,_meta$fileUris$index,_manifest2$extra;var scale=_AssetSourceResolver.default.pickScale(meta.scales,_reactNative.PixelRatio.get());var index=meta.scales.findIndex(function(s){return s===scale;});var hash=meta.fileHashes?(_meta$fileHashes$inde=meta.fileHashes[index])!=null?_meta$fileHashes$inde:meta.fileHashes[0]:meta.hash;var uri=meta.fileUris?(_meta$fileUris$index=meta.fileUris[index])!=null?_meta$fileUris$index:meta.fileUris[0]:meta.uri;if(uri){return{uri:resolveUri(uri),hash:hash};}var fileScale=scale===1?'':`@${scale}x`;var fileExtension=meta.type?`.${encodeURIComponent(meta.type)}`:'';var suffix=`/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;var params=new URLSearchParams({platform:_expoModulesCore.Platform.OS,hash:meta.hash});if(/^https?:\\/\\//.test(meta.httpServerLocation)){var _uri=meta.httpServerLocation+suffix+'?'+params;return{uri:_uri,hash:hash};}var manifest2=(0,_PlatformUtils.getManifest2)();var devServerUrl=manifest2!=null&&(_manifest2$extra=manifest2.extra)!=null&&(_manifest2$extra=_manifest2$extra.expoGo)!=null&&_manifest2$extra.developer?'http://'+manifest2.extra.expoGo.debuggerHost:null;if(devServerUrl){var baseUrl=new URL(meta.httpServerLocation+suffix,devServerUrl);baseUrl.searchParams.set('platform',_expoModulesCore.Platform.OS);baseUrl.searchParams.set('hash',meta.hash);return{uri:baseUrl.href,hash:hash};}if(_reactNative.NativeModules['ExponentKernel']){return{uri:`https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,hash:hash};}return{uri:'',hash:hash};}function resolveUri(uri){return _PlatformUtils.manifestBaseUrl?new URL(uri,_PlatformUtils.manifestBaseUrl).href:uri;}","map":{"version":3,"names":["_expoModulesCore","require","_reactNative","_AssetSourceResolver","_interopRequireDefault","_PlatformUtils","selectAssetSource","meta","_meta$fileHashes$inde","_meta$fileUris$index","_manifest2$extra","scale","AssetSourceResolver","pickScale","scales","PixelRatio","get","index","findIndex","s","hash","fileHashes","uri","fileUris","resolveUri","fileScale","fileExtension","type","encodeURIComponent","suffix","name","params","URLSearchParams","platform","Platform","OS","test","httpServerLocation","manifest2","getManifest2","devServerUrl","extra","expoGo","developer","debuggerHost","baseUrl","URL","searchParams","set","href","NativeModules","manifestBaseUrl"],"sources":["/home/runner/workspace/node_modules/expo-asset/src/AssetSources.ts"],"sourcesContent":["import type { PackagerAsset } from '@react-native/assets-registry/registry';\nimport { Platform } from 'expo-modules-core';\nimport { PixelRatio, NativeModules } from 'react-native';\n\nimport AssetSourceResolver from './AssetSourceResolver';\nimport { getManifest2, manifestBaseUrl } from './PlatformUtils';\n\n// @docsMissing\nexport type AssetMetadata = Pick<\n  PackagerAsset,\n  'httpServerLocation' | 'name' | 'hash' | 'type' | 'scales' | 'width' | 'height'\n> & {\n  uri?: string;\n  fileHashes?: string[];\n  fileUris?: string[];\n};\n\nexport type AssetSource = {\n  uri: string;\n  hash: string;\n};\n\n/**\n * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n * a { uri, hash } pair for the specific asset file.\n *\n * If the asset isn't an image with multiple scales, the first file is selected.\n */\nexport function selectAssetSource(meta: AssetMetadata): AssetSource {\n  // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n  // explicitly provided URIs\n  const scale = AssetSourceResolver.pickScale(meta.scales, PixelRatio.get());\n  const index = meta.scales.findIndex((s) => s === scale);\n  const hash = meta.fileHashes ? (meta.fileHashes[index] ?? meta.fileHashes[0]) : meta.hash;\n\n  // Allow asset processors to directly provide the URL to load\n  const uri = meta.fileUris ? (meta.fileUris[index] ?? meta.fileUris[0]) : meta.uri;\n  if (uri) {\n    return { uri: resolveUri(uri), hash };\n  }\n\n  const fileScale = scale === 1 ? '' : `@${scale}x`;\n  const fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n  const suffix = `/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;\n  const params = new URLSearchParams({\n    platform: Platform.OS,\n    hash: meta.hash,\n  });\n\n  // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n  // development server or production CDN URL origin\n  if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n    const uri = meta.httpServerLocation + suffix + '?' + params;\n    return { uri, hash };\n  }\n\n  // For assets during development using manifest2, we use the development server's URL origin\n  const manifest2 = getManifest2();\n\n  const devServerUrl = manifest2?.extra?.expoGo?.developer\n    ? 'http://' + manifest2.extra.expoGo.debuggerHost\n    : null;\n  if (devServerUrl) {\n    const baseUrl = new URL(meta.httpServerLocation + suffix, devServerUrl);\n\n    baseUrl.searchParams.set('platform', Platform.OS);\n    baseUrl.searchParams.set('hash', meta.hash);\n    return {\n      uri: baseUrl.href,\n      hash,\n    };\n  }\n\n  // Temporary fallback for loading assets in Expo Go home\n  if (NativeModules['ExponentKernel']) {\n    return { uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`, hash };\n  }\n\n  // In correctly configured apps, we arrive here if the asset is locally available on disk due to\n  // being managed by expo-updates, and `getLocalAssetUri(hash)` must return a local URI for this\n  // hash. Since the asset is local, we don't have a remote URL and specify an invalid URL (an empty\n  // string) as a placeholder.\n  return { uri: '', hash };\n}\n\n/**\n * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n * base URI.\n */\nexport function resolveUri(uri: string): string {\n  // `manifestBaseUrl` is always an absolute URL or `null`.\n  return manifestBaseUrl ? new URL(uri, manifestBaseUrl).href : uri;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _sha=_interopRequireDefault(require(\"./lib/sha1\"));var _v=_interopRequireDefault(require(\"./lib/v35\"));var _uuid=require(\"./uuid.types\");function uuidv4(){if(process.env.NODE_ENV==='test'||typeof crypto==='undefined'&&typeof window==='undefined'){return eval('require')('node:crypto').randomUUID();}return crypto.randomUUID();}var uuid={v4:uuidv4,v5:(0,_v.default)('v5',0x50,_sha.default),namespace:_uuid.Uuidv5Namespace};var _default=exports.default=uuid;","map":{"version":3,"names":["_sha","_interopRequireDefault","require","_v","_uuid","uuidv4","process","env","NODE_ENV","crypto","window","eval","randomUUID","uuid","v4","v5","v35","sha1","namespace","Uuidv5Namespace","_default","exports","default"],"sources":["/home/runner/workspace/node_modules/expo-modules-core/src/uuid/uuid.web.ts"],"sourcesContent":["import sha1 from './lib/sha1';\nimport v35 from './lib/v35';\nimport { UUID, Uuidv5Namespace } from './uuid.types';\n\nfunction uuidv4(): string {\n  if (\n    // We use this code path in jest-expo.\n    process.env.NODE_ENV === 'test' ||\n    // Node.js has supported global crypto since v15.\n    (typeof crypto === 'undefined' &&\n      // Only use abstract imports in server environments.\n      typeof window === 'undefined')\n  ) {\n    // NOTE: Metro statically extracts all `require` statements to resolve them for environments\n    // that don't support `require` natively. Here we check if we're running in a server environment\n    // by using the standard `typeof window` check, then running `eval` to skip Metro's static\n    // analysis and keep the `require` statement intact for runtime evaluation.\n    // eslint-disable-next-line no-eval\n    return eval('require')('node:crypto').randomUUID();\n  }\n\n  return crypto.randomUUID();\n}\n\nconst uuid: UUID = {\n  v4: uuidv4,\n  v5: v35('v5', 0x50, sha1),\n  namespace: Uuidv5Namespace,\n};\n\nexport default uuid;\n"],"mappings":"mKAAA,IAAAA,IAAA,CAAAC,sBAAA,CAAAC,OAAA,gBACA,IAAAC,EAAA,CAAAF,sBAAA,CAAAC,OAAA,eACA,IAAAE,KAAA,CAAAF,OAAA,iBAEA,QAAS,CAAAG,MAAMA,CAAA,CAAW,CACxB,GAEEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,MAAM,EAE9B,MAAO,CAAAC,MAAM,GAAK,WAAW,EAE5B,MAAO,CAAAC,MAAM,GAAK,WAAY,CAChC,CAMA,MAAO,CAAAC,IAAI,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAACC,UAAU,CAAC,CAAC,CACpD,CAEA,MAAO,CAAAH,MAAM,CAACG,UAAU,CAAC,CAAC,CAC5B,CAEA,GAAM,CAAAC,IAAU,CAAG,CACjBC,EAAE,CAAET,MAAM,CACVU,EAAE,CAAE,GAAAC,UAAG,EAAC,IAAI,CAAE,IAAI,CAAEC,YAAI,CAAC,CACzBC,SAAS,CAAEC,qBACb,CAAC,CAAC,IAAAC,QAAA,CAAAC,OAAA,CAAAC,OAAA,CAEaT,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
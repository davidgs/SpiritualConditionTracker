{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.reloadAppAsync=reloadAppAsync;var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));function reloadAppAsync(){return _reloadAppAsync.apply(this,arguments);}function _reloadAppAsync(){_reloadAppAsync=(0,_asyncToGenerator2.default)(function*(){var _globalThis$expo;var reason=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'Reloaded from JS call';yield(_globalThis$expo=globalThis.expo)==null?void 0:_globalThis$expo.reloadAppAsync(reason);});return _reloadAppAsync.apply(this,arguments);}","map":{"version":3,"names":["reloadAppAsync","_reloadAppAsync","apply","arguments","_asyncToGenerator2","default","_globalThis$expo","reason","length","undefined","globalThis","expo"],"sources":["/home/runner/workspace/node_modules/expo-modules-core/src/reload.ts"],"sourcesContent":["/**\n * Reloads the app. This method works for both release and debug builds.\n *\n * Unlike [`Updates.reloadAsync()`](/versions/latest/sdk/updates/#updatesreloadasync),\n * this function does not use a new update even if one is available. It only reloads the app using the same JavaScript bundle that is currently running.\n *\n * @param reason The reason for reloading the app. This is used only for some platforms.\n */\nexport async function reloadAppAsync(reason: string = 'Reloaded from JS call'): Promise<void> {\n  await globalThis.expo?.reloadAppAsync(reason);\n}\n"],"mappings":"4RAQsB,CAAAA,cAAcA,CAAA,SAAAC,eAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,gBAAA,EAAAA,eAAA,IAAAG,kBAAA,CAAAC,OAAA,EAA7B,WAAuF,KAAAC,gBAAA,IAAzD,CAAAC,MAAc,CAAAJ,SAAA,CAAAK,MAAA,IAAAL,SAAA,MAAAM,SAAA,CAAAN,SAAA,IAAG,uBAAuB,CAC3E,MAAAG,gBAAA,CAAMI,UAAU,CAACC,IAAI,eAAfL,gBAAA,CAAiBN,cAAc,CAACO,MAAM,CAAC,CAC/C,CAAC,SAAAN,eAAA,CAAAC,KAAA,MAAAC,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
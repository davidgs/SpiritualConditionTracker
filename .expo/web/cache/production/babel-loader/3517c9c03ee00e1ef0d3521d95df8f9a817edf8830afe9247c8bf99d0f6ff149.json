{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.userOperations=exports.update=exports.spiritualFitnessOperations=exports.reminderOperations=exports.nearbyMembersOperations=exports.meetingOperations=exports.insert=exports.initDatabase=exports.getById=exports.getAll=exports.executeSql=exports.deleteById=exports.default=exports.closeDatabase=exports.calculateSobrietyYears=exports.calculateSobrietyDays=exports.calculateDistance=exports.activityOperations=void 0;var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));var DB_NAME='aarecovery.db';var DB_VERSION='1.0';var DB_DISPLAY_NAME='AA Recovery Database';var TABLES={USERS:'aarecovery_users',ACTIVITIES:'aarecovery_activities',SPIRITUAL_FITNESS:'aarecovery_spiritual_fitness',MEETINGS:'aarecovery_meetings',MEETING_REMINDERS:'aarecovery_meeting_reminders',NEARBY_MEMBERS:'aarecovery_nearby_members'};var initializeTables=function initializeTables(){Object.values(TABLES).forEach(function(tableKey){if(!localStorage.getItem(tableKey)){localStorage.setItem(tableKey,JSON.stringify([]));}});console.log('Web localStorage tables initialized');};var getTableData=function getTableData(tableKey){try{return JSON.parse(localStorage.getItem(tableKey))||[];}catch(error){console.error(`Error reading from ${tableKey}:`,error);return[];}};var saveTableData=function saveTableData(tableKey,data){try{localStorage.setItem(tableKey,JSON.stringify(data));return true;}catch(error){console.error(`Error writing to ${tableKey}:`,error);return false;}};var initDatabase=exports.initDatabase=function(){var _ref=(0,_asyncToGenerator2.default)(function*(){console.log('Initializing web localStorage database...');try{initializeTables();console.log('Web database initialized successfully');return{isInitialized:true};}catch(error){console.error('Error initializing web database:',error);throw error;}});return function initDatabase(){return _ref.apply(this,arguments);};}();var closeDatabase=exports.closeDatabase=function(){var _ref2=(0,_asyncToGenerator2.default)(function*(){console.log('Web database connection closed (no-op)');});return function closeDatabase(){return _ref2.apply(this,arguments);};}();var executeSql=exports.executeSql=function(){var _ref3=(0,_asyncToGenerator2.default)(function*(query){var params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];console.log('Web executeSql called:',query,params);var queryLower=query.toLowerCase();if(queryLower.includes('create table')){return{rows:{length:0}};}else if(queryLower.includes('select')&&queryLower.includes('from')){var tableMatch=query.match(/from\\s+(\\w+)/i);if(!tableMatch){throw new Error('Invalid SELECT query: table not specified');}var tableName=tableMatch[1].toLowerCase();var tableKey=Object.values(TABLES).find(function(key){return key.toLowerCase().includes(tableName);});if(!tableKey){throw new Error(`Unknown table: ${tableName}`);}var data=getTableData(tableKey);var filteredData=data;if(queryLower.includes('where')){var whereCondition=query.match(/where\\s+(.*?)(?:order by|limit|$)/i);if(whereCondition&&whereCondition[1]){var condition=whereCondition[1].trim();if(condition.includes('id = ?')&&params.length>0){var idValue=params[0];filteredData=data.filter(function(item){return item.id===idValue;});}else if(condition.includes('user_id = ?')&&params.length>0){var userIdValue=params[0];filteredData=data.filter(function(item){return item.user_id===userIdValue;});}}}if(queryLower.includes('order by')){var orderMatch=query.match(/order by\\s+(.*?)(?:limit|$)/i);if(orderMatch&&orderMatch[1]){var orderParts=orderMatch[1].trim().split(/\\s+/);var orderField=orderParts[0];var orderDesc=orderParts.length>1&&orderParts[1].toLowerCase()==='desc';filteredData.sort(function(a,b){if(orderDesc){return a[orderField]>b[orderField]?-1:1;}return a[orderField]>b[orderField]?1:-1;});}}if(queryLower.includes('limit')&&params.length>0){var limitMatch=query.match(/limit\\s+\\?/i);if(limitMatch){var limitValue=parseInt(params[params.length-1],10);if(!isNaN(limitValue)){filteredData=filteredData.slice(0,limitValue);}}}var rows={length:filteredData.length,item:function item(index){return filteredData[index];},_array:filteredData};return{rows:rows};}else if(queryLower.includes('insert into')){var _tableMatch=query.match(/insert into\\s+(\\w+)/i);if(!_tableMatch){throw new Error('Invalid INSERT query: table not specified');}var _tableName=_tableMatch[1].toLowerCase();var _tableKey=Object.values(TABLES).find(function(key){return key.toLowerCase().includes(_tableName);});if(!_tableKey){throw new Error(`Unknown table: ${_tableName}`);}var columnsMatch=query.match(/\\(([^)]+)\\)/);if(!columnsMatch){throw new Error('Invalid INSERT query: columns not specified');}var columns=columnsMatch[1].split(',').map(function(col){return col.trim();});var newObject={};columns.forEach(function(col,index){newObject[col]=params[index];});var tableData=getTableData(_tableKey);tableData.push(newObject);saveTableData(_tableKey,tableData);return{insertId:newObject.id};}else if(queryLower.includes('update')){var _tableMatch2=query.match(/update\\s+(\\w+)/i);if(!_tableMatch2){throw new Error('Invalid UPDATE query: table not specified');}var _tableName2=_tableMatch2[1].toLowerCase();var _tableKey2=Object.values(TABLES).find(function(key){return key.toLowerCase().includes(_tableName2);});if(!_tableKey2){throw new Error(`Unknown table: ${_tableName2}`);}var _tableData=getTableData(_tableKey2);var setMatch=query.match(/set\\s+(.*?)\\s+where/i);if(!setMatch){throw new Error('Invalid UPDATE query: SET clause not found');}var setClauses=setMatch[1].split(',').map(function(clause){return clause.trim();});var updateFields=setClauses.map(function(clause){return clause.split('=')[0].trim();});var rowsAffected=0;var _idValue=params[params.length-1];var updatedData=_tableData.map(function(item){if(item.id===_idValue){var updatedItem=Object.assign({},item);updateFields.forEach(function(field,index){updatedItem[field]=params[index];});rowsAffected++;return updatedItem;}return item;});saveTableData(_tableKey2,updatedData);return{rowsAffected:rowsAffected};}else if(queryLower.includes('delete')){var _tableMatch3=query.match(/delete from\\s+(\\w+)/i);if(!_tableMatch3){throw new Error('Invalid DELETE query: table not specified');}var _tableName3=_tableMatch3[1].toLowerCase();var _tableKey3=Object.values(TABLES).find(function(key){return key.toLowerCase().includes(_tableName3);});if(!_tableKey3){throw new Error(`Unknown table: ${_tableName3}`);}var _tableData2=getTableData(_tableKey3);var _idValue2=params[0];var _filteredData=_tableData2.filter(function(item){return item.id!==_idValue2;});var _rowsAffected=_tableData2.length-_filteredData.length;saveTableData(_tableKey3,_filteredData);return{rowsAffected:_rowsAffected};}throw new Error(`Unsupported query in web database: ${query}`);});return function executeSql(_x){return _ref3.apply(this,arguments);};}();var getAll=exports.getAll=function(){var _ref4=(0,_asyncToGenerator2.default)(function*(table){try{var tableKey=Object.values(TABLES).find(function(key){return key.toLowerCase().includes(table.toLowerCase());});if(!tableKey){throw new Error(`Unknown table: ${table}`);}return getTableData(tableKey);}catch(error){console.error(`Error getting all rows from ${table}:`,error);throw error;}});return function getAll(_x2){return _ref4.apply(this,arguments);};}();var getById=exports.getById=function(){var _ref5=(0,_asyncToGenerator2.default)(function*(table,id){try{var tableKey=Object.values(TABLES).find(function(key){return key.toLowerCase().includes(table.toLowerCase());});if(!tableKey){throw new Error(`Unknown table: ${table}`);}var tableData=getTableData(tableKey);return tableData.find(function(item){return item.id===id;})||null;}catch(error){console.error(`Error getting row by id from ${table}:`,error);throw error;}});return function getById(_x3,_x4){return _ref5.apply(this,arguments);};}();var insert=exports.insert=function(){var _ref6=(0,_asyncToGenerator2.default)(function*(table,data){try{var tableKey=Object.values(TABLES).find(function(key){return key.toLowerCase().includes(table.toLowerCase());});if(!tableKey){throw new Error(`Unknown table: ${table}`);}var tableData=getTableData(tableKey);tableData.push(data);saveTableData(tableKey,tableData);return data.id;}catch(error){console.error(`Error inserting into ${table}:`,error);throw error;}});return function insert(_x5,_x6){return _ref6.apply(this,arguments);};}();var update=exports.update=function(){var _ref7=(0,_asyncToGenerator2.default)(function*(table,id,data){try{var tableKey=Object.values(TABLES).find(function(key){return key.toLowerCase().includes(table.toLowerCase());});if(!tableKey){throw new Error(`Unknown table: ${table}`);}var tableData=getTableData(tableKey);var rowsAffected=0;var updatedData=tableData.map(function(item){if(item.id===id){rowsAffected++;return Object.assign({},item,data);}return item;});saveTableData(tableKey,updatedData);return rowsAffected;}catch(error){console.error(`Error updating ${table}:`,error);throw error;}});return function update(_x7,_x8,_x9){return _ref7.apply(this,arguments);};}();var deleteById=exports.deleteById=function(){var _ref8=(0,_asyncToGenerator2.default)(function*(table,id){try{var tableKey=Object.values(TABLES).find(function(key){return key.toLowerCase().includes(table.toLowerCase());});if(!tableKey){throw new Error(`Unknown table: ${table}`);}var tableData=getTableData(tableKey);var filteredData=tableData.filter(function(item){return item.id!==id;});var rowsAffected=tableData.length-filteredData.length;saveTableData(tableKey,filteredData);return rowsAffected;}catch(error){console.error(`Error deleting from ${table}:`,error);throw error;}});return function deleteById(_x0,_x1){return _ref8.apply(this,arguments);};}();var calculateDistance=exports.calculateDistance=function calculateDistance(lat1,lon1,lat2,lon2){if(lat1===lat2&&lon1===lon2){return 0;}var radlat1=Math.PI*lat1/180;var radlat2=Math.PI*lat2/180;var theta=lon1-lon2;var radtheta=Math.PI*theta/180;var dist=Math.sin(radlat1)*Math.sin(radlat2)+Math.cos(radlat1)*Math.cos(radlat2)*Math.cos(radtheta);if(dist>1){dist=1;}dist=Math.acos(dist);dist=dist*180/Math.PI;dist=dist*60*1.1515;return dist;};var calculateSobrietyDays=exports.calculateSobrietyDays=function calculateSobrietyDays(sobrietyDate){if(!sobrietyDate)return 0;var start=new Date(sobrietyDate);var today=new Date();start.setHours(0,0,0,0);today.setHours(0,0,0,0);var diffTime=Math.abs(today-start);var diffDays=Math.floor(diffTime/(1000*60*60*24));return diffDays;};var calculateSobrietyYears=exports.calculateSobrietyYears=function calculateSobrietyYears(sobrietyDate){var decimalPlaces=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;var days=calculateSobrietyDays(sobrietyDate);var years=days/365.25;return parseFloat(years.toFixed(decimalPlaces));};var userOperations=exports.userOperations={createUser:function(){var _createUser=(0,_asyncToGenerator2.default)(function*(userData){var now=new Date().toISOString();var userId=userData.id||`user_${Date.now()}`;var data={id:userId,name:userData.name||'',sobriety_date:userData.sobrietyDate||null,home_group:userData.homeGroup||'',phone:userData.phone||'',email:userData.email||'',sponsor_id:userData.sponsorId||null,privacy_settings:JSON.stringify(userData.privacySettings||{}),created_at:now,updated_at:now};yield insert('users',data);return userId;});function createUser(_x10){return _createUser.apply(this,arguments);}return createUser;}(),getUserById:function(){var _getUserById=(0,_asyncToGenerator2.default)(function*(userId){var user=yield getById('users',userId);if(user){user.privacySettings=user.privacy_settings?JSON.parse(user.privacy_settings):{};return user;}return null;});function getUserById(_x11){return _getUserById.apply(this,arguments);}return getUserById;}(),updateUser:function(){var _updateUser=(0,_asyncToGenerator2.default)(function*(userId,userData){var updates={updated_at:new Date().toISOString()};if(userData.name)updates.name=userData.name;if(userData.sobrietyDate)updates.sobriety_date=userData.sobrietyDate;if(userData.homeGroup)updates.home_group=userData.homeGroup;if(userData.phone)updates.phone=userData.phone;if(userData.email)updates.email=userData.email;if(userData.sponsorId!==undefined)updates.sponsor_id=userData.sponsorId;if(userData.privacySettings){updates.privacy_settings=JSON.stringify(userData.privacySettings);}return yield update('users',userId,updates);});function updateUser(_x12,_x13){return _updateUser.apply(this,arguments);}return updateUser;}()};var activityOperations=exports.activityOperations={createActivity:function(){var _createActivity=(0,_asyncToGenerator2.default)(function*(activityData){var now=new Date().toISOString();var activityId=activityData.id||`activity_${Date.now()}`;var data={id:activityId,user_id:activityData.userId,type:activityData.type,date:activityData.date||now,duration:activityData.duration||0,notes:activityData.notes||'',created_at:now};yield insert('activities',data);return activityId;});function createActivity(_x14){return _createActivity.apply(this,arguments);}return createActivity;}(),getUserActivities:function(){var _getUserActivities=(0,_asyncToGenerator2.default)(function*(userId){try{var results=yield executeSql('SELECT * FROM activities WHERE user_id = ? ORDER BY date DESC',[userId]);return results.rows._array||[];}catch(error){console.error('Error getting user activities:',error);throw error;}});function getUserActivities(_x15){return _getUserActivities.apply(this,arguments);}return getUserActivities;}(),getRecentActivities:function(){var _getRecentActivities=(0,_asyncToGenerator2.default)(function*(userId){var limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;try{var results=yield executeSql('SELECT * FROM activities WHERE user_id = ? ORDER BY date DESC LIMIT ?',[userId,limit]);return results.rows._array||[];}catch(error){console.error('Error getting recent activities:',error);throw error;}});function getRecentActivities(_x16){return _getRecentActivities.apply(this,arguments);}return getRecentActivities;}(),deleteActivity:function(){var _deleteActivity=(0,_asyncToGenerator2.default)(function*(activityId){return yield deleteById('activities',activityId);});function deleteActivity(_x17){return _deleteActivity.apply(this,arguments);}return deleteActivity;}()};var spiritualFitnessOperations=exports.spiritualFitnessOperations={calculateSpiritualFitness:function(){var _calculateSpiritualFitness=(0,_asyncToGenerator2.default)(function*(userId){try{var thirtyDaysAgo=new Date();thirtyDaysAgo.setDate(thirtyDaysAgo.getDate()-30);var results=yield executeSql('SELECT * FROM activities WHERE user_id = ? AND date >= ? ORDER BY date DESC',[userId,thirtyDaysAgo.toISOString()]);var activities=results.rows._array||[];var scores={prayer:0,meditation:0,reading:0,meeting:0,service:0};activities.forEach(function(activity){var type=activity.type.toLowerCase();var duration=activity.duration||0;if(type.includes('prayer')){scores.prayer+=duration/10;}else if(type.includes('meditation')){scores.meditation+=duration/15;}else if(type.includes('reading')){scores.reading+=duration/20;}else if(type.includes('meeting')){scores.meeting+=1;}else if(type.includes('service')){scores.service+=duration/30;}});Object.keys(scores).forEach(function(key){scores[key]=Math.min(10,scores[key]);});var totalScore=Object.values(scores).reduce(function(sum,score){return sum+score;},0);var finalScore=parseFloat((totalScore/50*100).toFixed(2));var now=new Date().toISOString();var fitnessId=`sf_${Date.now()}`;var data={id:fitnessId,user_id:userId,score:finalScore,prayer_score:scores.prayer,meditation_score:scores.meditation,reading_score:scores.reading,meeting_score:scores.meeting,service_score:scores.service,calculated_at:now};yield insert('spiritual_fitness',data);return{score:finalScore,details:scores,calculatedAt:now};}catch(error){console.error('Error calculating spiritual fitness:',error);throw error;}});function calculateSpiritualFitness(_x18){return _calculateSpiritualFitness.apply(this,arguments);}return calculateSpiritualFitness;}()};var meetingOperations=exports.meetingOperations={createMeeting:function(){var _createMeeting=(0,_asyncToGenerator2.default)(function*(meetingData){var now=new Date().toISOString();var meetingId=meetingData.id||`meeting_${Date.now()}`;var data={id:meetingId,name:meetingData.name||'',day:meetingData.day||'',time:meetingData.time||'',location:meetingData.location||'',address:meetingData.address||'',city:meetingData.city||'',state:meetingData.state||'',zip:meetingData.zip||'',type:meetingData.type||'',notes:meetingData.notes||'',shared:meetingData.shared===true?1:0,created_by:meetingData.createdBy||null,created_at:now,updated_at:now};yield insert('meetings',data);return meetingId;});function createMeeting(_x19){return _createMeeting.apply(this,arguments);}return createMeeting;}(),getSharedMeetings:function(){var _getSharedMeetings=(0,_asyncToGenerator2.default)(function*(){try{var results=yield executeSql('SELECT * FROM meetings WHERE shared = ? ORDER BY day, time',[1]);return results.rows._array||[];}catch(error){console.error('Error getting shared meetings:',error);throw error;}});function getSharedMeetings(){return _getSharedMeetings.apply(this,arguments);}return getSharedMeetings;}(),getUserMeetings:function(){var _getUserMeetings=(0,_asyncToGenerator2.default)(function*(userId){try{var results=yield executeSql('SELECT * FROM meetings WHERE created_by = ? ORDER BY day, time',[userId]);return results.rows._array||[];}catch(error){console.error('Error getting user meetings:',error);throw error;}});function getUserMeetings(_x20){return _getUserMeetings.apply(this,arguments);}return getUserMeetings;}()};var reminderOperations=exports.reminderOperations={createReminder:function(){var _createReminder=(0,_asyncToGenerator2.default)(function*(reminderData){var now=new Date().toISOString();var reminderId=reminderData.id||`reminder_${Date.now()}`;var data={id:reminderId,meeting_id:reminderData.meetingId,user_id:reminderData.userId,reminder_time:reminderData.reminderTime||30,notification_id:reminderData.notificationId||null,calendar_event_id:reminderData.calendarEventId||null,created_at:now};yield insert('meeting_reminders',data);return reminderId;});function createReminder(_x21){return _createReminder.apply(this,arguments);}return createReminder;}(),getUserReminders:function(){var _getUserReminders=(0,_asyncToGenerator2.default)(function*(userId){try{var results=yield executeSql('SELECT r.*, m.name, m.day, m.time, m.location '+'FROM meeting_reminders r '+'JOIN meetings m ON r.meeting_id = m.id '+'WHERE r.user_id = ? '+'ORDER BY m.day, m.time',[userId]);return results.rows._array||[];}catch(error){console.error('Error getting user reminders:',error);throw error;}});function getUserReminders(_x22){return _getUserReminders.apply(this,arguments);}return getUserReminders;}()};var nearbyMembersOperations=exports.nearbyMembersOperations={saveMemberDiscovery:function(){var _saveMemberDiscovery=(0,_asyncToGenerator2.default)(function*(discoveryData){var now=new Date().toISOString();var discoveryId=discoveryData.id||`discovery_${Date.now()}`;var data={id:discoveryId,user_id:discoveryData.userId,discovered_user_id:discoveryData.discoveredUserId,discovery_type:discoveryData.discoveryType||'bluetooth',distance:discoveryData.distance||0,last_seen:now};yield insert('nearby_members',data);return discoveryId;});function saveMemberDiscovery(_x23){return _saveMemberDiscovery.apply(this,arguments);}return saveMemberDiscovery;}(),getNearbyMembers:function(){var _getNearbyMembers=(0,_asyncToGenerator2.default)(function*(userId){try{var results=yield executeSql('SELECT d.*, u.name '+'FROM nearby_members d '+'JOIN users u ON d.discovered_user_id = u.id '+'WHERE d.user_id = ? '+'ORDER BY d.last_seen DESC',[userId]);return results.rows._array||[];}catch(error){console.error('Error getting nearby members:',error);throw error;}});function getNearbyMembers(_x24){return _getNearbyMembers.apply(this,arguments);}return getNearbyMembers;}()};var _default=exports.default={initDatabase:initDatabase,closeDatabase:closeDatabase,executeSql:executeSql,getAll:getAll,getById:getById,insert:insert,update:update,deleteById:deleteById,calculateDistance:calculateDistance,calculateSobrietyDays:calculateSobrietyDays,calculateSobrietyYears:calculateSobrietyYears,userOperations:userOperations,activityOperations:activityOperations,spiritualFitnessOperations:spiritualFitnessOperations,meetingOperations:meetingOperations,reminderOperations:reminderOperations,nearbyMembersOperations:nearbyMembersOperations};","map":{"version":3,"names":["DB_NAME","DB_VERSION","DB_DISPLAY_NAME","TABLES","USERS","ACTIVITIES","SPIRITUAL_FITNESS","MEETINGS","MEETING_REMINDERS","NEARBY_MEMBERS","initializeTables","Object","values","forEach","tableKey","localStorage","getItem","setItem","JSON","stringify","console","log","getTableData","parse","error","saveTableData","data","initDatabase","exports","_ref","_asyncToGenerator2","default","isInitialized","apply","arguments","closeDatabase","_ref2","executeSql","_ref3","query","params","length","undefined","queryLower","toLowerCase","includes","rows","tableMatch","match","Error","tableName","find","key","filteredData","whereCondition","condition","trim","idValue","filter","item","id","userIdValue","user_id","orderMatch","orderParts","split","orderField","orderDesc","sort","a","b","limitMatch","limitValue","parseInt","isNaN","slice","index","_array","columnsMatch","columns","map","col","newObject","tableData","push","insertId","setMatch","setClauses","clause","updateFields","rowsAffected","updatedData","updatedItem","assign","field","_x","getAll","_ref4","table","_x2","getById","_ref5","_x3","_x4","insert","_ref6","_x5","_x6","update","_ref7","_x7","_x8","_x9","deleteById","_ref8","_x0","_x1","calculateDistance","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","calculateSobrietyDays","sobrietyDate","start","Date","today","setHours","diffTime","abs","diffDays","floor","calculateSobrietyYears","decimalPlaces","days","years","parseFloat","toFixed","userOperations","createUser","_createUser","userData","now","toISOString","userId","name","sobriety_date","home_group","homeGroup","phone","email","sponsor_id","sponsorId","privacy_settings","privacySettings","created_at","updated_at","_x10","getUserById","_getUserById","user","_x11","updateUser","_updateUser","updates","_x12","_x13","activityOperations","createActivity","_createActivity","activityData","activityId","type","date","duration","notes","_x14","getUserActivities","_getUserActivities","results","_x15","getRecentActivities","_getRecentActivities","limit","_x16","deleteActivity","_deleteActivity","_x17","spiritualFitnessOperations","calculateSpiritualFitness","_calculateSpiritualFitness","thirtyDaysAgo","setDate","getDate","activities","scores","prayer","meditation","reading","meeting","service","activity","keys","min","totalScore","reduce","sum","score","finalScore","fitnessId","prayer_score","meditation_score","reading_score","meeting_score","service_score","calculated_at","details","calculatedAt","_x18","meetingOperations","createMeeting","_createMeeting","meetingData","meetingId","day","time","location","address","city","state","zip","shared","created_by","createdBy","_x19","getSharedMeetings","_getSharedMeetings","getUserMeetings","_getUserMeetings","_x20","reminderOperations","createReminder","_createReminder","reminderData","reminderId","meeting_id","reminder_time","reminderTime","notification_id","notificationId","calendar_event_id","calendarEventId","_x21","getUserReminders","_getUserReminders","_x22","nearbyMembersOperations","saveMemberDiscovery","_saveMemberDiscovery","discoveryData","discoveryId","discovered_user_id","discoveredUserId","discovery_type","discoveryType","distance","last_seen","_x23","getNearbyMembers","_getNearbyMembers","_x24","_default"],"sources":["/home/runner/workspace/src/utils/database.web.js"],"sourcesContent":["/**\n * Web-specific implementation of database operations using localStorage\n * This is used automatically when running on web platforms\n */\n\n// Define database schema\nconst DB_NAME = 'aarecovery.db';\nconst DB_VERSION = '1.0';\nconst DB_DISPLAY_NAME = 'AA Recovery Database';\n\n// Tables storage keys\nconst TABLES = {\n  USERS: 'aarecovery_users',\n  ACTIVITIES: 'aarecovery_activities',\n  SPIRITUAL_FITNESS: 'aarecovery_spiritual_fitness',\n  MEETINGS: 'aarecovery_meetings',\n  MEETING_REMINDERS: 'aarecovery_meeting_reminders',\n  NEARBY_MEMBERS: 'aarecovery_nearby_members'\n};\n\n// Initialize empty tables if they don't exist\nconst initializeTables = () => {\n  Object.values(TABLES).forEach(tableKey => {\n    if (!localStorage.getItem(tableKey)) {\n      localStorage.setItem(tableKey, JSON.stringify([]));\n    }\n  });\n  \n  console.log('Web localStorage tables initialized');\n};\n\n// Helper to get all items from a table\nconst getTableData = (tableKey) => {\n  try {\n    return JSON.parse(localStorage.getItem(tableKey)) || [];\n  } catch (error) {\n    console.error(`Error reading from ${tableKey}:`, error);\n    return [];\n  }\n};\n\n// Helper to save data to a table\nconst saveTableData = (tableKey, data) => {\n  try {\n    localStorage.setItem(tableKey, JSON.stringify(data));\n    return true;\n  } catch (error) {\n    console.error(`Error writing to ${tableKey}:`, error);\n    return false;\n  }\n};\n\n/**\n * Initialize the database\n * @returns {Promise<Object>} - Database object\n */\nexport const initDatabase = async () => {\n  console.log('Initializing web localStorage database...');\n  \n  try {\n    // Initialize tables\n    initializeTables();\n    \n    console.log('Web database initialized successfully');\n    return { isInitialized: true };\n  } catch (error) {\n    console.error('Error initializing web database:', error);\n    throw error;\n  }\n};\n\n/**\n * Close the database connection (no-op for web)\n */\nexport const closeDatabase = async () => {\n  console.log('Web database connection closed (no-op)');\n};\n\n/**\n * Execute a SQL-like query (simplified for localStorage)\n * This is a stub that provides minimal compatibility with the SQLite version\n * Only supports very basic operations\n */\nexport const executeSql = async (query, params = []) => {\n  console.log('Web executeSql called:', query, params);\n  \n  // Parse the query to determine operation and table\n  const queryLower = query.toLowerCase();\n  \n  // Very basic query parsing\n  if (queryLower.includes('create table')) {\n    // Create table is handled by initialization\n    return { rows: { length: 0 } };\n  } else if (queryLower.includes('select') && queryLower.includes('from')) {\n    // Basic SELECT query\n    const tableMatch = query.match(/from\\s+(\\w+)/i);\n    if (!tableMatch) {\n      throw new Error('Invalid SELECT query: table not specified');\n    }\n    \n    const tableName = tableMatch[1].toLowerCase();\n    const tableKey = Object.values(TABLES).find(key => \n      key.toLowerCase().includes(tableName)\n    );\n    \n    if (!tableKey) {\n      throw new Error(`Unknown table: ${tableName}`);\n    }\n    \n    const data = getTableData(tableKey);\n    \n    // Handle WHERE clause (very basic implementation)\n    let filteredData = data;\n    if (queryLower.includes('where')) {\n      const whereCondition = query.match(/where\\s+(.*?)(?:order by|limit|$)/i);\n      if (whereCondition && whereCondition[1]) {\n        const condition = whereCondition[1].trim();\n        \n        // Handle id = ? condition\n        if (condition.includes('id = ?') && params.length > 0) {\n          const idValue = params[0];\n          filteredData = data.filter(item => item.id === idValue);\n        } \n        // Handle user_id = ? condition\n        else if (condition.includes('user_id = ?') && params.length > 0) {\n          const userIdValue = params[0];\n          filteredData = data.filter(item => item.user_id === userIdValue);\n        }\n      }\n    }\n    \n    // Handle ORDER BY (very basic implementation)\n    if (queryLower.includes('order by')) {\n      const orderMatch = query.match(/order by\\s+(.*?)(?:limit|$)/i);\n      if (orderMatch && orderMatch[1]) {\n        const orderParts = orderMatch[1].trim().split(/\\s+/);\n        const orderField = orderParts[0];\n        const orderDesc = orderParts.length > 1 && orderParts[1].toLowerCase() === 'desc';\n        \n        filteredData.sort((a, b) => {\n          if (orderDesc) {\n            return a[orderField] > b[orderField] ? -1 : 1;\n          }\n          return a[orderField] > b[orderField] ? 1 : -1;\n        });\n      }\n    }\n    \n    // Handle LIMIT\n    if (queryLower.includes('limit') && params.length > 0) {\n      const limitMatch = query.match(/limit\\s+\\?/i);\n      if (limitMatch) {\n        const limitValue = parseInt(params[params.length - 1], 10);\n        if (!isNaN(limitValue)) {\n          filteredData = filteredData.slice(0, limitValue);\n        }\n      }\n    }\n    \n    // Create a rows object that mimics SQLite results\n    const rows = {\n      length: filteredData.length,\n      item: (index) => filteredData[index],\n      _array: filteredData\n    };\n    \n    return { rows };\n  } else if (queryLower.includes('insert into')) {\n    // Handle INSERT operation\n    const tableMatch = query.match(/insert into\\s+(\\w+)/i);\n    if (!tableMatch) {\n      throw new Error('Invalid INSERT query: table not specified');\n    }\n    \n    const tableName = tableMatch[1].toLowerCase();\n    const tableKey = Object.values(TABLES).find(key => \n      key.toLowerCase().includes(tableName)\n    );\n    \n    if (!tableKey) {\n      throw new Error(`Unknown table: ${tableName}`);\n    }\n    \n    // Extract column names from query\n    const columnsMatch = query.match(/\\(([^)]+)\\)/);\n    if (!columnsMatch) {\n      throw new Error('Invalid INSERT query: columns not specified');\n    }\n    \n    const columns = columnsMatch[1].split(',').map(col => col.trim());\n    \n    // Create new object from columns and params\n    const newObject = {};\n    columns.forEach((col, index) => {\n      newObject[col] = params[index];\n    });\n    \n    // Add to table\n    const tableData = getTableData(tableKey);\n    tableData.push(newObject);\n    saveTableData(tableKey, tableData);\n    \n    return { insertId: newObject.id };\n  } else if (queryLower.includes('update')) {\n    // Handle UPDATE operation\n    const tableMatch = query.match(/update\\s+(\\w+)/i);\n    if (!tableMatch) {\n      throw new Error('Invalid UPDATE query: table not specified');\n    }\n    \n    const tableName = tableMatch[1].toLowerCase();\n    const tableKey = Object.values(TABLES).find(key => \n      key.toLowerCase().includes(tableName)\n    );\n    \n    if (!tableKey) {\n      throw new Error(`Unknown table: ${tableName}`);\n    }\n    \n    // Get table data\n    const tableData = getTableData(tableKey);\n    \n    // Extract SET clause and parse field updates\n    const setMatch = query.match(/set\\s+(.*?)\\s+where/i);\n    if (!setMatch) {\n      throw new Error('Invalid UPDATE query: SET clause not found');\n    }\n    \n    const setClauses = setMatch[1].split(',').map(clause => clause.trim());\n    const updateFields = setClauses.map(clause => clause.split('=')[0].trim());\n    \n    // Find the object to update\n    let rowsAffected = 0;\n    const idValue = params[params.length - 1]; // ID is the last parameter\n    \n    const updatedData = tableData.map(item => {\n      if (item.id === idValue) {\n        const updatedItem = { ...item };\n        \n        // Apply updates\n        updateFields.forEach((field, index) => {\n          updatedItem[field] = params[index];\n        });\n        \n        rowsAffected++;\n        return updatedItem;\n      }\n      return item;\n    });\n    \n    saveTableData(tableKey, updatedData);\n    \n    return { rowsAffected };\n  } else if (queryLower.includes('delete')) {\n    // Handle DELETE operation\n    const tableMatch = query.match(/delete from\\s+(\\w+)/i);\n    if (!tableMatch) {\n      throw new Error('Invalid DELETE query: table not specified');\n    }\n    \n    const tableName = tableMatch[1].toLowerCase();\n    const tableKey = Object.values(TABLES).find(key => \n      key.toLowerCase().includes(tableName)\n    );\n    \n    if (!tableKey) {\n      throw new Error(`Unknown table: ${tableName}`);\n    }\n    \n    // Get table data\n    const tableData = getTableData(tableKey);\n    \n    // Find items to delete\n    const idValue = params[0];\n    const filteredData = tableData.filter(item => item.id !== idValue);\n    \n    const rowsAffected = tableData.length - filteredData.length;\n    saveTableData(tableKey, filteredData);\n    \n    return { rowsAffected };\n  }\n  \n  throw new Error(`Unsupported query in web database: ${query}`);\n};\n\n/**\n * Get all rows from a table\n * @param {string} table - Table name\n * @returns {Promise<Array>} - Array of rows\n */\nexport const getAll = async (table) => {\n  try {\n    const tableKey = Object.values(TABLES).find(key => \n      key.toLowerCase().includes(table.toLowerCase())\n    );\n    \n    if (!tableKey) {\n      throw new Error(`Unknown table: ${table}`);\n    }\n    \n    return getTableData(tableKey);\n  } catch (error) {\n    console.error(`Error getting all rows from ${table}:`, error);\n    throw error;\n  }\n};\n\n/**\n * Get a row by ID\n * @param {string} table - Table name\n * @param {string} id - Row ID\n * @returns {Promise<Object|null>} - Row object or null if not found\n */\nexport const getById = async (table, id) => {\n  try {\n    const tableKey = Object.values(TABLES).find(key => \n      key.toLowerCase().includes(table.toLowerCase())\n    );\n    \n    if (!tableKey) {\n      throw new Error(`Unknown table: ${table}`);\n    }\n    \n    const tableData = getTableData(tableKey);\n    return tableData.find(item => item.id === id) || null;\n  } catch (error) {\n    console.error(`Error getting row by id from ${table}:`, error);\n    throw error;\n  }\n};\n\n/**\n * Insert a row into a table\n * @param {string} table - Table name\n * @param {Object} data - Data to insert\n * @returns {Promise<string>} - Row ID of the inserted row\n */\nexport const insert = async (table, data) => {\n  try {\n    const tableKey = Object.values(TABLES).find(key => \n      key.toLowerCase().includes(table.toLowerCase())\n    );\n    \n    if (!tableKey) {\n      throw new Error(`Unknown table: ${table}`);\n    }\n    \n    const tableData = getTableData(tableKey);\n    tableData.push(data);\n    saveTableData(tableKey, tableData);\n    \n    return data.id;\n  } catch (error) {\n    console.error(`Error inserting into ${table}:`, error);\n    throw error;\n  }\n};\n\n/**\n * Update a row in a table\n * @param {string} table - Table name\n * @param {string} id - Row ID\n * @param {Object} data - Data to update\n * @returns {Promise<number>} - Number of rows affected\n */\nexport const update = async (table, id, data) => {\n  try {\n    const tableKey = Object.values(TABLES).find(key => \n      key.toLowerCase().includes(table.toLowerCase())\n    );\n    \n    if (!tableKey) {\n      throw new Error(`Unknown table: ${table}`);\n    }\n    \n    const tableData = getTableData(tableKey);\n    let rowsAffected = 0;\n    \n    const updatedData = tableData.map(item => {\n      if (item.id === id) {\n        rowsAffected++;\n        return { ...item, ...data };\n      }\n      return item;\n    });\n    \n    saveTableData(tableKey, updatedData);\n    return rowsAffected;\n  } catch (error) {\n    console.error(`Error updating ${table}:`, error);\n    throw error;\n  }\n};\n\n/**\n * Delete a row from a table\n * @param {string} table - Table name\n * @param {string} id - Row ID\n * @returns {Promise<number>} - Number of rows affected\n */\nexport const deleteById = async (table, id) => {\n  try {\n    const tableKey = Object.values(TABLES).find(key => \n      key.toLowerCase().includes(table.toLowerCase())\n    );\n    \n    if (!tableKey) {\n      throw new Error(`Unknown table: ${table}`);\n    }\n    \n    const tableData = getTableData(tableKey);\n    const filteredData = tableData.filter(item => item.id !== id);\n    \n    const rowsAffected = tableData.length - filteredData.length;\n    saveTableData(tableKey, filteredData);\n    \n    return rowsAffected;\n  } catch (error) {\n    console.error(`Error deleting from ${table}:`, error);\n    throw error;\n  }\n};\n\n/**\n * Calculate distance between two lat/long points\n * @param {number} lat1 - Latitude of first point\n * @param {number} lon1 - Longitude of first point\n * @param {number} lat2 - Latitude of second point\n * @param {number} lon2 - Longitude of second point\n * @returns {number} - Distance in miles\n */\nexport const calculateDistance = (lat1, lon1, lat2, lon2) => {\n  if (lat1 === lat2 && lon1 === lon2) {\n    return 0;\n  }\n  \n  const radlat1 = (Math.PI * lat1) / 180;\n  const radlat2 = (Math.PI * lat2) / 180;\n  const theta = lon1 - lon2;\n  const radtheta = (Math.PI * theta) / 180;\n  \n  let dist = Math.sin(radlat1) * Math.sin(radlat2) + \n            Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n  \n  if (dist > 1) {\n    dist = 1;\n  }\n  \n  dist = Math.acos(dist);\n  dist = (dist * 180) / Math.PI;\n  dist = dist * 60 * 1.1515; // Miles\n  \n  return dist;\n};\n\n/**\n * Calculate sobriety days based on sobriety date\n * @param {string} sobrietyDate - Sobriety date in ISO format\n * @returns {number} - Number of days sober\n */\nexport const calculateSobrietyDays = (sobrietyDate) => {\n  if (!sobrietyDate) return 0;\n  \n  const start = new Date(sobrietyDate);\n  const today = new Date();\n  \n  // Reset hours to compare dates only\n  start.setHours(0, 0, 0, 0);\n  today.setHours(0, 0, 0, 0);\n  \n  const diffTime = Math.abs(today - start);\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  \n  return diffDays;\n};\n\n/**\n * Calculate sobriety years with decimal precision\n * @param {string} sobrietyDate - Sobriety date in ISO format\n * @param {number} decimalPlaces - Number of decimal places\n * @returns {number} - Years of sobriety with decimal precision\n */\nexport const calculateSobrietyYears = (sobrietyDate, decimalPlaces = 2) => {\n  const days = calculateSobrietyDays(sobrietyDate);\n  const years = days / 365.25; // Account for leap years\n  \n  return parseFloat(years.toFixed(decimalPlaces));\n};\n\n// Add all the operation objects from the native version\n// These should match the native SQLite version's API\n\n// User operations\nexport const userOperations = {\n  createUser: async (userData) => {\n    const now = new Date().toISOString();\n    const userId = userData.id || `user_${Date.now()}`;\n    \n    const data = {\n      id: userId,\n      name: userData.name || '',\n      sobriety_date: userData.sobrietyDate || null,\n      home_group: userData.homeGroup || '',\n      phone: userData.phone || '',\n      email: userData.email || '',\n      sponsor_id: userData.sponsorId || null,\n      privacy_settings: JSON.stringify(userData.privacySettings || {}),\n      created_at: now,\n      updated_at: now\n    };\n    \n    await insert('users', data);\n    return userId;\n  },\n  \n  getUserById: async (userId) => {\n    const user = await getById('users', userId);\n    \n    if (user) {\n      // Convert privacy_settings from JSON string to object\n      user.privacySettings = user.privacy_settings ? JSON.parse(user.privacy_settings) : {};\n      return user;\n    }\n    \n    return null;\n  },\n  \n  updateUser: async (userId, userData) => {\n    const updates = {\n      updated_at: new Date().toISOString()\n    };\n    \n    if (userData.name) updates.name = userData.name;\n    if (userData.sobrietyDate) updates.sobriety_date = userData.sobrietyDate;\n    if (userData.homeGroup) updates.home_group = userData.homeGroup;\n    if (userData.phone) updates.phone = userData.phone;\n    if (userData.email) updates.email = userData.email;\n    if (userData.sponsorId !== undefined) updates.sponsor_id = userData.sponsorId;\n    if (userData.privacySettings) {\n      updates.privacy_settings = JSON.stringify(userData.privacySettings);\n    }\n    \n    return await update('users', userId, updates);\n  }\n};\n\n// Activity operations\nexport const activityOperations = {\n  createActivity: async (activityData) => {\n    const now = new Date().toISOString();\n    const activityId = activityData.id || `activity_${Date.now()}`;\n    \n    const data = {\n      id: activityId,\n      user_id: activityData.userId,\n      type: activityData.type,\n      date: activityData.date || now,\n      duration: activityData.duration || 0,\n      notes: activityData.notes || '',\n      created_at: now\n    };\n    \n    await insert('activities', data);\n    return activityId;\n  },\n  \n  getUserActivities: async (userId) => {\n    try {\n      const results = await executeSql(\n        'SELECT * FROM activities WHERE user_id = ? ORDER BY date DESC',\n        [userId]\n      );\n      \n      return results.rows._array || [];\n    } catch (error) {\n      console.error('Error getting user activities:', error);\n      throw error;\n    }\n  },\n  \n  getRecentActivities: async (userId, limit = 10) => {\n    try {\n      const results = await executeSql(\n        'SELECT * FROM activities WHERE user_id = ? ORDER BY date DESC LIMIT ?',\n        [userId, limit]\n      );\n      \n      return results.rows._array || [];\n    } catch (error) {\n      console.error('Error getting recent activities:', error);\n      throw error;\n    }\n  },\n  \n  deleteActivity: async (activityId) => {\n    return await deleteById('activities', activityId);\n  }\n};\n\n// Spiritual fitness operations\nexport const spiritualFitnessOperations = {\n  calculateSpiritualFitness: async (userId) => {\n    try {\n      // Get user activities for the last 30 days\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n      \n      const results = await executeSql(\n        'SELECT * FROM activities WHERE user_id = ? AND date >= ? ORDER BY date DESC',\n        [userId, thirtyDaysAgo.toISOString()]\n      );\n      \n      const activities = results.rows._array || [];\n      \n      // Calculate scores based on activity frequency and duration\n      const scores = {\n        prayer: 0,\n        meditation: 0,\n        reading: 0,\n        meeting: 0,\n        service: 0\n      };\n      \n      // Process each activity type\n      activities.forEach(activity => {\n        const type = activity.type.toLowerCase();\n        const duration = activity.duration || 0;\n        \n        if (type.includes('prayer')) {\n          scores.prayer += duration / 10; // 10 minutes per day is ideal\n        } else if (type.includes('meditation')) {\n          scores.meditation += duration / 15; // 15 minutes per day is ideal\n        } else if (type.includes('reading')) {\n          scores.reading += duration / 20; // 20 minutes per day is ideal\n        } else if (type.includes('meeting')) {\n          scores.meeting += 1; // Each meeting counts as 1 point\n        } else if (type.includes('service')) {\n          scores.service += duration / 30; // 30 minutes per week is ideal\n        }\n      });\n      \n      // Cap each score at 10\n      Object.keys(scores).forEach(key => {\n        scores[key] = Math.min(10, scores[key]);\n      });\n      \n      // Calculate total score (max 50)\n      const totalScore = Object.values(scores).reduce((sum, score) => sum + score, 0);\n      \n      // Convert to percentage (0-100) with 2 decimal precision\n      const finalScore = parseFloat(((totalScore / 50) * 100).toFixed(2));\n      \n      // Save to database\n      const now = new Date().toISOString();\n      const fitnessId = `sf_${Date.now()}`;\n      \n      const data = {\n        id: fitnessId,\n        user_id: userId,\n        score: finalScore,\n        prayer_score: scores.prayer,\n        meditation_score: scores.meditation,\n        reading_score: scores.reading,\n        meeting_score: scores.meeting,\n        service_score: scores.service,\n        calculated_at: now\n      };\n      \n      await insert('spiritual_fitness', data);\n      \n      return {\n        score: finalScore,\n        details: scores,\n        calculatedAt: now\n      };\n    } catch (error) {\n      console.error('Error calculating spiritual fitness:', error);\n      throw error;\n    }\n  }\n};\n\n// Meeting operations\nexport const meetingOperations = {\n  createMeeting: async (meetingData) => {\n    const now = new Date().toISOString();\n    const meetingId = meetingData.id || `meeting_${Date.now()}`;\n    \n    const data = {\n      id: meetingId,\n      name: meetingData.name || '',\n      day: meetingData.day || '',\n      time: meetingData.time || '',\n      location: meetingData.location || '',\n      address: meetingData.address || '',\n      city: meetingData.city || '',\n      state: meetingData.state || '',\n      zip: meetingData.zip || '',\n      type: meetingData.type || '',\n      notes: meetingData.notes || '',\n      shared: meetingData.shared === true ? 1 : 0,\n      created_by: meetingData.createdBy || null,\n      created_at: now,\n      updated_at: now\n    };\n    \n    await insert('meetings', data);\n    return meetingId;\n  },\n  \n  getSharedMeetings: async () => {\n    try {\n      const results = await executeSql(\n        'SELECT * FROM meetings WHERE shared = ? ORDER BY day, time',\n        [1]\n      );\n      \n      return results.rows._array || [];\n    } catch (error) {\n      console.error('Error getting shared meetings:', error);\n      throw error;\n    }\n  },\n  \n  getUserMeetings: async (userId) => {\n    try {\n      const results = await executeSql(\n        'SELECT * FROM meetings WHERE created_by = ? ORDER BY day, time',\n        [userId]\n      );\n      \n      return results.rows._array || [];\n    } catch (error) {\n      console.error('Error getting user meetings:', error);\n      throw error;\n    }\n  }\n};\n\n// Reminder operations\nexport const reminderOperations = {\n  createReminder: async (reminderData) => {\n    const now = new Date().toISOString();\n    const reminderId = reminderData.id || `reminder_${Date.now()}`;\n    \n    const data = {\n      id: reminderId,\n      meeting_id: reminderData.meetingId,\n      user_id: reminderData.userId,\n      reminder_time: reminderData.reminderTime || 30,\n      notification_id: reminderData.notificationId || null,\n      calendar_event_id: reminderData.calendarEventId || null,\n      created_at: now\n    };\n    \n    await insert('meeting_reminders', data);\n    return reminderId;\n  },\n  \n  getUserReminders: async (userId) => {\n    try {\n      const results = await executeSql(\n        'SELECT r.*, m.name, m.day, m.time, m.location ' +\n        'FROM meeting_reminders r ' +\n        'JOIN meetings m ON r.meeting_id = m.id ' +\n        'WHERE r.user_id = ? ' +\n        'ORDER BY m.day, m.time',\n        [userId]\n      );\n      \n      return results.rows._array || [];\n    } catch (error) {\n      console.error('Error getting user reminders:', error);\n      throw error;\n    }\n  }\n};\n\n// Nearby members operations\nexport const nearbyMembersOperations = {\n  saveMemberDiscovery: async (discoveryData) => {\n    const now = new Date().toISOString();\n    const discoveryId = discoveryData.id || `discovery_${Date.now()}`;\n    \n    const data = {\n      id: discoveryId,\n      user_id: discoveryData.userId,\n      discovered_user_id: discoveryData.discoveredUserId,\n      discovery_type: discoveryData.discoveryType || 'bluetooth',\n      distance: discoveryData.distance || 0,\n      last_seen: now\n    };\n    \n    await insert('nearby_members', data);\n    return discoveryId;\n  },\n  \n  getNearbyMembers: async (userId) => {\n    try {\n      const results = await executeSql(\n        'SELECT d.*, u.name ' +\n        'FROM nearby_members d ' +\n        'JOIN users u ON d.discovered_user_id = u.id ' +\n        'WHERE d.user_id = ? ' +\n        'ORDER BY d.last_seen DESC',\n        [userId]\n      );\n      \n      return results.rows._array || [];\n    } catch (error) {\n      console.error('Error getting nearby members:', error);\n      throw error;\n    }\n  }\n};\n\n// Export everything\nexport default {\n  initDatabase,\n  closeDatabase,\n  executeSql,\n  getAll,\n  getById,\n  insert,\n  update,\n  deleteById,\n  calculateDistance,\n  calculateSobrietyDays,\n  calculateSobrietyYears,\n  userOperations,\n  activityOperations,\n  spiritualFitnessOperations,\n  meetingOperations,\n  reminderOperations,\n  nearbyMembersOperations\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
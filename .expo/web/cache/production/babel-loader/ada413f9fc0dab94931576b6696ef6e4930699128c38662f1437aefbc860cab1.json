{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.RadioButtonItem=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _RadioButton=_interopRequireDefault(require(\"./RadioButton\"));var _RadioButtonAndroid=_interopRequireDefault(require(\"./RadioButtonAndroid\"));var _RadioButtonGroup=require(\"./RadioButtonGroup\");var _RadioButtonIOS=_interopRequireDefault(require(\"./RadioButtonIOS\"));var _utils=require(\"./utils\");var _theming=require(\"../../core/theming\");var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}var RadioButtonItem=exports.RadioButtonItem=function RadioButtonItem(_ref){var value=_ref.value,label=_ref.label,style=_ref.style,labelStyle=_ref.labelStyle,_onPress=_ref.onPress,onLongPress=_ref.onLongPress,disabled=_ref.disabled,color=_ref.color,uncheckedColor=_ref.uncheckedColor,rippleColor=_ref.rippleColor,status=_ref.status,themeOverrides=_ref.theme,background=_ref.background,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?label:_ref$accessibilityLab,testID=_ref.testID,mode=_ref.mode,_ref$position=_ref.position,position=_ref$position===void 0?'trailing':_ref$position,_ref$labelVariant=_ref.labelVariant,labelVariant=_ref$labelVariant===void 0?'bodyLarge':_ref$labelVariant,labelMaxFontSizeMultiplier=_ref.labelMaxFontSizeMultiplier;var theme=(0,_theming.useInternalTheme)(themeOverrides);var radioButtonProps={value:value,disabled:disabled,status:status,color:color,theme:theme,uncheckedColor:uncheckedColor};var isLeading=position==='leading';var radioButton;if(mode==='android'){radioButton=React.createElement(_RadioButtonAndroid.default,radioButtonProps);}else if(mode==='ios'){radioButton=React.createElement(_RadioButtonIOS.default,radioButtonProps);}else{radioButton=React.createElement(_RadioButton.default,radioButtonProps);}var textColor=theme.isV3?theme.colors.onSurface:theme.colors.text;var disabledTextColor=theme.isV3?theme.colors.onSurfaceDisabled:theme.colors.disabled;var textAlign=isLeading?'right':'left';var computedStyle={color:disabled?disabledTextColor:textColor,textAlign:textAlign};return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer,null,function(context){var checked=(0,_utils.isChecked)({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';return React.createElement(_TouchableRipple.default,{onPress:function onPress(event){return(0,_utils.handlePress)({onPress:_onPress,onValueChange:context===null||context===void 0?void 0:context.onValueChange,value:value,event:event});},onLongPress:onLongPress,accessibilityLabel:accessibilityLabel,accessibilityRole:\"radio\",accessibilityState:{checked:checked,disabled:disabled},testID:testID,disabled:disabled,background:background,theme:theme,rippleColor:rippleColor},React.createElement(_reactNative.View,{style:[styles.container,style],pointerEvents:\"none\"},isLeading&&radioButton,React.createElement(_Text.default,{variant:labelVariant,style:[styles.label,!theme.isV3&&styles.font,computedStyle,labelStyle],maxFontSizeMultiplier:labelMaxFontSizeMultiplier},label),!isLeading&&radioButton));});};RadioButtonItem.displayName='RadioButton.Item';var _default=exports.default=RadioButtonItem;var styles=_reactNative.StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16},label:{flexShrink:1,flexGrow:1},font:{fontSize:16}});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_RadioButton","_interopRequireDefault","_RadioButtonAndroid","_RadioButtonGroup","_RadioButtonIOS","_utils","_theming","_TouchableRipple","_Text","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","RadioButtonItem","exports","_ref","value","label","style","labelStyle","onPress","onLongPress","disabled","color","uncheckedColor","rippleColor","status","themeOverrides","theme","background","_ref$accessibilityLab","accessibilityLabel","testID","mode","_ref$position","position","_ref$labelVariant","labelVariant","labelMaxFontSizeMultiplier","useInternalTheme","radioButtonProps","isLeading","radioButton","createElement","RadioButtonAndroid","RadioButtonIOS","RadioButton","textColor","isV3","colors","onSurface","text","disabledTextColor","onSurfaceDisabled","textAlign","computedStyle","RadioButtonContext","Consumer","context","checked","isChecked","contextValue","TouchableRipple","event","handlePress","onValueChange","accessibilityRole","accessibilityState","View","styles","container","pointerEvents","Text","variant","font","maxFontSizeMultiplier","displayName","_default","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/RadioButton/RadioButtonItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport RadioButton from './RadioButton';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp, MD3TypescaleKey } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Value of the radio button.\n   */\n  value: string;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Label text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  labelVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Whether `<RadioButton.Android />` or `<RadioButton.IOS />` should be used.\n   * Left undefined `<RadioButton />` will be used.\n   */\n  mode?: 'android' | 'ios';\n  /**\n   * Radio button control position.\n   */\n  position?: 'leading' | 'trailing';\n};\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <RadioButton.Item label=\"First item\" value=\"first\" />\n *       <RadioButton.Item label=\"Second item\" value=\"second\" />\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst RadioButtonItem = ({\n  value,\n  label,\n  style,\n  labelStyle,\n  onPress,\n  onLongPress,\n  disabled,\n  color,\n  uncheckedColor,\n  rippleColor,\n  status,\n  theme: themeOverrides,\n  background,\n  accessibilityLabel = label,\n  testID,\n  mode,\n  position = 'trailing',\n  labelVariant = 'bodyLarge',\n  labelMaxFontSizeMultiplier,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const radioButtonProps = {\n    value,\n    disabled,\n    status,\n    color,\n    theme,\n    uncheckedColor,\n  };\n  const isLeading = position === 'leading';\n  let radioButton: any;\n\n  if (mode === 'android') {\n    radioButton = <RadioButtonAndroid {...radioButtonProps} />;\n  } else if (mode === 'ios') {\n    radioButton = <RadioButtonIOS {...radioButtonProps} />;\n  } else {\n    radioButton = <RadioButton {...radioButtonProps} />;\n  }\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  const disabledTextColor = theme.isV3\n    ? theme.colors.onSurfaceDisabled\n    : theme.colors.disabled;\n  const textAlign = isLeading ? 'right' : 'left';\n\n  const computedStyle = {\n    color: disabled ? disabledTextColor : textColor,\n    textAlign,\n  } as TextStyle;\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n        return (\n          <TouchableRipple\n            onPress={(event) =>\n              handlePress({\n                onPress: onPress,\n                onValueChange: context?.onValueChange,\n                value,\n                event,\n              })\n            }\n            onLongPress={onLongPress}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityRole=\"radio\"\n            accessibilityState={{\n              checked,\n              disabled,\n            }}\n            testID={testID}\n            disabled={disabled}\n            background={background}\n            theme={theme}\n            rippleColor={rippleColor}\n          >\n            <View style={[styles.container, style]} pointerEvents=\"none\">\n              {isLeading && radioButton}\n              <Text\n                variant={labelVariant}\n                style={[\n                  styles.label,\n                  !theme.isV3 && styles.font,\n                  computedStyle,\n                  labelStyle,\n                ]}\n                maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n              >\n                {label}\n              </Text>\n              {!isLeading && radioButton}\n            </View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonItem.displayName = 'RadioButton.Item';\n\nexport default RadioButtonItem;\n\n// @component-docs ignore-next-line\nexport { RadioButtonItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n  font: {\n    fontSize: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
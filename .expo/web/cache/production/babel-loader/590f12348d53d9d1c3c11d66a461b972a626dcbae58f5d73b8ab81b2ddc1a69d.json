{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _color=_interopRequireDefault(require(\"color\"));var _utils=require(\"./utils\");var _theming=require(\"../../core/theming\");var _forwardRef=require(\"../../utils/forwardRef\");var _hasTouchHandler=_interopRequireDefault(require(\"../../utils/hasTouchHandler\"));var _splitStyles3=require(\"../../utils/splitStyles\");var _ActivityIndicator=_interopRequireDefault(require(\"../ActivityIndicator\"));var _Icon=_interopRequireDefault(require(\"../Icon\"));var _Surface=_interopRequireDefault(require(\"../Surface\"));var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));var _excluded=[\"disabled\",\"compact\",\"mode\",\"dark\",\"loading\",\"icon\",\"buttonColor\",\"textColor\",\"rippleColor\",\"children\",\"accessibilityLabel\",\"accessibilityHint\",\"accessibilityRole\",\"onPress\",\"onPressIn\",\"onPressOut\",\"onLongPress\",\"delayLongPress\",\"style\",\"theme\",\"uppercase\",\"contentStyle\",\"labelStyle\",\"testID\",\"accessible\",\"background\",\"maxFontSizeMultiplier\",\"touchableRef\"];function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var Button=function Button(_ref,ref){var _borderRadiusStyles$b;var _StyleSheet$flatten;var disabled=_ref.disabled,compact=_ref.compact,_ref$mode=_ref.mode,mode=_ref$mode===void 0?'text':_ref$mode,dark=_ref.dark,loading=_ref.loading,icon=_ref.icon,customButtonColor=_ref.buttonColor,customTextColor=_ref.textColor,customRippleColor=_ref.rippleColor,children=_ref.children,accessibilityLabel=_ref.accessibilityLabel,accessibilityHint=_ref.accessibilityHint,_ref$accessibilityRol=_ref.accessibilityRole,accessibilityRole=_ref$accessibilityRol===void 0?'button':_ref$accessibilityRol,onPress=_ref.onPress,onPressIn=_ref.onPressIn,onPressOut=_ref.onPressOut,onLongPress=_ref.onLongPress,delayLongPress=_ref.delayLongPress,style=_ref.style,themeOverrides=_ref.theme,uppercaseProp=_ref.uppercase,contentStyle=_ref.contentStyle,labelStyle=_ref.labelStyle,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'button':_ref$testID,accessible=_ref.accessible,background=_ref.background,maxFontSizeMultiplier=_ref.maxFontSizeMultiplier,touchableRef=_ref.touchableRef,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var theme=(0,_theming.useInternalTheme)(themeOverrides);var isMode=React.useCallback(function(modeToCompare){return mode===modeToCompare;},[mode]);var roundness=theme.roundness,isV3=theme.isV3,animation=theme.animation;var uppercase=uppercaseProp!=null?uppercaseProp:!theme.isV3;var hasPassedTouchHandler=(0,_hasTouchHandler.default)({onPress:onPress,onPressIn:onPressIn,onPressOut:onPressOut,onLongPress:onLongPress});var isElevationEntitled=!disabled&&(isV3?isMode('elevated'):isMode('contained'));var initialElevation=isV3?1:2;var activeElevation=isV3?2:8;var _React$useRef=React.useRef(new _reactNative.Animated.Value(isElevationEntitled?initialElevation:0)),elevation=_React$useRef.current;React.useEffect(function(){_reactNative.Animated.timing(elevation,{toValue:isElevationEntitled?initialElevation:0,duration:0,useNativeDriver:true});},[isElevationEntitled,elevation,initialElevation]);var handlePressIn=function handlePressIn(e){onPressIn===null||onPressIn===void 0?void 0:onPressIn(e);if(isV3?isMode('elevated'):isMode('contained')){var scale=animation.scale;_reactNative.Animated.timing(elevation,{toValue:activeElevation,duration:200*scale,useNativeDriver:_reactNative.Platform.OS==='web'||_reactNative.Platform.constants.reactNativeVersion.minor<=72}).start();}};var handlePressOut=function handlePressOut(e){onPressOut===null||onPressOut===void 0?void 0:onPressOut(e);if(isV3?isMode('elevated'):isMode('contained')){var scale=animation.scale;_reactNative.Animated.timing(elevation,{toValue:initialElevation,duration:150*scale,useNativeDriver:_reactNative.Platform.OS==='web'||_reactNative.Platform.constants.reactNativeVersion.minor<=72}).start();}};var flattenedStyles=_reactNative.StyleSheet.flatten(style)||{};var _splitStyles=(0,_splitStyles3.splitStyles)(flattenedStyles,function(style){return style.startsWith('border')&&style.endsWith('Radius');}),_splitStyles2=(0,_slicedToArray2.default)(_splitStyles,2),borderRadiusStyles=_splitStyles2[1];var borderRadius=(isV3?5:1)*roundness;var iconSize=isV3?18:16;var _getButtonColors=(0,_utils.getButtonColors)({customButtonColor:customButtonColor,customTextColor:customTextColor,theme:theme,mode:mode,disabled:disabled,dark:dark}),backgroundColor=_getButtonColors.backgroundColor,borderColor=_getButtonColors.borderColor,textColor=_getButtonColors.textColor,borderWidth=_getButtonColors.borderWidth;var rippleColor=customRippleColor||(0,_color.default)(textColor).alpha(0.12).rgb().string();var touchableStyle=Object.assign({},borderRadiusStyles,{borderRadius:(_borderRadiusStyles$b=borderRadiusStyles.borderRadius)!=null?_borderRadiusStyles$b:borderRadius});var buttonStyle=Object.assign({backgroundColor:backgroundColor,borderColor:borderColor,borderWidth:borderWidth},touchableStyle);var _ref2=_reactNative.StyleSheet.flatten(labelStyle)||{},customLabelColor=_ref2.color,customLabelSize=_ref2.fontSize;var font=isV3?theme.fonts.labelLarge:theme.fonts.medium;var textStyle=Object.assign({color:textColor},font);var iconStyle=((_StyleSheet$flatten=_reactNative.StyleSheet.flatten(contentStyle))===null||_StyleSheet$flatten===void 0?void 0:_StyleSheet$flatten.flexDirection)==='row-reverse'?[styles.iconReverse,isV3&&styles[`md3IconReverse${compact?'Compact':''}`],isV3&&isMode('text')&&styles[`md3IconReverseTextMode${compact?'Compact':''}`]]:[styles.icon,isV3&&styles[`md3Icon${compact?'Compact':''}`],isV3&&isMode('text')&&styles[`md3IconTextMode${compact?'Compact':''}`]];return React.createElement(_Surface.default,_extends({},rest,{ref:ref,testID:`${testID}-container`,style:[styles.button,compact&&styles.compact,buttonStyle,style,!isV3&&!disabled&&{elevation:elevation}]},isV3&&{elevation:elevation}),React.createElement(_TouchableRipple.default,{borderless:true,background:background,onPress:onPress,onLongPress:onLongPress,onPressIn:hasPassedTouchHandler?handlePressIn:undefined,onPressOut:hasPassedTouchHandler?handlePressOut:undefined,delayLongPress:delayLongPress,accessibilityLabel:accessibilityLabel,accessibilityHint:accessibilityHint,accessibilityRole:accessibilityRole,accessibilityState:{disabled:disabled},accessible:accessible,disabled:disabled,rippleColor:rippleColor,style:(0,_utils.getButtonTouchableRippleStyle)(touchableStyle,borderWidth),testID:testID,theme:theme,ref:touchableRef},React.createElement(_reactNative.View,{style:[styles.content,contentStyle]},icon&&loading!==true?React.createElement(_reactNative.View,{style:iconStyle,testID:`${testID}-icon-container`},React.createElement(_Icon.default,{source:icon,size:customLabelSize!=null?customLabelSize:iconSize,color:typeof customLabelColor==='string'?customLabelColor:textColor})):null,loading?React.createElement(_ActivityIndicator.default,{size:customLabelSize!=null?customLabelSize:iconSize,color:typeof customLabelColor==='string'?customLabelColor:textColor,style:iconStyle}):null,React.createElement(_Text.default,{variant:\"labelLarge\",selectable:false,numberOfLines:1,testID:`${testID}-text`,style:[styles.label,!isV3&&styles.md2Label,isV3&&(isMode('text')?icon||loading?styles.md3LabelTextAddons:styles.md3LabelText:styles.md3Label),compact&&styles.compactLabel,uppercase&&styles.uppercaseLabel,textStyle,labelStyle],maxFontSizeMultiplier:maxFontSizeMultiplier},children))));};var styles=_reactNative.StyleSheet.create({button:{minWidth:64,borderStyle:'solid'},compact:{minWidth:'auto'},content:{flexDirection:'row',alignItems:'center',justifyContent:'center'},icon:{marginLeft:12,marginRight:-4},iconReverse:{marginRight:12,marginLeft:-4},md3Icon:{marginLeft:16,marginRight:-16},md3IconCompact:{marginLeft:8,marginRight:0},md3IconReverse:{marginLeft:-16,marginRight:16},md3IconReverseCompact:{marginLeft:0,marginRight:8},md3IconTextMode:{marginLeft:12,marginRight:-8},md3IconTextModeCompact:{marginLeft:6,marginRight:0},md3IconReverseTextMode:{marginLeft:-8,marginRight:12},md3IconReverseTextModeCompact:{marginLeft:0,marginRight:6},label:{textAlign:'center',marginVertical:9,marginHorizontal:16},md2Label:{letterSpacing:1},compactLabel:{marginHorizontal:8},uppercaseLabel:{textTransform:'uppercase'},md3Label:{marginVertical:10,marginHorizontal:24},md3LabelText:{marginHorizontal:12},md3LabelTextAddons:{marginHorizontal:16}});var _default=exports.default=(0,_forwardRef.forwardRef)(Button);","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_color","_interopRequireDefault","_utils","_theming","_forwardRef","_hasTouchHandler","_splitStyles3","_ActivityIndicator","_Icon","_Surface","_TouchableRipple","_Text","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Button","_ref","ref","_borderRadiusStyles$b","_StyleSheet$flatten","disabled","compact","_ref$mode","mode","dark","loading","icon","customButtonColor","buttonColor","customTextColor","textColor","customRippleColor","rippleColor","children","accessibilityLabel","accessibilityHint","_ref$accessibilityRol","accessibilityRole","onPress","onPressIn","onPressOut","onLongPress","delayLongPress","style","themeOverrides","theme","uppercaseProp","uppercase","contentStyle","labelStyle","_ref$testID","testID","accessible","background","maxFontSizeMultiplier","touchableRef","rest","_objectWithoutProperties2","useInternalTheme","isMode","useCallback","modeToCompare","roundness","isV3","animation","hasPassedTouchHandler","hasTouchHandler","isElevationEntitled","initialElevation","activeElevation","_React$useRef","useRef","Animated","Value","elevation","current","useEffect","timing","toValue","duration","useNativeDriver","handlePressIn","scale","Platform","OS","constants","reactNativeVersion","minor","start","handlePressOut","flattenedStyles","StyleSheet","flatten","_splitStyles","splitStyles","startsWith","endsWith","_splitStyles2","_slicedToArray2","borderRadiusStyles","borderRadius","iconSize","_getButtonColors","getButtonColors","backgroundColor","borderColor","borderWidth","color","alpha","rgb","string","touchableStyle","assign","buttonStyle","_ref2","customLabelColor","customLabelSize","fontSize","font","fonts","labelLarge","medium","textStyle","iconStyle","flexDirection","styles","iconReverse","createElement","Surface","_extends","button","TouchableRipple","borderless","undefined","accessibilityState","getButtonTouchableRippleStyle","View","content","Icon","source","size","ActivityIndicator","Text","variant","selectable","numberOfLines","label","md2Label","md3LabelTextAddons","md3LabelText","md3Label","compactLabel","uppercaseLabel","create","minWidth","borderStyle","alignItems","justifyContent","marginLeft","marginRight","md3Icon","md3IconCompact","md3IconReverse","md3IconReverseCompact","md3IconTextMode","md3IconTextModeCompact","md3IconReverseTextMode","md3IconReverseTextModeCompact","textAlign","marginVertical","marginHorizontal","letterSpacing","textTransform","_default","exports","forwardRef"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/Button/Button.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityRole,\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  Platform,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport {\n  ButtonMode,\n  getButtonColors,\n  getButtonTouchableRippleStyle,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $Omit, ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport hasTouchHandler from '../../utils/hasTouchHandler';\nimport { splitStyles } from '../../utils/splitStyles';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $Omit<React.ComponentProps<typeof Surface>, 'mode'> & {\n  /**\n   * Mode of the button. You can change the mode to adjust the styling to give it desired emphasis.\n   * - `text` - flat button without background or outline, used for the lowest priority actions, especially when presenting multiple options.\n   * - `outlined` - button with an outline without background, typically used for important, but not primary action – represents medium emphasis.\n   * - `contained` - button with a background color, used for important action, have the most visual impact and high emphasis.\n   * - `elevated` - button with a background color and elevation, used when absolutely necessary e.g. button requires visual separation from a patterned background. @supported Available in v5.x with theme version 3\n   * - `contained-tonal` - button with a secondary background color, an alternative middle ground between contained and outlined buttons. @supported Available in v5.x with theme version 3\n   */\n  mode?: 'text' | 'outlined' | 'contained' | 'elevated' | 'contained-tonal';\n  /**\n   * Whether the color is a dark color. A dark button will render light text and vice-versa. Only applicable for:\n   *  * `contained` mode for theme version 2\n   *  * `contained`, `contained-tonal` and `elevated` modes for theme version 3.\n   */\n  dark?: boolean;\n  /**\n   * Use a compact look, useful for `text` buttons in a row.\n   */\n  compact?: boolean;\n  /**\n   * @deprecated Deprecated in v5.x - use `buttonColor` or `textColor` instead.\n   * Custom text color for flat button, or background color for contained button.\n   */\n  color?: string;\n  /**\n   * Custom button's background color.\n   */\n  buttonColor?: string;\n  /**\n   * Custom button's text color.\n   */\n  textColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Icon to display for the `Button`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Label text of the button.\n   */\n  children: React.ReactNode;\n  /**\n   * Make the label text uppercased. Note that this won't work if you pass React elements as children.\n   */\n  uppercase?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility hint for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityHint?: string;\n  /**\n   * Accessibility role for the button. The \"button\" role is set by default.\n   */\n  accessibilityRole?: AccessibilityRole;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute as soon as the touchable element is pressed and invoked even before onPress.\n   */\n  onPressIn?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute as soon as the touch is released even before onPress.\n   */\n  onPressOut?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width, to set a custom padding or to set the icon on the right with `flexDirection: 'row-reverse'`.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * Style for the button text.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Reference for the touchable\n   */\n  touchableRef?: React.RefObject<View>;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * A button is component that the user can press to trigger an action.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n *     Press me\n *   </Button>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Button = (\n  {\n    disabled,\n    compact,\n    mode = 'text',\n    dark,\n    loading,\n    icon,\n    buttonColor: customButtonColor,\n    textColor: customTextColor,\n    rippleColor: customRippleColor,\n    children,\n    accessibilityLabel,\n    accessibilityHint,\n    accessibilityRole = 'button',\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    delayLongPress,\n    style,\n    theme: themeOverrides,\n    uppercase: uppercaseProp,\n    contentStyle,\n    labelStyle,\n    testID = 'button',\n    accessible,\n    background,\n    maxFontSizeMultiplier,\n    touchableRef,\n    ...rest\n  }: Props,\n  ref: React.ForwardedRef<View>\n) => {\n  const theme = useInternalTheme(themeOverrides);\n  const isMode = React.useCallback(\n    (modeToCompare: ButtonMode) => {\n      return mode === modeToCompare;\n    },\n    [mode]\n  );\n  const { roundness, isV3, animation } = theme;\n  const uppercase = uppercaseProp ?? !theme.isV3;\n\n  const hasPassedTouchHandler = hasTouchHandler({\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n  });\n\n  const isElevationEntitled =\n    !disabled && (isV3 ? isMode('elevated') : isMode('contained'));\n  const initialElevation = isV3 ? 1 : 2;\n  const activeElevation = isV3 ? 2 : 8;\n\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(isElevationEntitled ? initialElevation : 0)\n  );\n\n  React.useEffect(() => {\n    // Workaround not to call setValue on Animated.Value, because it breaks styles.\n    // https://github.com/callstack/react-native-paper/issues/4559\n    Animated.timing(elevation, {\n      toValue: isElevationEntitled ? initialElevation : 0,\n      duration: 0,\n      useNativeDriver: true,\n    });\n  }, [isElevationEntitled, elevation, initialElevation]);\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    onPressIn?.(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: activeElevation,\n        duration: 200 * scale,\n        useNativeDriver:\n          Platform.OS === 'web' ||\n          Platform.constants.reactNativeVersion.minor <= 72,\n      }).start();\n    }\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    onPressOut?.(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: initialElevation,\n        duration: 150 * scale,\n        useNativeDriver:\n          Platform.OS === 'web' ||\n          Platform.constants.reactNativeVersion.minor <= 72,\n      }).start();\n    }\n  };\n\n  const flattenedStyles = (StyleSheet.flatten(style) || {}) as ViewStyle;\n  const [, borderRadiusStyles] = splitStyles(\n    flattenedStyles,\n    (style) => style.startsWith('border') && style.endsWith('Radius')\n  );\n\n  const borderRadius = (isV3 ? 5 : 1) * roundness;\n  const iconSize = isV3 ? 18 : 16;\n\n  const { backgroundColor, borderColor, textColor, borderWidth } =\n    getButtonColors({\n      customButtonColor,\n      customTextColor,\n      theme,\n      mode,\n      disabled,\n      dark,\n    });\n\n  const rippleColor =\n    customRippleColor || color(textColor).alpha(0.12).rgb().string();\n\n  const touchableStyle = {\n    ...borderRadiusStyles,\n    borderRadius: borderRadiusStyles.borderRadius ?? borderRadius,\n  };\n\n  const buttonStyle = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    ...touchableStyle,\n  };\n\n  const { color: customLabelColor, fontSize: customLabelSize } =\n    StyleSheet.flatten(labelStyle) || {};\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: textColor,\n    ...font,\n  };\n\n  const iconStyle =\n    StyleSheet.flatten(contentStyle)?.flexDirection === 'row-reverse'\n      ? [\n          styles.iconReverse,\n          isV3 && styles[`md3IconReverse${compact ? 'Compact' : ''}`],\n          isV3 &&\n            isMode('text') &&\n            styles[`md3IconReverseTextMode${compact ? 'Compact' : ''}`],\n        ]\n      : [\n          styles.icon,\n          isV3 && styles[`md3Icon${compact ? 'Compact' : ''}`],\n          isV3 &&\n            isMode('text') &&\n            styles[`md3IconTextMode${compact ? 'Compact' : ''}`],\n        ];\n\n  return (\n    <Surface\n      {...rest}\n      ref={ref}\n      testID={`${testID}-container`}\n      style={\n        [\n          styles.button,\n          compact && styles.compact,\n          buttonStyle,\n          style,\n          !isV3 && !disabled && { elevation },\n        ] as Animated.WithAnimatedValue<StyleProp<ViewStyle>>\n      }\n      {...(isV3 && { elevation: elevation })}\n    >\n      <TouchableRipple\n        borderless\n        background={background}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={hasPassedTouchHandler ? handlePressIn : undefined}\n        onPressOut={hasPassedTouchHandler ? handlePressOut : undefined}\n        delayLongPress={delayLongPress}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={accessibilityHint}\n        accessibilityRole={accessibilityRole}\n        accessibilityState={{ disabled }}\n        accessible={accessible}\n        disabled={disabled}\n        rippleColor={rippleColor}\n        style={getButtonTouchableRippleStyle(touchableStyle, borderWidth)}\n        testID={testID}\n        theme={theme}\n        ref={touchableRef}\n      >\n        <View style={[styles.content, contentStyle]}>\n          {icon && loading !== true ? (\n            <View style={iconStyle} testID={`${testID}-icon-container`}>\n              <Icon\n                source={icon}\n                size={customLabelSize ?? iconSize}\n                color={\n                  typeof customLabelColor === 'string'\n                    ? customLabelColor\n                    : textColor\n                }\n              />\n            </View>\n          ) : null}\n          {loading ? (\n            <ActivityIndicator\n              size={customLabelSize ?? iconSize}\n              color={\n                typeof customLabelColor === 'string'\n                  ? customLabelColor\n                  : textColor\n              }\n              style={iconStyle}\n            />\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            selectable={false}\n            numberOfLines={1}\n            testID={`${testID}-text`}\n            style={[\n              styles.label,\n              !isV3 && styles.md2Label,\n              isV3 &&\n                (isMode('text')\n                  ? icon || loading\n                    ? styles.md3LabelTextAddons\n                    : styles.md3LabelText\n                  : styles.md3Label),\n              compact && styles.compactLabel,\n              uppercase && styles.uppercaseLabel,\n              textStyle,\n              labelStyle,\n            ]}\n            maxFontSizeMultiplier={maxFontSizeMultiplier}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid',\n  },\n  compact: {\n    minWidth: 'auto',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4,\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4,\n  },\n  /* eslint-disable react-native/no-unused-styles */\n  md3Icon: {\n    marginLeft: 16,\n    marginRight: -16,\n  },\n  md3IconCompact: {\n    marginLeft: 8,\n    marginRight: 0,\n  },\n  md3IconReverse: {\n    marginLeft: -16,\n    marginRight: 16,\n  },\n  md3IconReverseCompact: {\n    marginLeft: 0,\n    marginRight: 8,\n  },\n  md3IconTextMode: {\n    marginLeft: 12,\n    marginRight: -8,\n  },\n  md3IconTextModeCompact: {\n    marginLeft: 6,\n    marginRight: 0,\n  },\n  md3IconReverseTextMode: {\n    marginLeft: -8,\n    marginRight: 12,\n  },\n  md3IconReverseTextModeCompact: {\n    marginLeft: 0,\n    marginRight: 6,\n  },\n  /* eslint-enable react-native/no-unused-styles */\n  label: {\n    textAlign: 'center',\n    marginVertical: 9,\n    marginHorizontal: 16,\n  },\n  md2Label: {\n    letterSpacing: 1,\n  },\n  compactLabel: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  md3Label: {\n    marginVertical: 10,\n    marginHorizontal: 24,\n  },\n  md3LabelText: {\n    marginHorizontal: 12,\n  },\n  md3LabelTextAddons: {\n    marginHorizontal: 16,\n  },\n});\n\nexport default forwardRef(Button);\n"],"mappings":"+WAAA,IAAAA,KAAA,CAAAC,uBAAA,CAAAC,OAAA,WACA,IAAAC,YAAA,CAAAD,OAAA,iBAcA,IAAAE,MAAA,CAAAC,sBAAA,CAAAH,OAAA,WAEA,IAAAI,MAAA,CAAAJ,OAAA,YAKA,IAAAK,QAAA,CAAAL,OAAA,uBAEA,IAAAM,WAAA,CAAAN,OAAA,2BACA,IAAAO,gBAAA,CAAAJ,sBAAA,CAAAH,OAAA,iCACA,IAAAQ,aAAA,CAAAR,OAAA,4BACA,IAAAS,kBAAA,CAAAN,sBAAA,CAAAH,OAAA,0BACA,IAAAU,KAAA,CAAAP,sBAAA,CAAAH,OAAA,aACA,IAAAW,QAAA,CAAAR,sBAAA,CAAAH,OAAA,gBACA,IAAAY,gBAAA,CAAAT,sBAAA,CAAAH,OAAA,wCACA,IAAAa,KAAA,CAAAV,sBAAA,CAAAH,OAAA,wBAAqC,IAAAc,SAAA,oXAAAf,wBAAAgB,CAAA,CAAAC,CAAA,wBAAAC,OAAA,KAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAlB,uBAAA,UAAAA,wBAAAgB,CAAA,CAAAC,CAAA,MAAAA,CAAA,EAAAD,CAAA,EAAAA,CAAA,CAAAK,UAAA,QAAAL,CAAA,KAAAM,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAAAC,SAAA,MAAAC,OAAA,CAAAV,CAAA,YAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAQ,CAAA,IAAAF,CAAA,CAAAL,CAAA,CAAAG,CAAA,CAAAD,CAAA,KAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,SAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,EAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,CAAAQ,CAAA,WAAAM,EAAA,IAAAd,CAAA,aAAAc,EAAA,KAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,CAAAc,EAAA,KAAAP,CAAA,EAAAD,CAAA,CAAAW,MAAA,CAAAC,cAAA,GAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,CAAAc,EAAA,KAAAP,CAAA,CAAAK,GAAA,EAAAL,CAAA,CAAAM,GAAA,EAAAP,CAAA,CAAAE,CAAA,CAAAM,EAAA,CAAAP,CAAA,EAAAC,CAAA,CAAAM,EAAA,EAAAd,CAAA,CAAAc,EAAA,UAAAN,CAAA,IAAAR,CAAA,CAAAC,CAAA,G,2SA6IrC,GAAM,CAAAmB,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAGC,IAAA,CAgCbC,GAA6B,CAC1B,KAAAC,qBAAA,KAAAC,mBAAA,IA/BD,CAAAC,QAAQ,CA6BFJ,IAAA,CA7BNI,QAAQ,CACRC,OAAO,CA4BDL,IAAA,CA5BNK,OAAO,CAAAC,SAAA,CA4BDN,IAAA,CA3BNO,IAAI,CAAJA,IAAI,CAAAD,SAAA,UAAG,MAAM,CAAAA,SAAA,CACbE,IAAI,CA0BER,IAAA,CA1BNQ,IAAI,CACJC,OAAO,CAyBDT,IAAA,CAzBNS,OAAO,CACPC,IAAI,CAwBEV,IAAA,CAxBNU,IAAI,CACSC,iBAAiB,CAuBxBX,IAAA,CAvBNY,WAAW,CACAC,eAAe,CAsBpBb,IAAA,CAtBNc,SAAS,CACIC,iBAAiB,CAqBxBf,IAAA,CArBNgB,WAAW,CACXC,QAAQ,CAoBFjB,IAAA,CApBNiB,QAAQ,CACRC,kBAAkB,CAmBZlB,IAAA,CAnBNkB,kBAAkB,CAClBC,iBAAiB,CAkBXnB,IAAA,CAlBNmB,iBAAiB,CAAAC,qBAAA,CAkBXpB,IAAA,CAjBNqB,iBAAiB,CAAjBA,iBAAiB,CAAAD,qBAAA,UAAG,QAAQ,CAAAA,qBAAA,CAC5BE,OAAO,CAgBDtB,IAAA,CAhBNsB,OAAO,CACPC,SAAS,CAeHvB,IAAA,CAfNuB,SAAS,CACTC,UAAU,CAcJxB,IAAA,CAdNwB,UAAU,CACVC,WAAW,CAaLzB,IAAA,CAbNyB,WAAW,CACXC,cAAc,CAYR1B,IAAA,CAZN0B,cAAc,CACdC,KAAK,CAWC3B,IAAA,CAXN2B,KAAK,CACEC,cAAc,CAUf5B,IAAA,CAVN6B,KAAK,CACMC,aAAa,CASlB9B,IAAA,CATN+B,SAAS,CACTC,YAAY,CAQNhC,IAAA,CARNgC,YAAY,CACZC,UAAU,CAOJjC,IAAA,CAPNiC,UAAU,CAAAC,WAAA,CAOJlC,IAAA,CANNmC,MAAM,CAANA,MAAM,CAAAD,WAAA,UAAG,QAAQ,CAAAA,WAAA,CACjBE,UAAU,CAKJpC,IAAA,CALNoC,UAAU,CACVC,UAAU,CAIJrC,IAAA,CAJNqC,UAAU,CACVC,qBAAqB,CAGftC,IAAA,CAHNsC,qBAAqB,CACrBC,YAAY,CAENvC,IAAA,CAFNuC,YAAY,CACTC,IAAA,IAAAC,yBAAA,CAAApD,OAAA,EACGW,IAAA,CAAAtB,SAAA,EAGR,GAAM,CAAAmD,KAAK,CAAG,GAAAa,yBAAgB,EAACd,cAAc,CAAC,CAC9C,GAAM,CAAAe,MAAM,CAAGjF,KAAK,CAACkF,WAAW,CAC7B,SAAAC,aAAyB,CAAK,CAC7B,MAAO,CAAAtC,IAAI,GAAKsC,aAAa,CAC/B,CAAC,CACD,CAACtC,IAAI,CACP,CAAC,CACD,GAAQ,CAAAuC,SAAS,CAAsBjB,KAAK,CAApCiB,SAAS,CAAEC,IAAI,CAAgBlB,KAAK,CAAzBkB,IAAI,CAAEC,SAAA,CAAcnB,KAAK,CAAnBmB,SAAA,CACzB,GAAM,CAAAjB,SAAS,CAAGD,aAAa,OAAbA,aAAa,CAAI,CAACD,KAAK,CAACkB,IAAI,CAE9C,GAAM,CAAAE,qBAAqB,CAAG,GAAAC,wBAAe,EAAC,CAC5C5B,OAAO,CAAPA,OAAO,CACPC,SAAS,CAATA,SAAS,CACTC,UAAU,CAAVA,UAAU,CACVC,WAAA,CAAAA,WACF,CAAC,CAAC,CAEF,GAAM,CAAA0B,mBAAmB,CACvB,CAAC/C,QAAQ,GAAK2C,IAAI,CAAGJ,MAAM,CAAC,UAAU,CAAC,CAAGA,MAAM,CAAC,WAAW,CAAC,CAAC,CAChE,GAAM,CAAAS,gBAAgB,CAAGL,IAAI,CAAG,CAAC,CAAG,CAAC,CACrC,GAAM,CAAAM,eAAe,CAAGN,IAAI,CAAG,CAAC,CAAG,CAAC,CAEpC,IAAAO,aAAA,CAA+B5F,KAAK,CAAC6F,MAAM,CACzC,GAAI,CAAAC,qBAAQ,CAACC,KAAK,CAACN,mBAAmB,CAAGC,gBAAgB,CAAG,CAAC,CAC/D,CAAC,CAFgBM,SAAA,CAAAJ,aAAA,CAATK,OAAO,CAIfjG,KAAK,CAACkG,SAAS,CAAC,UAAM,CAGpBJ,qBAAQ,CAACK,MAAM,CAACH,SAAS,CAAE,CACzBI,OAAO,CAAEX,mBAAmB,CAAGC,gBAAgB,CAAG,CAAC,CACnDW,QAAQ,CAAE,CAAC,CACXC,eAAe,CAAE,IACnB,CAAC,CAAC,CACJ,CAAC,CAAE,CAACb,mBAAmB,CAAEO,SAAS,CAAEN,gBAAgB,CAAC,CAAC,CAEtD,GAAM,CAAAa,aAAa,CAAI,QAAjB,CAAAA,aAAaA,CAAItF,CAAwB,CAAK,CAClD4C,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAG5C,CAAC,CAAC,CACd,GAAIoE,IAAI,CAAGJ,MAAM,CAAC,UAAU,CAAC,CAAGA,MAAM,CAAC,WAAW,CAAC,CAAE,CACnD,GAAQ,CAAAuB,KAAA,CAAUlB,SAAS,CAAnBkB,KAAA,CACRV,qBAAQ,CAACK,MAAM,CAACH,SAAS,CAAE,CACzBI,OAAO,CAAET,eAAe,CACxBU,QAAQ,CAAE,GAAG,CAAGG,KAAK,CACrBF,eAAe,CACbG,qBAAQ,CAACC,EAAE,GAAK,KAAK,EACrBD,qBAAQ,CAACE,SAAS,CAACC,kBAAkB,CAACC,KAAK,EAAI,EACnD,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CACZ,CACF,CAAC,CAED,GAAM,CAAAC,cAAc,CAAI,QAAlB,CAAAA,cAAcA,CAAI9F,CAAwB,CAAK,CACnD6C,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAG7C,CAAC,CAAC,CACf,GAAIoE,IAAI,CAAGJ,MAAM,CAAC,UAAU,CAAC,CAAGA,MAAM,CAAC,WAAW,CAAC,CAAE,CACnD,GAAQ,CAAAuB,KAAA,CAAUlB,SAAS,CAAnBkB,KAAA,CACRV,qBAAQ,CAACK,MAAM,CAACH,SAAS,CAAE,CACzBI,OAAO,CAAEV,gBAAgB,CACzBW,QAAQ,CAAE,GAAG,CAAGG,KAAK,CACrBF,eAAe,CACbG,qBAAQ,CAACC,EAAE,GAAK,KAAK,EACrBD,qBAAQ,CAACE,SAAS,CAACC,kBAAkB,CAACC,KAAK,EAAI,EACnD,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CACZ,CACF,CAAC,CAED,GAAM,CAAAE,eAAe,CAAIC,uBAAU,CAACC,OAAO,CAACjD,KAAK,CAAC,EAAI,CAAC,CAAe,CACtE,IAAAkD,YAAA,CAA+B,GAAAC,yBAAW,EACxCJ,eAAe,CACd,SAAA/C,KAAK,QAAK,CAAAA,KAAK,CAACoD,UAAU,CAAC,QAAQ,CAAC,EAAIpD,KAAK,CAACqD,QAAQ,CAAC,QAAQ,CAClE,GAAC,CAAAC,aAAA,IAAAC,eAAA,CAAA7F,OAAA,EAAAwF,YAAA,IAHQM,kBAAkB,CAAAF,aAAA,IAK3B,GAAM,CAAAG,YAAY,CAAG,CAACrC,IAAI,CAAG,CAAC,CAAG,CAAC,EAAID,SAAS,CAC/C,GAAM,CAAAuC,QAAQ,CAAGtC,IAAI,CAAG,EAAE,CAAG,EAAE,CAE/B,IAAAuC,gBAAA,CACE,GAAAC,sBAAe,EAAC,CACd5E,iBAAiB,CAAjBA,iBAAiB,CACjBE,eAAe,CAAfA,eAAe,CACfgB,KAAK,CAALA,KAAK,CACLtB,IAAI,CAAJA,IAAI,CACJH,QAAQ,CAARA,QAAQ,CACRI,IAAA,CAAAA,IACF,CAAC,CAAC,CARIgF,eAAe,CAAAF,gBAAA,CAAfE,eAAe,CAAEC,WAAW,CAAAH,gBAAA,CAAXG,WAAW,CAAE3E,SAAS,CAAAwE,gBAAA,CAATxE,SAAS,CAAE4E,WAAA,CAAAJ,gBAAA,CAAAI,WAAA,CAUjD,GAAM,CAAA1E,WAAW,CACfD,iBAAiB,EAAI,GAAA4E,cAAK,EAAC7E,SAAS,CAAC,CAAC8E,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAElE,GAAM,CAAAC,cAAc,CAAAnG,MAAA,CAAAoG,MAAA,IACfb,kBAAkB,EACrBC,YAAY,EAAAlF,qBAAA,CAAEiF,kBAAkB,CAACC,YAAY,QAAAlF,qBAAA,CAAIkF,YAAA,EAClD,CAED,GAAM,CAAAa,WAAW,CAAArG,MAAA,CAAAoG,MAAA,EACfR,eAAe,CAAfA,eAAe,CACfC,WAAW,CAAXA,WAAW,CACXC,WAAW,CAAXA,WAAW,EACRK,cAAA,CACJ,CAED,IAAAG,KAAA,CACEvB,uBAAU,CAACC,OAAO,CAAC3C,UAAU,CAAC,EAAI,CAAC,CAAC,CADvBkE,gBAAgB,CAAAD,KAAA,CAAvBP,KAAK,CAA8BS,eAAA,CAAAF,KAAA,CAAVG,QAAQ,CAGzC,GAAM,CAAAC,IAAI,CAAGvD,IAAI,CAAGlB,KAAK,CAAC0E,KAAK,CAACC,UAAU,CAAG3E,KAAK,CAAC0E,KAAK,CAACE,MAAM,CAE/D,GAAM,CAAAC,SAAS,CAAA9G,MAAA,CAAAoG,MAAA,EACbL,KAAK,CAAE7E,SAAS,EACbwF,IAAA,CACJ,CAED,GAAM,CAAAK,SAAS,CACb,EAAAxG,mBAAA,CAAAwE,uBAAU,CAACC,OAAO,CAAC5C,YAAY,CAAC,UAAA7B,mBAAA,iBAAhCA,mBAAA,CAAkCyG,aAAa,IAAK,aAAa,CAC7D,CACEC,MAAM,CAACC,WAAW,CAClB/D,IAAI,EAAI8D,MAAM,CAAE,iBAAgBxG,OAAO,CAAG,SAAS,CAAG,EAAG,EAAC,CAAC,CAC3D0C,IAAI,EACFJ,MAAM,CAAC,MAAM,CAAC,EACdkE,MAAM,CAAE,yBAAwBxG,OAAO,CAAG,SAAS,CAAG,EAAG,EAAC,CAAC,CAC9D,CACD,CACEwG,MAAM,CAACnG,IAAI,CACXqC,IAAI,EAAI8D,MAAM,CAAE,UAASxG,OAAO,CAAG,SAAS,CAAG,EAAG,EAAC,CAAC,CACpD0C,IAAI,EACFJ,MAAM,CAAC,MAAM,CAAC,EACdkE,MAAM,CAAE,kBAAiBxG,OAAO,CAAG,SAAS,CAAG,EAAG,EAAC,CAAC,CACvD,CAEP,MACE,CAAA3C,KAAA,CAAAqJ,aAAA,CAACC,gBAAO,CAAAC,QAAA,IACFzE,IAAI,EACRvC,GAAG,CAAEA,GAAI,CACTkC,MAAM,CAAG,GAAEA,MAAO,YAAY,CAC9BR,KAAK,CACH,CACEkF,MAAM,CAACK,MAAM,CACb7G,OAAO,EAAIwG,MAAM,CAACxG,OAAO,CACzB4F,WAAW,CACXtE,KAAK,CACL,CAACoB,IAAI,EAAI,CAAC3C,QAAQ,EAAI,CAAEsD,SAAA,CAAAA,SAAU,CAAC,CAEtC,EACIX,IAAI,EAAI,CAAEW,SAAS,CAAEA,SAAU,CAAC,EAErChG,KAAA,CAAAqJ,aAAA,CAACI,wBAAe,EACdC,UAAU,MACV/E,UAAU,CAAEA,UAAW,CACvBf,OAAO,CAAEA,OAAQ,CACjBG,WAAW,CAAEA,WAAY,CACzBF,SAAS,CAAE0B,qBAAqB,CAAGgB,aAAa,CAAGoD,SAAU,CAC7D7F,UAAU,CAAEyB,qBAAqB,CAAGwB,cAAc,CAAG4C,SAAU,CAC/D3F,cAAc,CAAEA,cAAe,CAC/BR,kBAAkB,CAAEA,kBAAmB,CACvCC,iBAAiB,CAAEA,iBAAkB,CACrCE,iBAAiB,CAAEA,iBAAkB,CACrCiG,kBAAkB,CAAE,CAAElH,QAAA,CAAAA,QAAS,CAAE,CACjCgC,UAAU,CAAEA,UAAW,CACvBhC,QAAQ,CAAEA,QAAS,CACnBY,WAAW,CAAEA,WAAY,CACzBW,KAAK,CAAE,GAAA4F,oCAA6B,EAACxB,cAAc,CAAEL,WAAW,CAAE,CAClEvD,MAAM,CAAEA,MAAO,CACfN,KAAK,CAAEA,KAAM,CACb5B,GAAG,CAAEsC,YAAa,EAElB7E,KAAA,CAAAqJ,aAAA,CAACS,iBAAI,EAAC7F,KAAK,CAAE,CAACkF,MAAM,CAACY,OAAO,CAAEzF,YAAY,CAAE,EACzCtB,IAAI,EAAID,OAAO,GAAK,IAAI,CACvB/C,KAAA,CAAAqJ,aAAA,CAACS,iBAAI,EAAC7F,KAAK,CAAEgF,SAAU,CAACxE,MAAM,CAAG,GAAEA,MAAO,iBAAiB,EACzDzE,KAAA,CAAAqJ,aAAA,CAACW,aAAI,EACHC,MAAM,CAAEjH,IAAK,CACbkH,IAAI,CAAExB,eAAe,OAAfA,eAAe,CAAIf,QAAS,CAClCM,KAAK,CACH,MAAO,CAAAQ,gBAAgB,GAAK,QAAQ,CAChCA,gBAAgB,CAChBrF,SACL,CACF,CACG,CAAC,CACL,IAAI,CACPL,OAAO,CACN/C,KAAA,CAAAqJ,aAAA,CAACc,0BAAiB,EAChBD,IAAI,CAAExB,eAAe,OAAfA,eAAe,CAAIf,QAAS,CAClCM,KAAK,CACH,MAAO,CAAAQ,gBAAgB,GAAK,QAAQ,CAChCA,gBAAgB,CAChBrF,SACL,CACDa,KAAK,CAAEgF,SAAU,CAClB,CAAC,CACA,IAAI,CACRjJ,KAAA,CAAAqJ,aAAA,CAACe,aAAI,EACHC,OAAO,CAAC,YAAY,CACpBC,UAAU,CAAE,KAAM,CAClBC,aAAa,CAAE,CAAE,CACjB9F,MAAM,CAAG,GAAEA,MAAO,OAAO,CACzBR,KAAK,CAAE,CACLkF,MAAM,CAACqB,KAAK,CACZ,CAACnF,IAAI,EAAI8D,MAAM,CAACsB,QAAQ,CACxBpF,IAAI,GACDJ,MAAM,CAAC,MAAM,CAAC,CACXjC,IAAI,EAAID,OAAO,CACboG,MAAM,CAACuB,kBAAkB,CACzBvB,MAAM,CAACwB,YAAY,CACrBxB,MAAM,CAACyB,QAAQ,CAAC,CACtBjI,OAAO,EAAIwG,MAAM,CAAC0B,YAAY,CAC9BxG,SAAS,EAAI8E,MAAM,CAAC2B,cAAc,CAClC9B,SAAS,CACTzE,UAAU,CACV,CACFK,qBAAqB,CAAEA,qBAAsB,EAE5CrB,QACG,CACF,CACS,CACV,CAAC,CAEd,CAAC,CAED,GAAM,CAAA4F,MAAM,CAAGlC,uBAAU,CAAC8D,MAAM,CAAC,CAC/BvB,MAAM,CAAE,CACNwB,QAAQ,CAAE,EAAE,CACZC,WAAW,CAAE,OACf,CAAC,CACDtI,OAAO,CAAE,CACPqI,QAAQ,CAAE,MACZ,CAAC,CACDjB,OAAO,CAAE,CACPb,aAAa,CAAE,KAAK,CACpBgC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAClB,CAAC,CACDnI,IAAI,CAAE,CACJoI,UAAU,CAAE,EAAE,CACdC,WAAW,CAAE,CAAC,CAChB,CAAC,CACDjC,WAAW,CAAE,CACXiC,WAAW,CAAE,EAAE,CACfD,UAAU,CAAE,CAAC,CACf,CAAC,CAEDE,OAAO,CAAE,CACPF,UAAU,CAAE,EAAE,CACdC,WAAW,CAAE,CAAC,EAChB,CAAC,CACDE,cAAc,CAAE,CACdH,UAAU,CAAE,CAAC,CACbC,WAAW,CAAE,CACf,CAAC,CACDG,cAAc,CAAE,CACdJ,UAAU,CAAE,CAAC,EAAE,CACfC,WAAW,CAAE,EACf,CAAC,CACDI,qBAAqB,CAAE,CACrBL,UAAU,CAAE,CAAC,CACbC,WAAW,CAAE,CACf,CAAC,CACDK,eAAe,CAAE,CACfN,UAAU,CAAE,EAAE,CACdC,WAAW,CAAE,CAAC,CAChB,CAAC,CACDM,sBAAsB,CAAE,CACtBP,UAAU,CAAE,CAAC,CACbC,WAAW,CAAE,CACf,CAAC,CACDO,sBAAsB,CAAE,CACtBR,UAAU,CAAE,CAAC,CAAC,CACdC,WAAW,CAAE,EACf,CAAC,CACDQ,6BAA6B,CAAE,CAC7BT,UAAU,CAAE,CAAC,CACbC,WAAW,CAAE,CACf,CAAC,CAEDb,KAAK,CAAE,CACLsB,SAAS,CAAE,QAAQ,CACnBC,cAAc,CAAE,CAAC,CACjBC,gBAAgB,CAAE,EACpB,CAAC,CACDvB,QAAQ,CAAE,CACRwB,aAAa,CAAE,CACjB,CAAC,CACDpB,YAAY,CAAE,CACZmB,gBAAgB,CAAE,CACpB,CAAC,CACDlB,cAAc,CAAE,CACdoB,aAAa,CAAE,WACjB,CAAC,CACDtB,QAAQ,CAAE,CACRmB,cAAc,CAAE,EAAE,CAClBC,gBAAgB,CAAE,EACpB,CAAC,CACDrB,YAAY,CAAE,CACZqB,gBAAgB,CAAE,EACpB,CAAC,CACDtB,kBAAkB,CAAE,CAClBsB,gBAAgB,CAAE,EACpB,CACF,CAAC,CAAC,KAAAG,QAAA,CAAAC,OAAA,CAAAzK,OAAA,CAEa,GAAA0K,sBAAU,EAAChK,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
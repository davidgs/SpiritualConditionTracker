{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _useLatestCallback=_interopRequireDefault(require(\"use-latest-callback\"));var _BottomNavigationBar=_interopRequireDefault(require(\"./BottomNavigationBar\"));var _BottomNavigationRouteScreen=_interopRequireDefault(require(\"./BottomNavigationRouteScreen\"));var _theming=require(\"../../core/theming\");var _useAnimatedValueArray=_interopRequireDefault(require(\"../../utils/useAnimatedValueArray\"));var _excluded=[\"component\"];function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var FAR_FAR_AWAY=_reactNative.Platform.OS==='web'?0:9999;var SceneComponent=React.memo(function(_ref){var component=_ref.component,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);return React.createElement(component,rest);});var BottomNavigation=function BottomNavigation(_ref2){var navigationState=_ref2.navigationState,renderScene=_ref2.renderScene,renderIcon=_ref2.renderIcon,renderLabel=_ref2.renderLabel,renderTouchable=_ref2.renderTouchable,getLabelText=_ref2.getLabelText,getBadge=_ref2.getBadge,getColor=_ref2.getColor,getAccessibilityLabel=_ref2.getAccessibilityLabel,getTestID=_ref2.getTestID,activeColor=_ref2.activeColor,inactiveColor=_ref2.inactiveColor,_ref2$keyboardHidesNa=_ref2.keyboardHidesNavigationBar,keyboardHidesNavigationBar=_ref2$keyboardHidesNa===void 0?_reactNative.Platform.OS==='android':_ref2$keyboardHidesNa,barStyle=_ref2.barStyle,_ref2$labeled=_ref2.labeled,labeled=_ref2$labeled===void 0?true:_ref2$labeled,style=_ref2.style,activeIndicatorStyle=_ref2.activeIndicatorStyle,_ref2$sceneAnimationE=_ref2.sceneAnimationEnabled,sceneAnimationEnabled=_ref2$sceneAnimationE===void 0?false:_ref2$sceneAnimationE,_ref2$sceneAnimationT=_ref2.sceneAnimationType,sceneAnimationType=_ref2$sceneAnimationT===void 0?'opacity':_ref2$sceneAnimationT,sceneAnimationEasing=_ref2.sceneAnimationEasing,onTabPress=_ref2.onTabPress,onTabLongPress=_ref2.onTabLongPress,onIndexChange=_ref2.onIndexChange,shiftingProp=_ref2.shifting,safeAreaInsets=_ref2.safeAreaInsets,_ref2$labelMaxFontSiz=_ref2.labelMaxFontSizeMultiplier,labelMaxFontSizeMultiplier=_ref2$labelMaxFontSiz===void 0?1:_ref2$labelMaxFontSiz,compactProp=_ref2.compact,_ref2$testID=_ref2.testID,testID=_ref2$testID===void 0?'bottom-navigation':_ref2$testID,themeOverrides=_ref2.theme,_ref2$getLazy=_ref2.getLazy,getLazy=_ref2$getLazy===void 0?function(_ref3){var route=_ref3.route;return route.lazy;}:_ref2$getLazy;var theme=(0,_theming.useInternalTheme)(themeOverrides);var scale=theme.animation.scale;var compact=compactProp!=null?compactProp:!theme.isV3;var shifting=shiftingProp!=null?shiftingProp:theme.isV3?false:navigationState.routes.length>3;if(shifting&&navigationState.routes.length<2){shifting=false;console.warn('BottomNavigation needs at least 2 tabs to run shifting animation');}var focusedKey=navigationState.routes[navigationState.index].key;var tabsPositionAnims=(0,_useAnimatedValueArray.default)(navigationState.routes.map(function(_,i){return i===navigationState.index?0:i>=navigationState.index?1:-1;}));var offsetsAnims=(0,_useAnimatedValueArray.default)(navigationState.routes.map(function(_,i){return i===navigationState.index?0:1;}));var _React$useState=React.useState([focusedKey]),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),loaded=_React$useState2[0],setLoaded=_React$useState2[1];if(!loaded.includes(focusedKey)){setLoaded(function(loaded){return[].concat((0,_toConsumableArray2.default)(loaded),[focusedKey]);});}var animateToIndex=React.useCallback(function(index){_reactNative.Animated.parallel((0,_toConsumableArray2.default)(navigationState.routes.map(function(_,i){return _reactNative.Animated.timing(tabsPositionAnims[i],{toValue:i===index?0:i>=index?1:-1,duration:theme.isV3||shifting?150*scale:0,useNativeDriver:true,easing:sceneAnimationEasing});}))).start(function(_ref4){var finished=_ref4.finished;if(finished){offsetsAnims.forEach(function(offset,i){if(i===index){offset.setValue(0);}else{offset.setValue(1);}});}});},[shifting,navigationState.routes,offsetsAnims,scale,tabsPositionAnims,sceneAnimationEasing,theme]);React.useEffect(function(){animateToIndex(navigationState.index);},[]);var prevNavigationState=React.useRef();React.useEffect(function(){offsetsAnims.forEach(function(offset,i){var _prevNavigationState$;if(i===navigationState.index||i===((_prevNavigationState$=prevNavigationState.current)===null||_prevNavigationState$===void 0?void 0:_prevNavigationState$.index)){offset.setValue(0);}});animateToIndex(navigationState.index);},[navigationState.index,animateToIndex,offsetsAnims]);var handleTabPress=(0,_useLatestCallback.default)(function(event){onTabPress===null||onTabPress===void 0?void 0:onTabPress(event);if(event.defaultPrevented){return;}var index=navigationState.routes.findIndex(function(route){return event.route.key===route.key;});if(index!==navigationState.index){prevNavigationState.current=navigationState;onIndexChange(index);}});var jumpTo=(0,_useLatestCallback.default)(function(key){var index=navigationState.routes.findIndex(function(route){return route.key===key;});prevNavigationState.current=navigationState;onIndexChange(index);});var routes=navigationState.routes;var colors=theme.colors;return React.createElement(_reactNative.View,{style:[styles.container,style],testID:testID},React.createElement(_reactNative.View,{style:[styles.content,{backgroundColor:colors===null||colors===void 0?void 0:colors.background}]},routes.map(function(route,index){var _prevNavigationState$2;if(getLazy({route:route})!==false&&!loaded.includes(route.key)){return null;}var focused=navigationState.index===index;var previouslyFocused=((_prevNavigationState$2=prevNavigationState.current)===null||_prevNavigationState$2===void 0?void 0:_prevNavigationState$2.index)===index;var countAlphaOffscreen=sceneAnimationEnabled&&(focused||previouslyFocused);var renderToHardwareTextureAndroid=sceneAnimationEnabled&&focused;var opacity=sceneAnimationEnabled?tabsPositionAnims[index].interpolate({inputRange:[-1,0,1],outputRange:[0,1,0]}):focused?1:0;var offsetTarget=focused?0:FAR_FAR_AWAY;var top=sceneAnimationEnabled?offsetsAnims[index].interpolate({inputRange:[0,1],outputRange:[0,offsetTarget]}):offsetTarget;var left=sceneAnimationType==='shifting'?tabsPositionAnims[index].interpolate({inputRange:[-1,0,1],outputRange:[-50,0,50]}):0;var zIndex=focused?1:0;return React.createElement(_BottomNavigationRouteScreen.default,{key:route.key,pointerEvents:focused?'auto':'none',accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',index:index,visibility:opacity,style:[_reactNative.StyleSheet.absoluteFill,{zIndex:zIndex}],collapsable:false,removeClippedSubviews:_reactNative.Platform.OS==='ios'?navigationState.index!==index:true},React.createElement(_reactNative.Animated.View,_extends({},_reactNative.Platform.OS==='android'&&{needsOffscreenAlphaCompositing:countAlphaOffscreen},{renderToHardwareTextureAndroid:renderToHardwareTextureAndroid,style:[styles.content,{opacity:opacity,transform:[{translateX:left},{translateY:top}]}]}),renderScene({route:route,jumpTo:jumpTo})));})),React.createElement(_BottomNavigationBar.default,{navigationState:navigationState,renderIcon:renderIcon,renderLabel:renderLabel,renderTouchable:renderTouchable,getLabelText:getLabelText,getBadge:getBadge,getColor:getColor,getAccessibilityLabel:getAccessibilityLabel,getTestID:getTestID,activeColor:activeColor,inactiveColor:inactiveColor,keyboardHidesNavigationBar:keyboardHidesNavigationBar,style:barStyle,activeIndicatorStyle:activeIndicatorStyle,labeled:labeled,animationEasing:sceneAnimationEasing,onTabPress:handleTabPress,onTabLongPress:onTabLongPress,shifting:shifting,safeAreaInsets:safeAreaInsets,labelMaxFontSizeMultiplier:labelMaxFontSizeMultiplier,compact:compact,testID:`${testID}-bar`,theme:theme}));};BottomNavigation.SceneMap=function(scenes){return function(_ref5){var route=_ref5.route,jumpTo=_ref5.jumpTo;return React.createElement(SceneComponent,{key:route.key,component:scenes[route.key?route.key:''],route:route,jumpTo:jumpTo});};};BottomNavigation.Bar=_BottomNavigationBar.default;var _default=exports.default=BottomNavigation;var styles=_reactNative.StyleSheet.create({container:{flex:1,overflow:'hidden'},content:{flex:1}});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_useLatestCallback","_interopRequireDefault","_BottomNavigationBar","_BottomNavigationRouteScreen","_theming","_useAnimatedValueArray","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","FAR_FAR_AWAY","Platform","OS","SceneComponent","memo","_ref","component","rest","_objectWithoutProperties2","createElement","BottomNavigation","_ref2","navigationState","renderScene","renderIcon","renderLabel","renderTouchable","getLabelText","getBadge","getColor","getAccessibilityLabel","getTestID","activeColor","inactiveColor","_ref2$keyboardHidesNa","keyboardHidesNavigationBar","barStyle","_ref2$labeled","labeled","style","activeIndicatorStyle","_ref2$sceneAnimationE","sceneAnimationEnabled","_ref2$sceneAnimationT","sceneAnimationType","sceneAnimationEasing","onTabPress","onTabLongPress","onIndexChange","shiftingProp","shifting","safeAreaInsets","_ref2$labelMaxFontSiz","labelMaxFontSizeMultiplier","compactProp","compact","_ref2$testID","testID","themeOverrides","theme","_ref2$getLazy","getLazy","_ref3","route","lazy","useInternalTheme","scale","animation","isV3","routes","length","console","warn","focusedKey","index","key","tabsPositionAnims","useAnimatedValueArray","map","_","offsetsAnims","_React$useState","useState","_React$useState2","_slicedToArray2","loaded","setLoaded","includes","concat","_toConsumableArray2","animateToIndex","useCallback","Animated","parallel","timing","toValue","duration","useNativeDriver","easing","start","_ref4","finished","forEach","offset","setValue","useEffect","prevNavigationState","useRef","_prevNavigationState$","current","handleTabPress","useLatestCallback","event","defaultPrevented","findIndex","jumpTo","colors","View","styles","container","content","backgroundColor","background","_prevNavigationState$2","focused","previouslyFocused","countAlphaOffscreen","renderToHardwareTextureAndroid","opacity","interpolate","inputRange","outputRange","offsetTarget","top","left","zIndex","BottomNavigationRouteScreen","pointerEvents","accessibilityElementsHidden","importantForAccessibility","visibility","StyleSheet","absoluteFill","collapsable","removeClippedSubviews","_extends","needsOffscreenAlphaCompositing","transform","translateX","translateY","BottomNavigationBar","animationEasing","SceneMap","scenes","_ref5","Bar","_default","exports","create","flex","overflow"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/BottomNavigation/BottomNavigation.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  EasingFunction,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport useLatestCallback from 'use-latest-callback';\n\nimport BottomNavigationBar from './BottomNavigationBar';\nimport BottomNavigationRouteScreen from './BottomNavigationRouteScreen';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport type { IconSource } from '../Icon';\nimport { Props as TouchableRippleProps } from '../TouchableRipple/TouchableRipple';\n\nexport type BaseRoute = {\n  key: string;\n  title?: string;\n  focusedIcon?: IconSource;\n  unfocusedIcon?: IconSource;\n  badge?: string | number | boolean;\n  /**\n   * @deprecated In v5.x works only with theme version 2.\n   */\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n  lazy?: boolean;\n};\n\ntype NavigationState<Route extends BaseRoute> = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps<Route extends BaseRoute> = TouchableRippleProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: ColorValue;\n};\n\nexport type Props<Route extends BaseRoute> = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `false` with theme version 3 and `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   * Note that you need at least 2 tabs be able to run this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * Whether tabs should be spread across the entire width.\n   */\n  compact?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `focusedIcon`:  icon to use as the focused tab icon, can be a string, an image source or a react component @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * - `unfocusedIcon`:  icon to use as the unfocused tab icon, can be a string, an image source or a react component @supported Available in v5.x with theme version 3\n   * - `color`: color to use as background color for shifting bottom navigation @deprecatedProperty In v5.x works only with theme version 2.\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n   *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n   *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n   *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState<Route>;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `Pressable` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps<Route>) => React.ReactNode;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get lazy for the current screen. Uses true by default.\n   */\n  getLazy?: (props: { route: Route }) => boolean | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Function to execute on tab long press. It receives the route for the pressed tab, useful for things like custom action when longed pressed.\n   */\n  onTabLongPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether animation is enabled for scenes transitions in `shifting` mode.\n   * By default, the scenes cross-fade during tab change when `shifting` is enabled.\n   * Specify `sceneAnimationEnabled` as `false` to disable the animation.\n   */\n  sceneAnimationEnabled?: boolean;\n  /**\n   * The scene animation effect. Specify `'shifting'` for a different effect.\n   * By default, 'opacity' will be used.\n   */\n  sceneAnimationType?: 'opacity' | 'shifting';\n  /**\n   * The scene animation Easing.\n   */\n  sceneAnimationEasing?: EasingFunction | undefined;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Style for the bottom navigation bar.  You can pass a custom background color here:\n   *\n   * ```js\n   * barStyle={{ backgroundColor: '#694fad' }}\n   * ```\n   */\n  barStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: StyleProp<ViewStyle>;\n  activeIndicatorStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\n\nconst SceneComponent = React.memo(({ component, ...rest }: any) =>\n  React.createElement(component, rest)\n);\n\n/**\n * BottomNavigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile. If you want to use the navigation bar only see [`BottomNavigation.Bar`](BottomNavigationBar).\n *\n * By default BottomNavigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/docs/guides/theming#dark-theme) for more information.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * const NotificationsRoute = () => <Text>Notifications</Text>;\n *\n * const MyComponent = () => {\n *   const [index, setIndex] = React.useState(0);\n *   const [routes] = React.useState([\n *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n *   ]);\n *\n *   const renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *     notifications: NotificationsRoute,\n *   });\n *\n *   return (\n *     <BottomNavigation\n *       navigationState={{ index, routes }}\n *       onIndexChange={setIndex}\n *       renderScene={renderScene}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst BottomNavigation = <Route extends BaseRoute>({\n  navigationState,\n  renderScene,\n  renderIcon,\n  renderLabel,\n  renderTouchable,\n  getLabelText,\n  getBadge,\n  getColor,\n  getAccessibilityLabel,\n  getTestID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = Platform.OS === 'android',\n  barStyle,\n  labeled = true,\n  style,\n  activeIndicatorStyle,\n  sceneAnimationEnabled = false,\n  sceneAnimationType = 'opacity',\n  sceneAnimationEasing,\n  onTabPress,\n  onTabLongPress,\n  onIndexChange,\n  shifting: shiftingProp,\n  safeAreaInsets,\n  labelMaxFontSizeMultiplier = 1,\n  compact: compactProp,\n  testID = 'bottom-navigation',\n  theme: themeOverrides,\n  getLazy = ({ route }: { route: Route }) => route.lazy,\n}: Props<Route>) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { scale } = theme.animation;\n  const compact = compactProp ?? !theme.isV3;\n  let shifting =\n    shiftingProp ?? (theme.isV3 ? false : navigationState.routes.length > 3);\n\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n    console.warn(\n      'BottomNavigation needs at least 2 tabs to run shifting animation'\n    );\n  }\n\n  const focusedKey = navigationState.routes[navigationState.index].key;\n\n  /**\n   * Active state of individual tab item positions:\n   * -1 if they're before the active tab, 0 if they're active, 1 if they're after the active tab\n   */\n  const tabsPositionAnims = useAnimatedValueArray(\n    navigationState.routes.map((_, i) =>\n      i === navigationState.index ? 0 : i >= navigationState.index ? 1 : -1\n    )\n  );\n\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecessary re-renders.\n   */\n  const offsetsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // offscreen === 1, normal === 0\n      (_, i) => (i === navigationState.index ? 0 : 1)\n    )\n  );\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState<string[]>([focusedKey]);\n\n  if (!loaded.includes(focusedKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded((loaded) => [...loaded, focusedKey]);\n  }\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      Animated.parallel([\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsPositionAnims[i], {\n            toValue: i === index ? 0 : i >= index ? 1 : -1,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: sceneAnimationEasing,\n          })\n        ),\n      ]).start(({ finished }) => {\n        if (finished) {\n          // Position all inactive screens offscreen to save memory usage\n          // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n          offsetsAnims.forEach((offset, i) => {\n            if (i === index) {\n              offset.setValue(0);\n            } else {\n              offset.setValue(1);\n            }\n          });\n        }\n      });\n    },\n    [\n      shifting,\n      navigationState.routes,\n      offsetsAnims,\n      scale,\n      tabsPositionAnims,\n      sceneAnimationEasing,\n      theme,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const prevNavigationState = React.useRef<NavigationState<Route>>();\n\n  React.useEffect(() => {\n    // Reset offsets of previous and current tabs before animation\n    offsetsAnims.forEach((offset, i) => {\n      if (\n        i === navigationState.index ||\n        i === prevNavigationState.current?.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  const handleTabPress = useLatestCallback(\n    (event: { route: Route } & TabPressEvent) => {\n      onTabPress?.(event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      const index = navigationState.routes.findIndex(\n        (route) => event.route.key === route.key\n      );\n\n      if (index !== navigationState.index) {\n        prevNavigationState.current = navigationState;\n        onIndexChange(index);\n      }\n    }\n  );\n\n  const jumpTo = useLatestCallback((key: string) => {\n    const index = navigationState.routes.findIndex(\n      (route) => route.key === key\n    );\n\n    prevNavigationState.current = navigationState;\n    onIndexChange(index);\n  });\n\n  const { routes } = navigationState;\n  const { colors } = theme;\n\n  return (\n    <View style={[styles.container, style]} testID={testID}>\n      <View style={[styles.content, { backgroundColor: colors?.background }]}>\n        {routes.map((route, index) => {\n          if (getLazy({ route }) !== false && !loaded.includes(route.key)) {\n            // Don't render a screen if we've never navigated to it\n            return null;\n          }\n\n          const focused = navigationState.index === index;\n          const previouslyFocused =\n            prevNavigationState.current?.index === index;\n          const countAlphaOffscreen =\n            sceneAnimationEnabled && (focused || previouslyFocused);\n          const renderToHardwareTextureAndroid =\n            sceneAnimationEnabled && focused;\n\n          const opacity = sceneAnimationEnabled\n            ? tabsPositionAnims[index].interpolate({\n                inputRange: [-1, 0, 1],\n                outputRange: [0, 1, 0],\n              })\n            : focused\n            ? 1\n            : 0;\n\n          const offsetTarget = focused ? 0 : FAR_FAR_AWAY;\n\n          const top = sceneAnimationEnabled\n            ? offsetsAnims[index].interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, offsetTarget],\n              })\n            : offsetTarget;\n\n          const left =\n            sceneAnimationType === 'shifting'\n              ? tabsPositionAnims[index].interpolate({\n                  inputRange: [-1, 0, 1],\n                  outputRange: [-50, 0, 50],\n                })\n              : 0;\n\n          const zIndex = focused ? 1 : 0;\n\n          return (\n            <BottomNavigationRouteScreen\n              key={route.key}\n              pointerEvents={focused ? 'auto' : 'none'}\n              accessibilityElementsHidden={!focused}\n              importantForAccessibility={\n                focused ? 'auto' : 'no-hide-descendants'\n              }\n              index={index}\n              visibility={opacity}\n              style={[StyleSheet.absoluteFill, { zIndex }]}\n              collapsable={false}\n              removeClippedSubviews={\n                // On iOS, set removeClippedSubviews to true only when not focused\n                // This is an workaround for a bug where the clipped view never re-appears\n                Platform.OS === 'ios' ? navigationState.index !== index : true\n              }\n            >\n              <Animated.View\n                {...(Platform.OS === 'android' && {\n                  needsOffscreenAlphaCompositing: countAlphaOffscreen,\n                })}\n                renderToHardwareTextureAndroid={renderToHardwareTextureAndroid}\n                style={[\n                  styles.content,\n                  {\n                    opacity,\n                    transform: [{ translateX: left }, { translateY: top }],\n                  },\n                ]}\n              >\n                {renderScene({ route, jumpTo })}\n              </Animated.View>\n            </BottomNavigationRouteScreen>\n          );\n        })}\n      </View>\n      <BottomNavigationBar\n        navigationState={navigationState}\n        renderIcon={renderIcon}\n        renderLabel={renderLabel}\n        renderTouchable={renderTouchable}\n        getLabelText={getLabelText}\n        getBadge={getBadge}\n        getColor={getColor}\n        getAccessibilityLabel={getAccessibilityLabel}\n        getTestID={getTestID}\n        activeColor={activeColor}\n        inactiveColor={inactiveColor}\n        keyboardHidesNavigationBar={keyboardHidesNavigationBar}\n        style={barStyle}\n        activeIndicatorStyle={activeIndicatorStyle}\n        labeled={labeled}\n        animationEasing={sceneAnimationEasing}\n        onTabPress={handleTabPress}\n        onTabLongPress={onTabLongPress}\n        shifting={shifting}\n        safeAreaInsets={safeAreaInsets}\n        labelMaxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n        compact={compact}\n        testID={`${testID}-bar`}\n        theme={theme}\n      />\n    </View>\n  );\n};\n\n/**\n * Function which takes a map of route keys to components.\n * Pure components are used to minimize re-rendering of the pages.\n * This drastically improves the animation performance.\n */\nBottomNavigation.SceneMap = <Route extends BaseRoute>(scenes: {\n  [key: string]: React.ComponentType<{\n    route: Route;\n    jumpTo: (key: string) => void;\n  }>;\n}) => {\n  return ({\n    route,\n    jumpTo,\n  }: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => (\n    <SceneComponent\n      key={route.key}\n      component={scenes[route.key ? route.key : '']}\n      route={route}\n      jumpTo={jumpTo}\n    />\n  );\n};\n\n// @component ./BottomNavigationBar.tsx\nBottomNavigation.Bar = BottomNavigationBar;\n\nexport default BottomNavigation;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
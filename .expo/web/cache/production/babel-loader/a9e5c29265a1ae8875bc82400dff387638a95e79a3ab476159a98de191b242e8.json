{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.TextInputAffix=exports.AffixAdornment=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _enums=require(\"./enums\");var _utils=require(\"./utils\");var _theming=require(\"../../../core/theming\");var _helpers=require(\"../helpers\");var AffixContext=_react.default.createContext({textStyle:{fontFamily:'',color:''},topPosition:null,side:_enums.AdornmentSide.Left});var AffixAdornment=exports.AffixAdornment=function AffixAdornment(_ref){var affix=_ref.affix,side=_ref.side,textStyle=_ref.textStyle,topPosition=_ref.topPosition,onLayout=_ref.onLayout,visible=_ref.visible,paddingHorizontal=_ref.paddingHorizontal,maxFontSizeMultiplier=_ref.maxFontSizeMultiplier,testID=_ref.testID,disabled=_ref.disabled;return _react.default.createElement(AffixContext.Provider,{value:{side:side,textStyle:textStyle,topPosition:topPosition,onLayout:onLayout,visible:visible,paddingHorizontal:paddingHorizontal,maxFontSizeMultiplier:maxFontSizeMultiplier,testID:testID,disabled:disabled}},affix);};var TextInputAffix=exports.TextInputAffix=function TextInputAffix(_ref2){var text=_ref2.text,labelStyle=_ref2.textStyle,themeOverrides=_ref2.theme,onTextLayout=_ref2.onLayout,onPress=_ref2.onPress,_ref2$accessibilityLa=_ref2.accessibilityLabel,accessibilityLabel=_ref2$accessibilityLa===void 0?text:_ref2$accessibilityLa;var theme=(0,_theming.useInternalTheme)(themeOverrides);var _getConstants=(0,_helpers.getConstants)(theme.isV3),AFFIX_OFFSET=_getConstants.AFFIX_OFFSET;var _React$useContext=_react.default.useContext(AffixContext),textStyle=_React$useContext.textStyle,onLayout=_React$useContext.onLayout,topPosition=_React$useContext.topPosition,side=_React$useContext.side,visible=_React$useContext.visible,paddingHorizontal=_React$useContext.paddingHorizontal,maxFontSizeMultiplier=_React$useContext.maxFontSizeMultiplier,testID=_React$useContext.testID,disabled=_React$useContext.disabled;var offset=typeof paddingHorizontal==='number'?paddingHorizontal:AFFIX_OFFSET;var style=(0,_defineProperty2.default)({top:topPosition},side,offset);var textColor=(0,_utils.getTextColor)({theme:theme,disabled:disabled});var content=_react.default.createElement(_reactNative.Text,{maxFontSizeMultiplier:maxFontSizeMultiplier,style:[{color:textColor},textStyle,labelStyle],onLayout:onTextLayout,testID:`${testID}-text`},text);return _react.default.createElement(_reactNative.Animated.View,{style:[styles.container,style,{opacity:(visible===null||visible===void 0?void 0:visible.interpolate({inputRange:[0,1],outputRange:[1,0]}))||1}],onLayout:onLayout,testID:testID},onPress?_react.default.createElement(_reactNative.Pressable,{onPress:onPress,accessibilityRole:\"button\",accessibilityLabel:accessibilityLabel},content):content);};TextInputAffix.displayName='TextInput.Affix';var styles=_reactNative.StyleSheet.create({container:{position:'absolute',justifyContent:'center',alignItems:'center'}});var _default=exports.default=TextInputAffix;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_enums","_utils","_theming","_helpers","AffixContext","React","createContext","textStyle","fontFamily","color","topPosition","side","AdornmentSide","Left","AffixAdornment","exports","_ref","affix","onLayout","visible","paddingHorizontal","maxFontSizeMultiplier","testID","disabled","createElement","Provider","value","TextInputAffix","_ref2","text","labelStyle","themeOverrides","theme","onTextLayout","onPress","_ref2$accessibilityLa","accessibilityLabel","useInternalTheme","_getConstants","getConstants","isV3","AFFIX_OFFSET","_React$useContext","useContext","offset","style","_defineProperty2","default","top","textColor","getTextColor","content","Text","Animated","View","styles","container","opacity","interpolate","inputRange","outputRange","Pressable","accessibilityRole","displayName","StyleSheet","create","position","justifyContent","alignItems","_default"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/TextInput/Adornment/TextInputAffix.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  DimensionValue,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport { AdornmentSide } from './enums';\nimport { getTextColor } from './utils';\nimport { useInternalTheme } from '../../../core/theming';\nimport type { ThemeProp } from '../../../types';\nimport { getConstants } from '../helpers';\n\nexport type Props = {\n  /**\n   * Text to show.\n   */\n  text: string;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the affix. This is read by the screen reader when the user taps the affix.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Style that is passed to the Text element.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype ContextState = {\n  topPosition: number | null;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  visible?: Animated.Value;\n  textStyle?: StyleProp<TextStyle>;\n  side: AdornmentSide;\n  paddingHorizontal?: DimensionValue;\n  maxFontSizeMultiplier?: number | undefined | null;\n  testID?: string;\n  disabled?: boolean;\n};\n\nconst AffixContext = React.createContext<ContextState>({\n  textStyle: { fontFamily: '', color: '' },\n  topPosition: null,\n  side: AdornmentSide.Left,\n});\n\nconst AffixAdornment: React.FunctionComponent<\n  {\n    affix: React.ReactNode;\n    testID: string;\n  } & ContextState\n> = ({\n  affix,\n  side,\n  textStyle,\n  topPosition,\n  onLayout,\n  visible,\n  paddingHorizontal,\n  maxFontSizeMultiplier,\n  testID,\n  disabled,\n}) => {\n  return (\n    <AffixContext.Provider\n      value={{\n        side,\n        textStyle,\n        topPosition,\n        onLayout,\n        visible,\n        paddingHorizontal,\n        maxFontSizeMultiplier,\n        testID,\n        disabled,\n      }}\n    >\n      {affix}\n    </AffixContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing text in the TextInput\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       mode=\"outlined\"\n *       label=\"Outlined input\"\n *       placeholder=\"Type something\"\n *       right={<TextInput.Affix text=\"/100\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputAffix = ({\n  text,\n  textStyle: labelStyle,\n  theme: themeOverrides,\n  onLayout: onTextLayout,\n  onPress,\n  accessibilityLabel = text,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { AFFIX_OFFSET } = getConstants(theme.isV3);\n\n  const {\n    textStyle,\n    onLayout,\n    topPosition,\n    side,\n    visible,\n    paddingHorizontal,\n    maxFontSizeMultiplier,\n    testID,\n    disabled,\n  } = React.useContext(AffixContext);\n\n  const offset =\n    typeof paddingHorizontal === 'number' ? paddingHorizontal : AFFIX_OFFSET;\n\n  const style = {\n    top: topPosition,\n    [side]: offset,\n  } as ViewStyle;\n\n  const textColor = getTextColor({ theme, disabled });\n\n  const content = (\n    <Text\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      style={[{ color: textColor }, textStyle, labelStyle]}\n      onLayout={onTextLayout}\n      testID={`${testID}-text`}\n    >\n      {text}\n    </Text>\n  );\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        style,\n        {\n          opacity:\n            visible?.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }) || 1,\n        },\n      ]}\n      onLayout={onLayout}\n      testID={testID}\n    >\n      {onPress ? (\n        <Pressable\n          onPress={onPress}\n          accessibilityRole=\"button\"\n          accessibilityLabel={accessibilityLabel}\n        >\n          {content}\n        </Pressable>\n      ) : (\n        content\n      )}\n    </Animated.View>\n  );\n};\n\nTextInputAffix.displayName = 'TextInput.Affix';\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default TextInputAffix;\n\n// @component-docs ignore-next-line\nexport { TextInputAffix, AffixAdornment };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
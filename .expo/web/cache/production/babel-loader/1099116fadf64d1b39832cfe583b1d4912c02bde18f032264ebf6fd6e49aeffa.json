{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.ensureNativeModulesAreInstalled=ensureNativeModulesAreInstalled;var _reactNative=require(\"react-native\");var _web=require(\"./web\");function ensureNativeModulesAreInstalled(){if(globalThis.expo){return;}try{if(_reactNative.Platform.OS==='web'){(0,_web.registerWebGlobals)();}else{var _NativeModules$ExpoMo;(_NativeModules$ExpoMo=_reactNative.NativeModules.ExpoModulesCore)==null||_NativeModules$ExpoMo.installModules();}}catch(error){console.error(`Unable to install Expo modules: ${error}`);}}","map":{"version":3,"names":["_reactNative","require","_web","ensureNativeModulesAreInstalled","globalThis","expo","Platform","OS","registerWebGlobals","_NativeModules$ExpoMo","NativeModules","ExpoModulesCore","installModules","error","console"],"sources":["/home/runner/workspace/node_modules/expo-modules-core/src/ensureNativeModulesAreInstalled.ts"],"sourcesContent":["import { NativeModules, Platform } from 'react-native';\n\nimport { registerWebGlobals } from './web';\n\n/**\n * Ensures that the native modules are installed in the current runtime.\n * Otherwise, it synchronously calls a native function that installs them.\n */\nexport function ensureNativeModulesAreInstalled(): void {\n  if (globalThis.expo) {\n    return;\n  }\n  try {\n    if (Platform.OS === 'web') {\n      // Requiring web folder sets up the `globalThis.expo` object.\n      registerWebGlobals();\n    } else {\n      // TODO: ExpoModulesCore shouldn't be optional here,\n      // but to keep backwards compatibility let's just ignore it in SDK 50.\n      // In most cases the modules were already installed from the native side.\n      NativeModules.ExpoModulesCore?.installModules();\n    }\n  } catch (error) {\n    console.error(`Unable to install Expo modules: ${error}`);\n  }\n}\n"],"mappings":"iIAAA,IAAAA,YAAA,CAAAC,OAAA,iBAEA,IAAAC,IAAA,CAAAD,OAAA,UAMO,QAAS,CAAAE,+BAA+BA,CAAA,CAAS,CACtD,GAAIC,UAAU,CAACC,IAAI,CAAE,CACnB,OACF,CACA,GAAI,CACF,GAAIC,qBAAQ,CAACC,EAAE,GAAK,KAAK,CAAE,CAEzB,GAAAC,uBAAkB,EAAC,CAAC,CACtB,CAAC,IAAM,KAAAC,qBAAA,CAIL,CAAAA,qBAAA,CAAAC,0BAAa,CAACC,eAAe,SAA7BF,qBAAA,CAA+BG,cAAc,CAAC,CAAC,CACjD,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCA,KAAK,EAAE,CAAC,CAC3D,CACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
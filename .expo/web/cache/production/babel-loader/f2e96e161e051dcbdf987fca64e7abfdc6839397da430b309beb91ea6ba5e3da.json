{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.Asset=exports.ANDROID_EMBEDDED_URL_BASE_RESOURCE=void 0;var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _registry=require(\"@react-native/assets-registry/registry\");var _expoModulesCore=require(\"expo-modules-core\");var _AssetSources=require(\"./AssetSources\");var AssetUris=_interopRequireWildcard(require(\"./AssetUris\"));var _ExpoAsset=require(\"./ExpoAsset\");var ImageAssets=_interopRequireWildcard(require(\"./ImageAssets\"));var _LocalAssets=require(\"./LocalAssets\");var _PlatformUtils=require(\"./PlatformUtils\");var _resolveAssetSource2=_interopRequireDefault(require(\"./resolveAssetSource\"));function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}var ANDROID_EMBEDDED_URL_BASE_RESOURCE=exports.ANDROID_EMBEDDED_URL_BASE_RESOURCE='file:///android_res/';var Asset=exports.Asset=function(){function Asset(_ref){var name=_ref.name,type=_ref.type,_ref$hash=_ref.hash,hash=_ref$hash===void 0?null:_ref$hash,uri=_ref.uri,width=_ref.width,height=_ref.height;(0,_classCallCheck2.default)(this,Asset);this.hash=null;this.localUri=null;this.width=null;this.height=null;this.downloading=false;this.downloaded=false;this._downloadCallbacks=[];this.name=name;this.type=type;this.hash=hash;this.uri=uri;if(typeof width==='number'){this.width=width;}if(typeof height==='number'){this.height=height;}if(hash){var _this$localUri;this.localUri=(0,_LocalAssets.getLocalAssetUri)(hash,type);if((_this$localUri=this.localUri)!=null&&_this$localUri.startsWith(ANDROID_EMBEDDED_URL_BASE_RESOURCE)){this.uri=this.localUri;this.localUri=null;}else if(this.localUri){this.downloaded=true;}}if(_expoModulesCore.Platform.OS==='web'){if(!name){this.name=AssetUris.getFilename(uri);}if(!type){this.type=AssetUris.getFileExtension(uri);}}}return(0,_createClass2.default)(Asset,[{key:\"downloadAsync\",value:function(){var _downloadAsync2=(0,_asyncToGenerator2.default)(function*(){var _this=this;if(this.downloaded){return this;}if(this.downloading){yield new Promise(function(resolve,reject){_this._downloadCallbacks.push({resolve:resolve,reject:reject});});return this;}this.downloading=true;try{if(_expoModulesCore.Platform.OS==='web'){if(ImageAssets.isImageType(this.type)){var _yield$ImageAssets$ge=yield ImageAssets.getImageInfoAsync(this.uri),width=_yield$ImageAssets$ge.width,height=_yield$ImageAssets$ge.height,name=_yield$ImageAssets$ge.name;this.width=width;this.height=height;this.name=name;}else{this.name=AssetUris.getFilename(this.uri);}}this.localUri=yield(0,_ExpoAsset.downloadAsync)(this.uri,this.hash,this.type);this.downloaded=true;this._downloadCallbacks.forEach(function(_ref2){var resolve=_ref2.resolve;return resolve();});}catch(e){this._downloadCallbacks.forEach(function(_ref3){var reject=_ref3.reject;return reject(e);});throw e;}finally{this.downloading=false;this._downloadCallbacks=[];}return this;});function downloadAsync(){return _downloadAsync2.apply(this,arguments);}return downloadAsync;}()}],[{key:\"loadAsync\",value:function loadAsync(moduleId){var moduleIds=Array.isArray(moduleId)?moduleId:[moduleId];return Promise.all(moduleIds.map(function(moduleId){return Asset.fromModule(moduleId).downloadAsync();}));}},{key:\"fromModule\",value:function fromModule(virtualAssetModule){if(typeof virtualAssetModule==='string'){return Asset.fromURI(virtualAssetModule);}if(typeof virtualAssetModule==='object'&&'uri'in virtualAssetModule&&typeof virtualAssetModule.uri==='string'){var extension=AssetUris.getFileExtension(virtualAssetModule.uri);return new Asset({name:'',type:extension.startsWith('.')?extension.substring(1):extension,hash:null,uri:virtualAssetModule.uri,width:virtualAssetModule.width,height:virtualAssetModule.height});}var meta=(0,_registry.getAssetByID)(virtualAssetModule);if(!meta){throw new Error(`Module \"${virtualAssetModule}\" is missing from the asset registry`);}if(!_PlatformUtils.IS_ENV_WITH_LOCAL_ASSETS){var _resolveAssetSource=(0,_resolveAssetSource2.default)(virtualAssetModule),uri=_resolveAssetSource.uri;var asset=new Asset({name:meta.name,type:meta.type,hash:meta.hash,uri:uri,width:meta.width,height:meta.height});if(_expoModulesCore.Platform.OS==='android'&&!uri.includes(':')&&(meta.width||meta.height)){asset.localUri=asset.uri;asset.downloaded=true;}Asset.byHash[meta.hash]=asset;return asset;}return Asset.fromMetadata(meta);}},{key:\"fromMetadata\",value:function fromMetadata(meta){var metaHash=meta.hash;if(Asset.byHash[metaHash]){return Asset.byHash[metaHash];}var _selectAssetSource=(0,_AssetSources.selectAssetSource)(meta),uri=_selectAssetSource.uri,hash=_selectAssetSource.hash;var asset=new Asset({name:meta.name,type:meta.type,hash:hash,uri:uri,width:meta.width,height:meta.height});Asset.byHash[metaHash]=asset;return asset;}},{key:\"fromURI\",value:function fromURI(uri){if(Asset.byUri[uri]){return Asset.byUri[uri];}var type='';if(uri.indexOf(';base64')>-1){type=uri.split(';')[0].split('/')[1];}else{var extension=AssetUris.getFileExtension(uri);type=extension.startsWith('.')?extension.substring(1):extension;}var asset=new Asset({name:'',type:type,hash:null,uri:uri});Asset.byUri[uri]=asset;return asset;}}]);}();Asset.byHash={};Asset.byUri={};","map":{"version":3,"names":["_registry","require","_expoModulesCore","_AssetSources","AssetUris","_interopRequireWildcard","_ExpoAsset","ImageAssets","_LocalAssets","_PlatformUtils","_resolveAssetSource2","_interopRequireDefault","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ANDROID_EMBEDDED_URL_BASE_RESOURCE","exports","Asset","_ref","name","type","_ref$hash","hash","uri","width","height","_classCallCheck2","localUri","downloading","downloaded","_downloadCallbacks","_this$localUri","getLocalAssetUri","startsWith","Platform","OS","getFilename","getFileExtension","_createClass2","key","value","_downloadAsync2","_asyncToGenerator2","_this","Promise","resolve","reject","push","isImageType","_yield$ImageAssets$ge","getImageInfoAsync","downloadAsync","forEach","_ref2","_ref3","apply","arguments","loadAsync","moduleId","moduleIds","Array","isArray","all","map","fromModule","virtualAssetModule","fromURI","extension","substring","meta","getAssetByID","Error","IS_ENV_WITH_LOCAL_ASSETS","_resolveAssetSource","resolveAssetSource","asset","includes","byHash","fromMetadata","metaHash","_selectAssetSource","selectAssetSource","byUri","indexOf","split"],"sources":["/home/runner/workspace/node_modules/expo-asset/src/Asset.ts"],"sourcesContent":["import { getAssetByID } from '@react-native/assets-registry/registry';\nimport { Platform } from 'expo-modules-core';\n\nimport { AssetMetadata, selectAssetSource } from './AssetSources';\nimport * as AssetUris from './AssetUris';\nimport { downloadAsync } from './ExpoAsset';\nimport * as ImageAssets from './ImageAssets';\nimport { getLocalAssetUri } from './LocalAssets';\nimport { IS_ENV_WITH_LOCAL_ASSETS } from './PlatformUtils';\nimport resolveAssetSource from './resolveAssetSource';\n\n// @docsMissing\nexport type AssetDescriptor = {\n  name: string;\n  type: string;\n  hash?: string | null;\n  uri: string;\n  width?: number | null;\n  height?: number | null;\n};\n\ntype DownloadPromiseCallbacks = {\n  resolve: () => void;\n  reject: (error: Error) => void;\n};\n\nexport { AssetMetadata };\n\n/**\n * Android resource URL prefix.\n * @hidden\n */\nexport const ANDROID_EMBEDDED_URL_BASE_RESOURCE = 'file:///android_res/';\n\n/**\n * The `Asset` class represents an asset in your app. It gives metadata about the asset (such as its\n * name and type) and provides facilities to load the asset data.\n */\nexport class Asset {\n  private static byHash: Record<string, Asset | undefined> = {};\n  private static byUri: Record<string, Asset | undefined> = {};\n\n  /**\n   * The name of the asset file without the extension. Also without the part from `@` onward in the\n   * filename (used to specify scale factor for images).\n   */\n  public name: string;\n  /**\n   * The extension of the asset filename.\n   */\n  public readonly type: string;\n  /**\n   * The MD5 hash of the asset's data.\n   */\n  public readonly hash: string | null = null;\n  /**\n   * A URI that points to the asset's data on the remote server. When running the published version\n   * of your app, this refers to the location on Expo's asset server where Expo has stored your\n   * asset. When running the app from Expo CLI during development, this URI points to Expo CLI's\n   * server running on your computer and the asset is served directly from your computer. If you\n   * are not using Classic Updates (legacy), this field should be ignored as we ensure your assets\n   * are on device before running your application logic.\n   */\n  public readonly uri: string;\n  /**\n   * If the asset has been downloaded (by calling [`downloadAsync()`](#downloadasync)), the\n   * `file://` URI pointing to the local file on the device that contains the asset data.\n   */\n  public localUri: string | null = null;\n  /**\n   * If the asset is an image, the width of the image data divided by the scale factor. The scale\n   * factor is the number after `@` in the filename, or `1` if not present.\n   */\n  public width: number | null = null;\n  /**\n   * If the asset is an image, the height of the image data divided by the scale factor. The scale factor is the number after `@` in the filename, or `1` if not present.\n   */\n  public height: number | null = null;\n\n  private downloading: boolean = false;\n\n  /**\n   * Whether the asset has finished downloading from a call to [`downloadAsync()`](#downloadasync).\n   */\n  public downloaded: boolean = false;\n\n  private _downloadCallbacks: DownloadPromiseCallbacks[] = [];\n\n  constructor({ name, type, hash = null, uri, width, height }: AssetDescriptor) {\n    this.name = name;\n    this.type = type;\n    this.hash = hash;\n    this.uri = uri;\n\n    if (typeof width === 'number') {\n      this.width = width;\n    }\n    if (typeof height === 'number') {\n      this.height = height;\n    }\n\n    if (hash) {\n      this.localUri = getLocalAssetUri(hash, type);\n      if (this.localUri?.startsWith(ANDROID_EMBEDDED_URL_BASE_RESOURCE)) {\n        // Treat Android embedded resources as not downloaded state, because the uri is not direct accessible.\n        this.uri = this.localUri;\n        this.localUri = null;\n      } else if (this.localUri) {\n        this.downloaded = true;\n      }\n    }\n\n    if (Platform.OS === 'web') {\n      if (!name) {\n        this.name = AssetUris.getFilename(uri);\n      }\n      if (!type) {\n        this.type = AssetUris.getFileExtension(uri);\n      }\n    }\n  }\n\n  // @needsAudit\n  /**\n   * A helper that wraps `Asset.fromModule(module).downloadAsync` for convenience.\n   * @param moduleId An array of `require('path/to/file')` or external network URLs. Can also be\n   * just one module or URL without an Array.\n   * @return Returns a Promise that fulfills with an array of `Asset`s when the asset(s) has been\n   * saved to disk.\n   * @example\n   * ```ts\n   * const [{ localUri }] = await Asset.loadAsync(require('./assets/snack-icon.png'));\n   * ```\n   */\n  static loadAsync(moduleId: number | number[] | string | string[]): Promise<Asset[]> {\n    const moduleIds = Array.isArray(moduleId) ? moduleId : [moduleId];\n    return Promise.all(moduleIds.map((moduleId) => Asset.fromModule(moduleId).downloadAsync()));\n  }\n\n  // @needsAudit\n  /**\n   * Returns the [`Asset`](#asset) instance representing an asset given its module or URL.\n   * @param virtualAssetModule The value of `require('path/to/file')` for the asset or external\n   * network URL\n   * @return The [`Asset`](#asset) instance for the asset.\n   */\n  static fromModule(\n    virtualAssetModule: number | string | { uri: string; width: number; height: number }\n  ): Asset {\n    if (typeof virtualAssetModule === 'string') {\n      return Asset.fromURI(virtualAssetModule);\n    }\n    if (\n      typeof virtualAssetModule === 'object' &&\n      'uri' in virtualAssetModule &&\n      typeof virtualAssetModule.uri === 'string'\n    ) {\n      const extension = AssetUris.getFileExtension(virtualAssetModule.uri);\n      return new Asset({\n        name: '',\n        type: extension.startsWith('.') ? extension.substring(1) : extension,\n        hash: null,\n        uri: virtualAssetModule.uri,\n        width: virtualAssetModule.width,\n        height: virtualAssetModule.height,\n      });\n    }\n\n    const meta = getAssetByID(virtualAssetModule);\n    if (!meta) {\n      throw new Error(`Module \"${virtualAssetModule}\" is missing from the asset registry`);\n    }\n\n    // Outside of the managed env we need the moduleId to initialize the asset\n    // because resolveAssetSource depends on it\n    if (!IS_ENV_WITH_LOCAL_ASSETS) {\n      // null-check is performed above with `getAssetByID`.\n      const { uri } = resolveAssetSource(virtualAssetModule)!;\n\n      const asset = new Asset({\n        name: meta.name,\n        type: meta.type,\n        hash: meta.hash,\n        uri,\n        width: meta.width,\n        height: meta.height,\n      });\n\n      // For images backward compatibility,\n      // keeps localUri the same as uri for React Native's Image that\n      // works fine with drawable resource names.\n      if (Platform.OS === 'android' && !uri.includes(':') && (meta.width || meta.height)) {\n        asset.localUri = asset.uri;\n        asset.downloaded = true;\n      }\n\n      Asset.byHash[meta.hash] = asset;\n      return asset;\n    }\n\n    return Asset.fromMetadata(meta);\n  }\n\n  // @docsMissing\n  static fromMetadata(meta: AssetMetadata): Asset {\n    // The hash of the whole asset, not to be confused with the hash of a specific file returned\n    // from `selectAssetSource`\n    const metaHash = meta.hash;\n    if (Asset.byHash[metaHash]) {\n      return Asset.byHash[metaHash];\n    }\n\n    const { uri, hash } = selectAssetSource(meta);\n    const asset = new Asset({\n      name: meta.name,\n      type: meta.type,\n      hash,\n      uri,\n      width: meta.width,\n      height: meta.height,\n    });\n    Asset.byHash[metaHash] = asset;\n    return asset;\n  }\n\n  // @docsMissing\n  static fromURI(uri: string): Asset {\n    if (Asset.byUri[uri]) {\n      return Asset.byUri[uri];\n    }\n\n    // Possibly a Base64-encoded URI\n    let type = '';\n    if (uri.indexOf(';base64') > -1) {\n      type = uri.split(';')[0].split('/')[1];\n    } else {\n      const extension = AssetUris.getFileExtension(uri);\n      type = extension.startsWith('.') ? extension.substring(1) : extension;\n    }\n\n    const asset = new Asset({\n      name: '',\n      type,\n      hash: null,\n      uri,\n    });\n\n    Asset.byUri[uri] = asset;\n\n    return asset;\n  }\n\n  // @needsAudit\n  /**\n   * Downloads the asset data to a local file in the device's cache directory. Once the returned\n   * promise is fulfilled without error, the [`localUri`](#localuri) field of this asset points\n   * to a local file containing the asset data. The asset is only downloaded if an up-to-date local\n   * file for the asset isn't already present due to an earlier download. The downloaded `Asset`\n   * will be returned when the promise is resolved.\n   * @return Returns a Promise which fulfills with an `Asset` instance.\n   */\n  async downloadAsync(): Promise<this> {\n    if (this.downloaded) {\n      return this;\n    }\n    if (this.downloading) {\n      await new Promise<void>((resolve, reject) => {\n        this._downloadCallbacks.push({ resolve, reject });\n      });\n      return this;\n    }\n    this.downloading = true;\n\n    try {\n      if (Platform.OS === 'web') {\n        if (ImageAssets.isImageType(this.type)) {\n          const { width, height, name } = await ImageAssets.getImageInfoAsync(this.uri);\n          this.width = width;\n          this.height = height;\n          this.name = name;\n        } else {\n          this.name = AssetUris.getFilename(this.uri);\n        }\n      }\n      this.localUri = await downloadAsync(this.uri, this.hash, this.type);\n\n      this.downloaded = true;\n      this._downloadCallbacks.forEach(({ resolve }) => resolve());\n    } catch (e: any) {\n      this._downloadCallbacks.forEach(({ reject }) => reject(e));\n      throw e;\n    } finally {\n      this.downloading = false;\n      this._downloadCallbacks = [];\n    }\n    return this;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _ListAccordionGroup=require(\"./ListAccordionGroup\");var _utils=require(\"./utils\");var _theming=require(\"../../core/theming\");var _MaterialCommunityIcon=_interopRequireDefault(require(\"../MaterialCommunityIcon\"));var _TouchableRipple=_interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));var _Text=_interopRequireDefault(require(\"../Typography/Text\"));function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}var ListAccordion=function ListAccordion(_ref){var _theme$colors,_theme$colors2;var left=_ref.left,right=_ref.right,title=_ref.title,description=_ref.description,children=_ref.children,themeOverrides=_ref.theme,titleStyle=_ref.titleStyle,descriptionStyle=_ref.descriptionStyle,_ref$titleNumberOfLin=_ref.titleNumberOfLines,titleNumberOfLines=_ref$titleNumberOfLin===void 0?1:_ref$titleNumberOfLin,_ref$descriptionNumbe=_ref.descriptionNumberOfLines,descriptionNumberOfLines=_ref$descriptionNumbe===void 0?2:_ref$descriptionNumbe,customRippleColor=_ref.rippleColor,style=_ref.style,containerStyle=_ref.containerStyle,contentStyle=_ref.contentStyle,id=_ref.id,testID=_ref.testID,background=_ref.background,onPress=_ref.onPress,onLongPress=_ref.onLongPress,delayLongPress=_ref.delayLongPress,expandedProp=_ref.expanded,accessibilityLabel=_ref.accessibilityLabel,_ref$pointerEvents=_ref.pointerEvents,pointerEvents=_ref$pointerEvents===void 0?'none':_ref$pointerEvents,titleMaxFontSizeMultiplier=_ref.titleMaxFontSizeMultiplier,descriptionMaxFontSizeMultiplier=_ref.descriptionMaxFontSizeMultiplier;var theme=(0,_theming.useInternalTheme)(themeOverrides);var _React$useState=React.useState(expandedProp||false),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),expanded=_React$useState2[0],setExpanded=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),alignToTop=_React$useState4[0],setAlignToTop=_React$useState4[1];var onDescriptionTextLayout=function onDescriptionTextLayout(event){if(!theme.isV3){return;}var nativeEvent=event.nativeEvent;setAlignToTop(nativeEvent.lines.length>=2);};var handlePressAction=function handlePressAction(e){onPress===null||onPress===void 0?void 0:onPress(e);if(expandedProp===undefined){setExpanded(function(expanded){return!expanded;});}};var expandedInternal=expandedProp!==undefined?expandedProp:expanded;var groupContext=React.useContext(_ListAccordionGroup.ListAccordionGroupContext);if(groupContext!==null&&(id===undefined||id===null||id==='')){throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');}var isExpanded=groupContext?groupContext.expandedId===id:expandedInternal;var _getAccordionColors=(0,_utils.getAccordionColors)({theme:theme,isExpanded:isExpanded,customRippleColor:customRippleColor}),titleColor=_getAccordionColors.titleColor,descriptionColor=_getAccordionColors.descriptionColor,titleTextColor=_getAccordionColors.titleTextColor,rippleColor=_getAccordionColors.rippleColor;var handlePress=groupContext&&id!==undefined?function(){return groupContext.onAccordionPress(id);}:handlePressAction;return React.createElement(_reactNative.View,null,React.createElement(_reactNative.View,{style:{backgroundColor:theme===null||theme===void 0||(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.background}},React.createElement(_TouchableRipple.default,{style:[theme.isV3?styles.containerV3:styles.container,style],onPress:handlePress,onLongPress:onLongPress,delayLongPress:delayLongPress,rippleColor:rippleColor,accessibilityRole:\"button\",accessibilityState:{expanded:isExpanded},accessibilityLabel:accessibilityLabel,testID:testID,theme:theme,background:background,borderless:true},React.createElement(_reactNative.View,{style:[theme.isV3?styles.rowV3:styles.row,containerStyle],pointerEvents:pointerEvents},left?left({color:isExpanded?(_theme$colors2=theme.colors)===null||_theme$colors2===void 0?void 0:_theme$colors2.primary:descriptionColor,style:(0,_utils.getLeftStyles)(alignToTop,description,theme.isV3)}):null,React.createElement(_reactNative.View,{style:[theme.isV3?styles.itemV3:styles.item,styles.content,contentStyle]},React.createElement(_Text.default,{selectable:false,numberOfLines:titleNumberOfLines,style:[styles.title,{color:titleTextColor},titleStyle],maxFontSizeMultiplier:titleMaxFontSizeMultiplier},title),description?React.createElement(_Text.default,{selectable:false,numberOfLines:descriptionNumberOfLines,style:[styles.description,{color:descriptionColor},descriptionStyle],onTextLayout:onDescriptionTextLayout,maxFontSizeMultiplier:descriptionMaxFontSizeMultiplier},description):null),React.createElement(_reactNative.View,{style:[styles.item,description?styles.multiline:undefined]},right?right({isExpanded:isExpanded}):React.createElement(_MaterialCommunityIcon.default,{name:isExpanded?'chevron-up':'chevron-down',color:theme.isV3?descriptionColor:titleColor,size:24,direction:_reactNative.I18nManager.getConstants().isRTL?'rtl':'ltr'}))))),isExpanded?React.Children.map(children,function(child){if(left&&React.isValidElement(child)&&!child.props.left&&!child.props.right){return React.cloneElement(child,{style:[theme.isV3?styles.childV3:styles.child,child.props.style],theme:theme});}return child;}):null);};ListAccordion.displayName='List.Accordion';var styles=_reactNative.StyleSheet.create({container:{padding:8},containerV3:{paddingVertical:8,paddingRight:24},row:{flexDirection:'row',alignItems:'center'},rowV3:{flexDirection:'row',marginVertical:6},multiline:{height:40,alignItems:'center',justifyContent:'center'},title:{fontSize:16},description:{fontSize:14},item:{marginVertical:6,paddingLeft:8},itemV3:{paddingLeft:16},child:{paddingLeft:64},childV3:{paddingLeft:40},content:{flex:1,justifyContent:'center'}});var _default=exports.default=ListAccordion;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_ListAccordionGroup","_utils","_theming","_MaterialCommunityIcon","_interopRequireDefault","_TouchableRipple","_Text","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ListAccordion","_ref","_theme$colors","_theme$colors2","left","right","title","description","children","themeOverrides","theme","titleStyle","descriptionStyle","_ref$titleNumberOfLin","titleNumberOfLines","_ref$descriptionNumbe","descriptionNumberOfLines","customRippleColor","rippleColor","style","containerStyle","contentStyle","id","testID","background","onPress","onLongPress","delayLongPress","expandedProp","expanded","accessibilityLabel","_ref$pointerEvents","pointerEvents","titleMaxFontSizeMultiplier","descriptionMaxFontSizeMultiplier","useInternalTheme","_React$useState","useState","_React$useState2","_slicedToArray2","setExpanded","_React$useState3","_React$useState4","alignToTop","setAlignToTop","onDescriptionTextLayout","event","isV3","nativeEvent","lines","length","handlePressAction","undefined","expandedInternal","groupContext","useContext","ListAccordionGroupContext","Error","isExpanded","expandedId","_getAccordionColors","getAccordionColors","titleColor","descriptionColor","titleTextColor","handlePress","onAccordionPress","createElement","View","backgroundColor","colors","TouchableRipple","styles","containerV3","container","accessibilityRole","accessibilityState","borderless","rowV3","row","color","primary","getLeftStyles","itemV3","item","content","Text","selectable","numberOfLines","maxFontSizeMultiplier","onTextLayout","multiline","MaterialCommunityIcon","name","size","direction","I18nManager","getConstants","isRTL","Children","map","child","isValidElement","props","cloneElement","childV3","displayName","StyleSheet","create","padding","paddingVertical","paddingRight","flexDirection","alignItems","marginVertical","height","justifyContent","fontSize","paddingLeft","flex","_default","exports"],"sources":["/home/runner/workspace/node_modules/react-native-paper/src/components/List/ListAccordion.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  I18nManager,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TextLayoutEventData,\n  View,\n  ViewProps,\n  ViewStyle,\n  PressableAndroidRippleConfig,\n} from 'react-native';\n\nimport { ListAccordionGroupContext } from './ListAccordionGroup';\nimport type { Style } from './utils';\nimport { getAccordionColors, getLeftStyles } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = {\n  /**\n   * Title text for the list accordion.\n   */\n  title: React.ReactNode;\n  /**\n   * Description text for the list accordion.\n   */\n  description?: React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string; style: Style }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { isExpanded: boolean }) => React.ReactNode;\n  /**\n   * Whether the accordion is expanded\n   * If this prop is provided, the accordion will behave as a \"controlled component\".\n   * You'll need to update this prop when you want to toggle the component or on `onPress`.\n   */\n  expanded?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Style that is passed to the root TouchableRipple container.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to the outermost container that wraps the entire content, including left and right items and both title and description.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to the content container, which wraps the title and description.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * Specifies the largest possible scale a description font can reach.\n   */\n  descriptionMaxFontSizeMultiplier?: number;\n  /**\n   * Id is used for distinguishing specific accordion when using List.AccordionGroup. Property is required when using List.AccordionGroup and has no impact on behavior when using standalone List.Accordion.\n   */\n  id?: string | number;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the TouchableRipple. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * `pointerEvents` passed to the `View` container\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component used to display an expandable list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [expanded, setExpanded] = React.useState(true);\n *\n *   const handlePress = () => setExpanded(!expanded);\n *\n *   return (\n *     <List.Section title=\"Accordions\">\n *       <List.Accordion\n *         title=\"Uncontrolled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *\n *       <List.Accordion\n *         title=\"Controlled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\n *         expanded={expanded}\n *         onPress={handlePress}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *     </List.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst ListAccordion = ({\n  left,\n  right,\n  title,\n  description,\n  children,\n  theme: themeOverrides,\n  titleStyle,\n  descriptionStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  rippleColor: customRippleColor,\n  style,\n  containerStyle,\n  contentStyle,\n  id,\n  testID,\n  background,\n  onPress,\n  onLongPress,\n  delayLongPress,\n  expanded: expandedProp,\n  accessibilityLabel,\n  pointerEvents = 'none',\n  titleMaxFontSizeMultiplier,\n  descriptionMaxFontSizeMultiplier,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const [expanded, setExpanded] = React.useState<boolean>(\n    expandedProp || false\n  );\n  const [alignToTop, setAlignToTop] = React.useState(false);\n\n  const onDescriptionTextLayout = (\n    event: NativeSyntheticEvent<TextLayoutEventData>\n  ) => {\n    if (!theme.isV3) {\n      return;\n    }\n    const { nativeEvent } = event;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n\n  const handlePressAction = (e: GestureResponderEvent) => {\n    onPress?.(e);\n\n    if (expandedProp === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      setExpanded((expanded) => !expanded);\n    }\n  };\n\n  const expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n\n  const groupContext = React.useContext(ListAccordionGroupContext);\n  if (groupContext !== null && (id === undefined || id === null || id === '')) {\n    throw new Error(\n      'List.Accordion is used inside a List.AccordionGroup without specifying an id prop.'\n    );\n  }\n  const isExpanded = groupContext\n    ? groupContext.expandedId === id\n    : expandedInternal;\n\n  const { titleColor, descriptionColor, titleTextColor, rippleColor } =\n    getAccordionColors({\n      theme,\n      isExpanded,\n      customRippleColor,\n    });\n\n  const handlePress =\n    groupContext && id !== undefined\n      ? () => groupContext.onAccordionPress(id)\n      : handlePressAction;\n  return (\n    <View>\n      <View style={{ backgroundColor: theme?.colors?.background }}>\n        <TouchableRipple\n          style={[theme.isV3 ? styles.containerV3 : styles.container, style]}\n          onPress={handlePress}\n          onLongPress={onLongPress}\n          delayLongPress={delayLongPress}\n          rippleColor={rippleColor}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: isExpanded }}\n          accessibilityLabel={accessibilityLabel}\n          testID={testID}\n          theme={theme}\n          background={background}\n          borderless\n        >\n          <View\n            style={[theme.isV3 ? styles.rowV3 : styles.row, containerStyle]}\n            pointerEvents={pointerEvents}\n          >\n            {left\n              ? left({\n                  color: isExpanded ? theme.colors?.primary : descriptionColor,\n                  style: getLeftStyles(alignToTop, description, theme.isV3),\n                })\n              : null}\n            <View\n              style={[\n                theme.isV3 ? styles.itemV3 : styles.item,\n                styles.content,\n                contentStyle,\n              ]}\n            >\n              <Text\n                selectable={false}\n                numberOfLines={titleNumberOfLines}\n                style={[\n                  styles.title,\n                  {\n                    color: titleTextColor,\n                  },\n                  titleStyle,\n                ]}\n                maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n              >\n                {title}\n              </Text>\n              {description ? (\n                <Text\n                  selectable={false}\n                  numberOfLines={descriptionNumberOfLines}\n                  style={[\n                    styles.description,\n                    {\n                      color: descriptionColor,\n                    },\n                    descriptionStyle,\n                  ]}\n                  onTextLayout={onDescriptionTextLayout}\n                  maxFontSizeMultiplier={descriptionMaxFontSizeMultiplier}\n                >\n                  {description}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={[styles.item, description ? styles.multiline : undefined]}\n            >\n              {right ? (\n                right({\n                  isExpanded: isExpanded,\n                })\n              ) : (\n                <MaterialCommunityIcon\n                  name={isExpanded ? 'chevron-up' : 'chevron-down'}\n                  color={theme.isV3 ? descriptionColor : titleColor}\n                  size={24}\n                  direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n                />\n              )}\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n\n      {isExpanded\n        ? React.Children.map(children, (child) => {\n            if (\n              left &&\n              React.isValidElement(child) &&\n              !child.props.left &&\n              !child.props.right\n            ) {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                style: [\n                  theme.isV3 ? styles.childV3 : styles.child,\n                  child.props.style,\n                ],\n                theme,\n              });\n            }\n\n            return child;\n          })\n        : null}\n    </View>\n  );\n};\n\nListAccordion.displayName = 'List.Accordion';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  rowV3: {\n    flexDirection: 'row',\n    marginVertical: 6,\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8,\n  },\n  itemV3: {\n    paddingLeft: 16,\n  },\n  child: {\n    paddingLeft: 64,\n  },\n  childV3: {\n    paddingLeft: 40,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default ListAccordion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
#!/bin/bash

# This script fixes potential issues with the expo-configure-project.sh
# generated by the Expo build process

echo "Checking for Expo configuration scripts..."

# Find all instances of expo-configure-project.sh
EXPO_SCRIPTS=$(find ./Pods -name "expo-configure-project.sh" 2>/dev/null)

if [ -z "$EXPO_SCRIPTS" ]; then
  echo "No expo-configure-project.sh scripts found. Nothing to fix."
  exit 0
fi

echo "Found the following Expo configuration scripts:"
echo "$EXPO_SCRIPTS"
echo ""

# For each script found, ensure it has proper permissions and create a backup
for SCRIPT in $EXPO_SCRIPTS; do
  echo "Processing $SCRIPT..."
  
  # Create a backup if it doesn't exist
  if [ ! -f "${SCRIPT}.backup" ]; then
    echo "Creating backup at ${SCRIPT}.backup"
    cp "$SCRIPT" "${SCRIPT}.backup"
  fi
  
  # Fix permissions
  echo "Setting execute permissions"
  chmod +x "$SCRIPT"
  
  # Check if the script has Node path issues
  if grep -q "expo-constants" "$SCRIPT"; then
    echo "Fixing Node.js path issues in $SCRIPT"
    
    # Create a fixed version that more reliably finds the expo-constants path
    cat > "$SCRIPT" << 'EOL'
#!/bin/sh

# This is a fixed version of the Expo configuration script
# that works more reliably for native builds

set -e

# Find node binary
NODE_BINARY=$(command -v node || command -v nodejs)
if [ -z "$NODE_BINARY" ]; then
  echo "error: Could not find Node.js binary. Please ensure Node.js is installed and in your PATH."
  exit 0 # Exit with success to prevent build failures
fi

echo "Using Node.js at: $NODE_BINARY"

# Try to safely execute the configuration
$NODE_BINARY --print "
try {
  const path = require('path');
  const fs = require('fs');
  
  let constantsPath;
  try {
    // Try to find expo-constants more reliably
    constantsPath = require.resolve('expo-constants/package.json');
    constantsPath = path.dirname(constantsPath);
  } catch (e) {
    console.error('Could not find expo-constants module. Skipping configuration.');
    process.exit(0);
  }
  
  const scriptPath = path.join(constantsPath, 'scripts', 'ios-configure-project.js');
  
  if (fs.existsSync(scriptPath)) {
    console.log('Found and executing: ' + scriptPath);
    require(scriptPath);
  } else {
    console.log('Configuration script not found at: ' + scriptPath);
    console.log('Skipping Expo project configuration.');
  }
} catch (e) {
  console.error('Error during Expo project configuration:');
  console.error(e);
  // Exit with success to prevent build failures
  process.exit(0);
}
"
EOL
    
    # Ensure the script is executable
    chmod +x "$SCRIPT"
    echo "Fixed $SCRIPT successfully"
  else
    echo "$SCRIPT does not appear to need fixing"
  fi
  
  echo ""
done

echo "All Expo configuration scripts have been processed."
echo "You can now try building the project again."